Search.setIndex({"alltitles": {" API reference": [[0, null]], " ECC in Libraries": [[103, null]], " Installation": [[102, null]], " Notebooks": [[118, null]], " References": [[119, null]], "Accumulating polynomials": [[114, "Accumulating-polynomials"]], "Analysis": [[111, "Analysis"]], "BearSSL": [[103, "bearssl"]], "BoringSSL": [[103, "boringssl"]], "Botan": [[103, "botan"]], "BouncyCastle": [[103, "bouncycastle"]], "Building": [[106, "Building"]], "Code generation": [[106, null]], "Codegen": [[102, "id2"]], "Computing ZVP points": [[114, "Computing-ZVP-points"]], "Computing addition chains": [[114, "Computing-addition-chains"]], "Computing the factor sets": [[114, "Computing-the-factor-sets"]], "Configuration space": [[107, null]], "Coordinate systems": [[107, "Coordinate-systems"]], "Core": [[102, "id1"]], "Correlation Power Analysis": [[104, null]], "DPA on leakage traces simulated by EmulatorTarget.": [[105, "DPA-on-leakage-traces-simulated-by-EmulatorTarget."]], "Device setup": [[109, "Device-setup"]], "Differential Power Analysis": [[105, null]], "Distinguishing map and distinguishing tree building": [[114, "Distinguishing-map-and-distinguishing-tree-building"]], "ECDH": [[103, "ecdh"], [103, "id2"], [103, "id7"], [103, "id12"], [103, "id18"], [103, "id21"], [103, "id26"], [103, "id31"], [103, "id34"], [103, "id44"], [103, "id50"], [103, "id55"], [103, "id60"], [103, "id65"], [103, "id69"], [108, "ECDH"]], "ECDSA": [[103, "ecdsa"], [103, "id3"], [103, "id8"], [103, "id13"], [103, "id16"], [103, "id19"], [103, "id22"], [103, "id27"], [103, "id32"], [103, "id36"], [103, "id45"], [103, "id47"], [103, "id51"], [103, "id56"], [103, "id61"], [103, "id66"], [103, "id70"], [108, "ECDSA"]], "ECTester": [[116, "ECTester"]], "EPA-based reverse engineering": [[110, null]], "Ed25519": [[103, "ed25519"], [103, "id5"], [103, "id10"], [103, "id24"], [103, "id29"], [103, "id38"], [103, "id48"], [103, "id58"], [103, "id63"]], "EdDSA": [[103, "eddsa"]], "Emulation and leakage simulation": [[108, null]], "Emulator functionality": [[108, "Emulator-functionality"]], "Enumerating configurations": [[107, "Enumerating-configurations"]], "Evaluating the effectiveness of the attack": [[104, "Evaluating-the-effectiveness-of-the-attack"], [105, "Evaluating-the-effectiveness-of-the-attack"]], "Evaluation": [[114, "Evaluation"]], "Examples": [[2, "examples"], [3, "examples"]], "Expand": [[111, "Expand"]], "Exploration": [[110, "Exploration"], [112, "Exploration"], [114, "Exploration"]], "Exploration of formulas in open-source ECC libraries": [[111, null]], "Factor sets": [[114, "Factor-sets"]], "Formulas": [[113, "Formulas"]], "Generating": [[106, "Generating"]], "Go": [[103, "go"]], "Initialisation": [[104, "Initialisation"], [105, "Initialisation"], [108, "Initialisation"], [115, "Initialisation"]], "Intel IPP cryptography": [[103, "intel-ipp-cryptography"]], "Key agreement": [[115, "Key-agreement"]], "Key generation": [[108, "Key-generation"], [115, "Key-generation"]], "LEIA": [[116, "LEIA"]], "Leakage simulation": [[108, "Leakage-simulation"]], "Leakage trace of scalar multiplication": [[108, "Leakage-trace-of-scalar-multiplication"]], "LibreSSL": [[103, "libressl"]], "License": [[101, "license"]], "Loading the formulas": [[114, "Loading-the-formulas"]], "Measurement": [[109, null], [109, "id1"]], "Method simulation": [[112, "Method-simulation"]], "Miscellaneous": [[110, "Miscellaneous"]], "Miscellaneous analysis": [[114, "Miscellaneous-analysis"]], "Models": [[107, "Models"]], "NSS": [[103, "nss"]], "Nettle": [[103, "nettle"]], "Notebooks": [[102, "notebooks"]], "OpenSSL": [[103, "openssl"]], "Oracle simulation": [[112, "Oracle-simulation"]], "Oscilloscope setup": [[109, "Oscilloscope-setup"]], "P-224": [[103, "p-224"]], "P-256": [[103, "p-256"], [103, "id54"]], "P-256 from HACL*": [[103, "p-256-from-hacl"]], "P-384": [[103, "p-384"], [103, "id40"]], "P-521": [[103, "p-521"], [103, "id41"]], "PCSC": [[116, "PCSC"]], "Performing the attack": [[104, "Performing-the-attack"], [105, "Performing-the-attack"]], "Pippenger parameters": [[103, "id72"]], "Primitives": [[103, "primitives"], [103, "id1"], [103, "id6"], [103, "id11"], [103, "id15"], [103, "id17"], [103, "id20"], [103, "id25"], [103, "id30"], [103, "id33"], [103, "id39"], [103, "id43"], [103, "id46"], [103, "id49"], [103, "id53"], [103, "id59"], [103, "id64"], [103, "id68"]], "RPA-based reverse-engineering": [[112, null]], "Remapping": [[114, "Remapping"]], "Requirements": [[102, "requirements"]], "Reverse-engineering": [[110, "Reverse-engineering"], [112, "Reverse-engineering"], [114, "Reverse-engineering"]], "Running": [[106, "Running"]], "Running on the host": [[106, "Running-on-the-host"]], "SPA": [[108, "SPA"]], "Scalar multiplication": [[108, "Scalar-multiplication"]], "Scalar multipliers": [[107, "Scalar-multipliers"], [113, "Scalar-multipliers"]], "Setting private and public key": [[108, "Setting-private-and-public-key"]], "Signing": [[115, "Signing"]], "Simulation": [[115, null]], "Smartcards": [[116, null]], "Structural reverse-engineering": [[113, null]], "Submodules": [[1, "submodules"], [7, "submodules"], [14, "submodules"], [28, "submodules"], [35, "submodules"], [49, "submodules"], [54, "submodules"], [58, "submodules"], [64, "submodules"], [69, "submodules"], [72, "submodules"], [84, "submodules"], [95, "submodules"]], "Subpackages": [[1, "subpackages"], [7, "subpackages"], [53, "subpackages"]], "Success rate with changing number of traces": [[104, "Success-rate-with-changing-number-of-traces"], [105, "Success-rate-with-changing-number-of-traces"]], "Success rate with fixed number of traces and changing noise": [[104, "Success-rate-with-fixed-number-of-traces-and-changing-noise"], [105, "Success-rate-with-fixed-number-of-traces-and-changing-noise"]], "SunEC": [[103, "sunec"]], "SymCrypt": [[103, "symcrypt"]], "Table of Contents": [[103, "table-of-contents"]], "The formulas": [[111, "The-formulas"]], "Visualization": [[109, "Visualization"], [117, null]], "Walking the trace": [[115, "Walking-the-trace"]], "What about (asymmetric) noise?": [[112, "What-about-(asymmetric)-noise?"]], "What about (symmetric) noise?": [[112, "What-about-(symmetric)-noise?"]], "X25519": [[103, "x25519"], [103, "id4"], [103, "id9"], [103, "id14"], [103, "id28"], [103, "id62"], [103, "id67"]], "ZVP-based reverse-engineering": [[114, null]], "fastecdsa": [[103, "fastecdsa"]], "libgcrypt": [[103, "libgcrypt"]], "libsecp256k1": [[103, "libsecp256k1"]], "libtomcrypt": [[103, "libtomcrypt"]], "mbedTLS": [[103, "mbedtls"]], "micro-ecc": [[103, "micro-ecc"]], "pyecsca [p\u026a\u025btska]": [[101, null]], "pyecsca.codegen package": [[1, null]], "pyecsca.codegen.builder module": [[2, null]], "pyecsca.codegen.client module": [[3, null]], "pyecsca.codegen.common module": [[4, null]], "pyecsca.codegen.render module": [[5, null]], "pyecsca.codegen.templates package": [[6, null]], "pyecsca.ec package": [[7, null]], "pyecsca.ec.configuration module": [[8, null]], "pyecsca.ec.context module": [[9, null]], "pyecsca.ec.coordinates module": [[10, null]], "pyecsca.ec.curve module": [[11, null]], "pyecsca.ec.divpoly module": [[12, null]], "pyecsca.ec.error module": [[13, null]], "pyecsca.ec.formula package": [[14, null]], "pyecsca.ec.formula.base module": [[15, null]], "pyecsca.ec.formula.code module": [[16, null]], "pyecsca.ec.formula.efd module": [[17, null]], "pyecsca.ec.formula.expand module": [[18, null]], "pyecsca.ec.formula.fake module": [[19, null]], "pyecsca.ec.formula.fliparoo module": [[20, null]], "pyecsca.ec.formula.graph module": [[21, null]], "pyecsca.ec.formula.metrics module": [[22, null]], "pyecsca.ec.formula.partitions module": [[23, null]], "pyecsca.ec.formula.switch_sign module": [[24, null]], "pyecsca.ec.formula.unroll module": [[25, null]], "pyecsca.ec.key_agreement module": [[26, null]], "pyecsca.ec.key_generation module": [[27, null]], "pyecsca.ec.mod package": [[28, null]], "pyecsca.ec.mod.base module": [[29, null]], "pyecsca.ec.mod.flint module": [[30, null]], "pyecsca.ec.mod.gmp module": [[31, null]], "pyecsca.ec.mod.raw module": [[32, null]], "pyecsca.ec.mod.symbolic module": [[33, null]], "pyecsca.ec.model module": [[34, null]], "pyecsca.ec.mult package": [[35, null]], "pyecsca.ec.mult.base module": [[36, null]], "pyecsca.ec.mult.binary module": [[37, null]], "pyecsca.ec.mult.comb module": [[38, null]], "pyecsca.ec.mult.fixed module": [[39, null]], "pyecsca.ec.mult.ladder module": [[40, null]], "pyecsca.ec.mult.naf module": [[41, null]], "pyecsca.ec.mult.window module": [[42, null]], "pyecsca.ec.op module": [[43, null]], "pyecsca.ec.params module": [[44, null]], "pyecsca.ec.point module": [[45, null]], "pyecsca.ec.scalar module": [[46, null]], "pyecsca.ec.signature module": [[47, null]], "pyecsca.ec.transformations module": [[48, null]], "pyecsca.misc package": [[49, null]], "pyecsca.misc.cache module": [[50, null]], "pyecsca.misc.cfg module": [[51, null]], "pyecsca.misc.utils module": [[52, null]], "pyecsca.sca package": [[53, null]], "pyecsca.sca.attack package": [[54, null]], "pyecsca.sca.attack.CPA module": [[55, null]], "pyecsca.sca.attack.DPA module": [[56, null]], "pyecsca.sca.attack.leakage_model module": [[57, null]], "pyecsca.sca.re package": [[58, null]], "pyecsca.sca.re.base module": [[59, null]], "pyecsca.sca.re.rpa module": [[60, null]], "pyecsca.sca.re.structural module": [[61, null]], "pyecsca.sca.re.tree module": [[62, null]], "pyecsca.sca.re.zvp module": [[63, null]], "pyecsca.sca.scope package": [[64, null]], "pyecsca.sca.scope.base module": [[65, null]], "pyecsca.sca.scope.chipwhisperer module": [[66, null]], "pyecsca.sca.scope.picoscope_alt module": [[67, null]], "pyecsca.sca.scope.picoscope_sdk module": [[68, null]], "pyecsca.sca.stacked_traces package": [[69, null]], "pyecsca.sca.stacked_traces.combine module": [[70, null]], "pyecsca.sca.stacked_traces.stacked_traces module": [[71, null]], "pyecsca.sca.target package": [[72, null]], "pyecsca.sca.target.ISO7816 module": [[73, null]], "pyecsca.sca.target.PCSC module": [[74, null]], "pyecsca.sca.target.base module": [[75, null]], "pyecsca.sca.target.binary module": [[76, null]], "pyecsca.sca.target.chipwhisperer module": [[77, null]], "pyecsca.sca.target.ectester module": [[78, null]], "pyecsca.sca.target.flash module": [[79, null]], "pyecsca.sca.target.leakage module": [[80, null]], "pyecsca.sca.target.leia module": [[81, null]], "pyecsca.sca.target.serial module": [[82, null]], "pyecsca.sca.target.simpleserial module": [[83, null]], "pyecsca.sca.trace package": [[84, null]], "pyecsca.sca.trace.align module": [[85, null]], "pyecsca.sca.trace.combine module": [[86, null]], "pyecsca.sca.trace.edit module": [[87, null]], "pyecsca.sca.trace.filter module": [[88, null]], "pyecsca.sca.trace.match module": [[89, null]], "pyecsca.sca.trace.plot module": [[90, null]], "pyecsca.sca.trace.process module": [[91, null]], "pyecsca.sca.trace.sampling module": [[92, null]], "pyecsca.sca.trace.test module": [[93, null]], "pyecsca.sca.trace.trace module": [[94, null]], "pyecsca.sca.trace_set package": [[95, null]], "pyecsca.sca.trace_set.base module": [[96, null]], "pyecsca.sca.trace_set.chipwhisperer module": [[97, null]], "pyecsca.sca.trace_set.hdf5 module": [[98, null]], "pyecsca.sca.trace_set.inspector module": [[99, null]], "pyecsca.sca.trace_set.pickle module": [[100, null]], "wolfSSL": [[103, "wolfssl"]], "x25519": [[103, "id23"], [103, "id37"], [103, "id42"], [103, "id52"], [103, "id57"], [103, "id71"]]}, "docnames": ["api", "api/pyecsca.codegen", "api/pyecsca.codegen.builder", "api/pyecsca.codegen.client", "api/pyecsca.codegen.common", "api/pyecsca.codegen.render", "api/pyecsca.codegen.templates", "api/pyecsca.ec", "api/pyecsca.ec.configuration", "api/pyecsca.ec.context", "api/pyecsca.ec.coordinates", "api/pyecsca.ec.curve", "api/pyecsca.ec.divpoly", "api/pyecsca.ec.error", "api/pyecsca.ec.formula", "api/pyecsca.ec.formula.base", "api/pyecsca.ec.formula.code", "api/pyecsca.ec.formula.efd", "api/pyecsca.ec.formula.expand", "api/pyecsca.ec.formula.fake", "api/pyecsca.ec.formula.fliparoo", "api/pyecsca.ec.formula.graph", "api/pyecsca.ec.formula.metrics", "api/pyecsca.ec.formula.partitions", "api/pyecsca.ec.formula.switch_sign", "api/pyecsca.ec.formula.unroll", "api/pyecsca.ec.key_agreement", "api/pyecsca.ec.key_generation", "api/pyecsca.ec.mod", "api/pyecsca.ec.mod.base", "api/pyecsca.ec.mod.flint", "api/pyecsca.ec.mod.gmp", "api/pyecsca.ec.mod.raw", "api/pyecsca.ec.mod.symbolic", "api/pyecsca.ec.model", "api/pyecsca.ec.mult", "api/pyecsca.ec.mult.base", "api/pyecsca.ec.mult.binary", "api/pyecsca.ec.mult.comb", "api/pyecsca.ec.mult.fixed", "api/pyecsca.ec.mult.ladder", "api/pyecsca.ec.mult.naf", "api/pyecsca.ec.mult.window", "api/pyecsca.ec.op", "api/pyecsca.ec.params", "api/pyecsca.ec.point", "api/pyecsca.ec.scalar", "api/pyecsca.ec.signature", "api/pyecsca.ec.transformations", "api/pyecsca.misc", "api/pyecsca.misc.cache", "api/pyecsca.misc.cfg", "api/pyecsca.misc.utils", "api/pyecsca.sca", "api/pyecsca.sca.attack", "api/pyecsca.sca.attack.CPA", "api/pyecsca.sca.attack.DPA", "api/pyecsca.sca.attack.leakage_model", "api/pyecsca.sca.re", "api/pyecsca.sca.re.base", "api/pyecsca.sca.re.rpa", "api/pyecsca.sca.re.structural", "api/pyecsca.sca.re.tree", "api/pyecsca.sca.re.zvp", "api/pyecsca.sca.scope", "api/pyecsca.sca.scope.base", "api/pyecsca.sca.scope.chipwhisperer", "api/pyecsca.sca.scope.picoscope_alt", "api/pyecsca.sca.scope.picoscope_sdk", "api/pyecsca.sca.stacked_traces", "api/pyecsca.sca.stacked_traces.combine", "api/pyecsca.sca.stacked_traces.stacked_traces", "api/pyecsca.sca.target", "api/pyecsca.sca.target.ISO7816", "api/pyecsca.sca.target.PCSC", "api/pyecsca.sca.target.base", "api/pyecsca.sca.target.binary", "api/pyecsca.sca.target.chipwhisperer", "api/pyecsca.sca.target.ectester", "api/pyecsca.sca.target.flash", "api/pyecsca.sca.target.leakage", "api/pyecsca.sca.target.leia", "api/pyecsca.sca.target.serial", "api/pyecsca.sca.target.simpleserial", "api/pyecsca.sca.trace", "api/pyecsca.sca.trace.align", "api/pyecsca.sca.trace.combine", "api/pyecsca.sca.trace.edit", "api/pyecsca.sca.trace.filter", "api/pyecsca.sca.trace.match", "api/pyecsca.sca.trace.plot", "api/pyecsca.sca.trace.process", "api/pyecsca.sca.trace.sampling", "api/pyecsca.sca.trace.test", "api/pyecsca.sca.trace.trace", "api/pyecsca.sca.trace_set", "api/pyecsca.sca.trace_set.base", "api/pyecsca.sca.trace_set.chipwhisperer", "api/pyecsca.sca.trace_set.hdf5", "api/pyecsca.sca.trace_set.inspector", "api/pyecsca.sca.trace_set.pickle", "index", "installation", "libraries", "notebook/CPA", "notebook/DPA", "notebook/codegen", "notebook/configuration_space", "notebook/emulator", "notebook/measurement", "notebook/re/epa", "notebook/re/formulas", "notebook/re/rpa", "notebook/re/structural", "notebook/re/zvp", "notebook/simulation", "notebook/smartcards", "notebook/visualization", "notebooks", "references"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2}, "filenames": ["api.rst", "api/pyecsca.codegen.rst", "api/pyecsca.codegen.builder.rst", "api/pyecsca.codegen.client.rst", "api/pyecsca.codegen.common.rst", "api/pyecsca.codegen.render.rst", "api/pyecsca.codegen.templates.rst", "api/pyecsca.ec.rst", "api/pyecsca.ec.configuration.rst", "api/pyecsca.ec.context.rst", "api/pyecsca.ec.coordinates.rst", "api/pyecsca.ec.curve.rst", "api/pyecsca.ec.divpoly.rst", "api/pyecsca.ec.error.rst", "api/pyecsca.ec.formula.rst", "api/pyecsca.ec.formula.base.rst", "api/pyecsca.ec.formula.code.rst", "api/pyecsca.ec.formula.efd.rst", "api/pyecsca.ec.formula.expand.rst", "api/pyecsca.ec.formula.fake.rst", "api/pyecsca.ec.formula.fliparoo.rst", "api/pyecsca.ec.formula.graph.rst", "api/pyecsca.ec.formula.metrics.rst", "api/pyecsca.ec.formula.partitions.rst", "api/pyecsca.ec.formula.switch_sign.rst", "api/pyecsca.ec.formula.unroll.rst", "api/pyecsca.ec.key_agreement.rst", "api/pyecsca.ec.key_generation.rst", "api/pyecsca.ec.mod.rst", "api/pyecsca.ec.mod.base.rst", "api/pyecsca.ec.mod.flint.rst", "api/pyecsca.ec.mod.gmp.rst", "api/pyecsca.ec.mod.raw.rst", "api/pyecsca.ec.mod.symbolic.rst", "api/pyecsca.ec.model.rst", "api/pyecsca.ec.mult.rst", "api/pyecsca.ec.mult.base.rst", "api/pyecsca.ec.mult.binary.rst", "api/pyecsca.ec.mult.comb.rst", "api/pyecsca.ec.mult.fixed.rst", "api/pyecsca.ec.mult.ladder.rst", "api/pyecsca.ec.mult.naf.rst", "api/pyecsca.ec.mult.window.rst", "api/pyecsca.ec.op.rst", "api/pyecsca.ec.params.rst", "api/pyecsca.ec.point.rst", "api/pyecsca.ec.scalar.rst", "api/pyecsca.ec.signature.rst", "api/pyecsca.ec.transformations.rst", "api/pyecsca.misc.rst", "api/pyecsca.misc.cache.rst", "api/pyecsca.misc.cfg.rst", "api/pyecsca.misc.utils.rst", "api/pyecsca.sca.rst", "api/pyecsca.sca.attack.rst", "api/pyecsca.sca.attack.CPA.rst", "api/pyecsca.sca.attack.DPA.rst", "api/pyecsca.sca.attack.leakage_model.rst", "api/pyecsca.sca.re.rst", "api/pyecsca.sca.re.base.rst", "api/pyecsca.sca.re.rpa.rst", "api/pyecsca.sca.re.structural.rst", "api/pyecsca.sca.re.tree.rst", "api/pyecsca.sca.re.zvp.rst", "api/pyecsca.sca.scope.rst", "api/pyecsca.sca.scope.base.rst", "api/pyecsca.sca.scope.chipwhisperer.rst", "api/pyecsca.sca.scope.picoscope_alt.rst", "api/pyecsca.sca.scope.picoscope_sdk.rst", "api/pyecsca.sca.stacked_traces.rst", "api/pyecsca.sca.stacked_traces.combine.rst", "api/pyecsca.sca.stacked_traces.stacked_traces.rst", "api/pyecsca.sca.target.rst", "api/pyecsca.sca.target.ISO7816.rst", "api/pyecsca.sca.target.PCSC.rst", "api/pyecsca.sca.target.base.rst", "api/pyecsca.sca.target.binary.rst", "api/pyecsca.sca.target.chipwhisperer.rst", "api/pyecsca.sca.target.ectester.rst", "api/pyecsca.sca.target.flash.rst", "api/pyecsca.sca.target.leakage.rst", "api/pyecsca.sca.target.leia.rst", "api/pyecsca.sca.target.serial.rst", "api/pyecsca.sca.target.simpleserial.rst", "api/pyecsca.sca.trace.rst", "api/pyecsca.sca.trace.align.rst", "api/pyecsca.sca.trace.combine.rst", "api/pyecsca.sca.trace.edit.rst", "api/pyecsca.sca.trace.filter.rst", "api/pyecsca.sca.trace.match.rst", "api/pyecsca.sca.trace.plot.rst", "api/pyecsca.sca.trace.process.rst", "api/pyecsca.sca.trace.sampling.rst", "api/pyecsca.sca.trace.test.rst", "api/pyecsca.sca.trace.trace.rst", "api/pyecsca.sca.trace_set.rst", "api/pyecsca.sca.trace_set.base.rst", "api/pyecsca.sca.trace_set.chipwhisperer.rst", "api/pyecsca.sca.trace_set.hdf5.rst", "api/pyecsca.sca.trace_set.inspector.rst", "api/pyecsca.sca.trace_set.pickle.rst", "index.rst", "installation.rst", "libraries.rst", "notebook/CPA.ipynb", "notebook/DPA.ipynb", "notebook/codegen.ipynb", "notebook/configuration_space.ipynb", "notebook/emulator.ipynb", "notebook/measurement.ipynb", "notebook/re/epa.ipynb", "notebook/re/formulas.ipynb", "notebook/re/rpa.ipynb", "notebook/re/structural.ipynb", "notebook/re/zvp.ipynb", "notebook/simulation.ipynb", "notebook/smartcards.ipynb", "notebook/visualization.ipynb", "notebooks.rst", "references.rst"], "indexentries": {"a (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.A", false]], "a_invariants() (in module pyecsca.ec.divpoly)": [[12, "pyecsca.ec.divpoly.a_invariants", false]], "absolute() (in module pyecsca.sca.trace.process)": [[91, "pyecsca.sca.trace.process.absolute", false]], "accumulation_order (accumulatormultiplier attribute)": [[36, "pyecsca.ec.mult.base.AccumulatorMultiplier.accumulation_order", false]], "accumulation_order (bgmwmultiplier attribute)": [[38, "pyecsca.ec.mult.comb.BGMWMultiplier.accumulation_order", false]], "accumulation_order (binarynafmultiplier attribute)": [[41, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.accumulation_order", false]], "accumulation_order (combmultiplier attribute)": [[38, "pyecsca.ec.mult.comb.CombMultiplier.accumulation_order", false]], "accumulation_order (doubleandaddmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.accumulation_order", false]], "accumulation_order (fixedwindowltrmultiplier attribute)": [[42, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.accumulation_order", false]], "accumulation_order (fullprecompmultiplier attribute)": [[39, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.accumulation_order", false]], "accumulation_order (ltrmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.LTRMultiplier.accumulation_order", false]], "accumulation_order (rtlmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.RTLMultiplier.accumulation_order", false]], "accumulation_order (slidingwindowmultiplier attribute)": [[42, "pyecsca.ec.mult.window.SlidingWindowMultiplier.accumulation_order", false]], "accumulation_order (windowboothmultiplier attribute)": [[42, "pyecsca.ec.mult.window.WindowBoothMultiplier.accumulation_order", false]], "accumulation_order (windownafmultiplier attribute)": [[41, "pyecsca.ec.mult.naf.WindowNAFMultiplier.accumulation_order", false]], "accumulationorder (class in pyecsca.ec.mult.base)": [[36, "pyecsca.ec.mult.base.AccumulationOrder", false]], "accumulatormultiplier (class in pyecsca.ec.mult.base)": [[36, "pyecsca.ec.mult.base.AccumulatorMultiplier", false]], "action (class in pyecsca.ec.context)": [[9, "pyecsca.ec.context.Action", false]], "action (node attribute)": [[9, "pyecsca.ec.context.Node.action", false]], "actions (defaultcontext attribute)": [[9, "pyecsca.ec.context.DefaultContext.actions", false]], "add (ecdsa_none attribute)": [[47, "pyecsca.ec.signature.ECDSA_NONE.add", false]], "add (ecdsa_sha1 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA1.add", false]], "add (ecdsa_sha224 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA224.add", false]], "add (ecdsa_sha256 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA256.add", false]], "add (ecdsa_sha384 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA384.add", false]], "add (ecdsa_sha512 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA512.add", false]], "add (optype attribute)": [[43, "pyecsca.ec.op.OpType.Add", false]], "add (signature attribute)": [[47, "pyecsca.ec.signature.Signature.add", false]], "add (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.add", false]], "add() (basetracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.BaseTraceManager.add", false]], "add() (cputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.add", false]], "add() (gputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.add", false]], "add() (in module pyecsca.sca.trace.combine)": [[86, "pyecsca.sca.trace.combine.add", false]], "add_node() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.add_node", false]], "add_note() (badfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.BadFliparoo.add_note", false]], "add_note() (cardconnectionexception method)": [[73, "pyecsca.sca.target.ISO7816.CardConnectionException.add_note", false]], "add_note() (chunkingexception method)": [[78, "pyecsca.sca.target.ectester.ChunkingException.add_note", false]], "add_note() (noninvertibleerror method)": [[13, "pyecsca.ec.error.NonInvertibleError.add_note", false]], "add_note() (noninvertiblewarning method)": [[13, "pyecsca.ec.error.NonInvertibleWarning.add_note", false]], "add_note() (nonresidueerror method)": [[13, "pyecsca.ec.error.NonResidueError.add_note", false]], "add_note() (nonresiduewarning method)": [[13, "pyecsca.ec.error.NonResidueWarning.add_note", false]], "add_note() (unsatisfiedassumptionerror method)": [[13, "pyecsca.ec.error.UnsatisfiedAssumptionError.add_note", false]], "add_note() (unsatisfiedassumptionwarning method)": [[13, "pyecsca.ec.error.UnsatisfiedAssumptionWarning.add_note", false]], "add_operation() (formulaaction method)": [[15, "pyecsca.ec.formula.base.FormulaAction.add_operation", false]], "add_result() (formulaaction method)": [[15, "pyecsca.ec.formula.base.FormulaAction.add_result", false]], "addfliparoo (class in pyecsca.ec.formula.fliparoo)": [[20, "pyecsca.ec.formula.fliparoo.AddFliparoo", false]], "additionefdformula (class in pyecsca.ec.formula.efd)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula", false]], "additionformula (class in pyecsca.ec.formula.base)": [[15, "pyecsca.ec.formula.base.AdditionFormula", false]], "addsubfliparoo (class in pyecsca.ec.formula.fliparoo)": [[20, "pyecsca.ec.formula.fliparoo.AddSubFliparoo", false]], "affine (keygeneration attribute)": [[27, "pyecsca.ec.key_generation.KeyGeneration.affine", false]], "affine_add() (ellipticcurve method)": [[11, "pyecsca.ec.curve.EllipticCurve.affine_add", false]], "affine_double() (ellipticcurve method)": [[11, "pyecsca.ec.curve.EllipticCurve.affine_double", false]], "affine_lift_x() (ellipticcurve method)": [[11, "pyecsca.ec.curve.EllipticCurve.affine_lift_x", false]], "affine_multiply() (ellipticcurve method)": [[11, "pyecsca.ec.curve.EllipticCurve.affine_multiply", false]], "affine_negate() (ellipticcurve method)": [[11, "pyecsca.ec.curve.EllipticCurve.affine_negate", false]], "affine_neutral (ellipticcurve property)": [[11, "pyecsca.ec.curve.EllipticCurve.affine_neutral", false]], "affine_random() (ellipticcurve method)": [[11, "pyecsca.ec.curve.EllipticCurve.affine_random", false]], "affinecoordinatemodel (class in pyecsca.ec.coordinates)": [[10, "pyecsca.ec.coordinates.AffineCoordinateModel", false]], "aid_current_version (ectestertarget attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.AID_CURRENT_VERSION", false]], "aid_current_version (ectestertargetleia attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.AID_CURRENT_VERSION", false]], "aid_current_version (ectestertargetpcsc attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.AID_CURRENT_VERSION", false]], "aid_prefix (ectestertarget attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.AID_PREFIX", false]], "aid_prefix (ectestertargetleia attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.AID_PREFIX", false]], "aid_prefix (ectestertargetpcsc attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.AID_PREFIX", false]], "aid_suffix_221 (ectestertarget attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.AID_SUFFIX_221", false]], "aid_suffix_221 (ectestertargetleia attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.AID_SUFFIX_221", false]], "aid_suffix_221 (ectestertargetpcsc attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.AID_SUFFIX_221", false]], "aid_suffix_222 (ectestertarget attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.AID_SUFFIX_222", false]], "aid_suffix_222 (ectestertargetleia attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.AID_SUFFIX_222", false]], "aid_suffix_222 (ectestertargetpcsc attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.AID_SUFFIX_222", false]], "aid_suffix_304 (ectestertarget attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.AID_SUFFIX_304", false]], "aid_suffix_304 (ectestertargetleia attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.AID_SUFFIX_304", false]], "aid_suffix_304 (ectestertargetpcsc attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.AID_SUFFIX_304", false]], "alg_ec_f2m (keyclassenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyClassEnum.ALG_EC_F2M", false]], "alg_ec_fp (keyclassenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyClassEnum.ALG_EC_FP", false]], "alg_ec_pace_gm (keyagreementenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_PACE_GM", false]], "alg_ec_svdp_dh (keyagreementenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DH", false]], "alg_ec_svdp_dh_kdf (keyagreementenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DH_KDF", false]], "alg_ec_svdp_dh_plain (keyagreementenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DH_PLAIN", false]], "alg_ec_svdp_dh_plain_xy (keyagreementenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DH_PLAIN_XY", false]], "alg_ec_svdp_dhc (keyagreementenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DHC", false]], "alg_ec_svdp_dhc_kdf (keyagreementenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DHC_KDF", false]], "alg_ec_svdp_dhc_plain (keyagreementenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DHC_PLAIN", false]], "alg_ecdsa_sha (signatureenum attribute)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.ALG_ECDSA_SHA", false]], "alg_ecdsa_sha_224 (signatureenum attribute)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.ALG_ECDSA_SHA_224", false]], "alg_ecdsa_sha_256 (signatureenum attribute)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.ALG_ECDSA_SHA_256", false]], "alg_ecdsa_sha_384 (signatureenum attribute)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.ALG_ECDSA_SHA_384", false]], "alg_ecdsa_sha_512 (signatureenum attribute)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.ALG_ECDSA_SHA_512", false]], "align_correlation() (in module pyecsca.sca.trace.align)": [[85, "pyecsca.sca.trace.align.align_correlation", false]], "align_dtw() (in module pyecsca.sca.trace.align)": [[85, "pyecsca.sca.trace.align.align_dtw", false]], "align_dtw_scale() (in module pyecsca.sca.trace.align)": [[85, "pyecsca.sca.trace.align.align_dtw_scale", false]], "align_offset() (in module pyecsca.sca.trace.align)": [[85, "pyecsca.sca.trace.align.align_offset", false]], "align_peaks() (in module pyecsca.sca.trace.align)": [[85, "pyecsca.sca.trace.align.align_peaks", false]], "align_sad() (in module pyecsca.sca.trace.align)": [[85, "pyecsca.sca.trace.align.align_sad", false]], "all (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.ALL", false]], "all_configurations() (in module pyecsca.ec.configuration)": [[8, "pyecsca.ec.configuration.all_configurations", false]], "allocate() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.allocate", false]], "allocate() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.allocate", false]], "allocate() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.allocate", false]], "allocate_ka() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.allocate_ka", false]], "allocate_ka() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.allocate_ka", false]], "allocate_ka() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.allocate_ka", false]], "allocate_sig() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.allocate_sig", false]], "allocate_sig() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.allocate_sig", false]], "allocate_sig() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.allocate_sig", false]], "allocatekaresponse (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.AllocateKaResponse", false]], "allocateresponse (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.AllocateResponse", false]], "allocatesigresponse (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.AllocateSigResponse", false]], "always (doubleandaddmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.always", false]], "always (fullprecompmultiplier attribute)": [[39, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.always", false]], "always (ltrmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.LTRMultiplier.always", false]], "always (rtlmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.RTLMultiplier.always", false]], "ancestors (node property)": [[9, "pyecsca.ec.context.Node.ancestors", false], [62, "pyecsca.sca.re.tree.Node.ancestors", false]], "anchestors (node property)": [[9, "pyecsca.ec.context.Node.anchestors", false], [62, "pyecsca.sca.re.tree.Node.anchestors", false]], "append() (hdf5traceset method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.append", false]], "appletbaseenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.AppletBaseEnum", false]], "args (badfliparoo attribute)": [[20, "pyecsca.ec.formula.fliparoo.BadFliparoo.args", false]], "args (cardconnectionexception attribute)": [[73, "pyecsca.sca.target.ISO7816.CardConnectionException.args", false]], "args (chunkingexception attribute)": [[78, "pyecsca.sca.target.ectester.ChunkingException.args", false]], "args (noninvertibleerror attribute)": [[13, "pyecsca.ec.error.NonInvertibleError.args", false]], "args (noninvertiblewarning attribute)": [[13, "pyecsca.ec.error.NonInvertibleWarning.args", false]], "args (nonresidueerror attribute)": [[13, "pyecsca.ec.error.NonResidueError.args", false]], "args (nonresiduewarning attribute)": [[13, "pyecsca.ec.error.NonResidueWarning.args", false]], "args (unsatisfiedassumptionerror attribute)": [[13, "pyecsca.ec.error.UnsatisfiedAssumptionError.args", false]], "args (unsatisfiedassumptionwarning attribute)": [[13, "pyecsca.ec.error.UnsatisfiedAssumptionWarning.args", false]], "arm() (chipwhispererscope method)": [[66, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.arm", false]], "arm() (picoscopealt method)": [[67, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.arm", false]], "arm() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.arm", false]], "arm() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.arm", false]], "arm() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.arm", false]], "arm() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.arm", false]], "arm() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.arm", false]], "arm() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.arm", false]], "arm() (scope method)": [[65, "pyecsca.sca.scope.base.Scope.arm", false]], "as_completed() (taskexecutor method)": [[52, "pyecsca.misc.utils.TaskExecutor.as_completed", false]], "as_integer_ratio() (appletbaseenum method)": [[78, "pyecsca.sca.target.ectester.AppletBaseEnum.as_integer_ratio", false]], "as_integer_ratio() (cardprotocol method)": [[73, "pyecsca.sca.target.ISO7816.CardProtocol.as_integer_ratio", false]], "as_integer_ratio() (curveenum method)": [[78, "pyecsca.sca.target.ectester.CurveEnum.as_integer_ratio", false]], "as_integer_ratio() (exportenum method)": [[78, "pyecsca.sca.target.ectester.ExportEnum.as_integer_ratio", false]], "as_integer_ratio() (formatenum method)": [[78, "pyecsca.sca.target.ectester.FormatEnum.as_integer_ratio", false]], "as_integer_ratio() (instructionenum method)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.as_integer_ratio", false]], "as_integer_ratio() (keyagreementenum method)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.as_integer_ratio", false]], "as_integer_ratio() (keybuildenum method)": [[78, "pyecsca.sca.target.ectester.KeyBuildEnum.as_integer_ratio", false]], "as_integer_ratio() (keyclassenum method)": [[78, "pyecsca.sca.target.ectester.KeyClassEnum.as_integer_ratio", false]], "as_integer_ratio() (keyenum method)": [[78, "pyecsca.sca.target.ectester.KeyEnum.as_integer_ratio", false]], "as_integer_ratio() (keypairenum method)": [[78, "pyecsca.sca.target.ectester.KeypairEnum.as_integer_ratio", false]], "as_integer_ratio() (parameterenum method)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.as_integer_ratio", false]], "as_integer_ratio() (runmodeenum method)": [[78, "pyecsca.sca.target.ectester.RunModeEnum.as_integer_ratio", false]], "as_integer_ratio() (samplecoding method)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.as_integer_ratio", false]], "as_integer_ratio() (signatureenum method)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.as_integer_ratio", false]], "as_integer_ratio() (transformationenum method)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.as_integer_ratio", false]], "as_integer_ratio() (triggers method)": [[3, "pyecsca.codegen.client.Triggers.as_integer_ratio", false]], "assumptions (additionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.assumptions", false]], "assumptions (additionformula attribute)": [[15, "pyecsca.ec.formula.base.AdditionFormula.assumptions", false]], "assumptions (affinecoordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.AffineCoordinateModel.assumptions", false]], "assumptions (codeadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.assumptions", false]], "assumptions (codedifferentialadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.assumptions", false]], "assumptions (codedoublingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.assumptions", false]], "assumptions (codeformula attribute)": [[16, "pyecsca.ec.formula.code.CodeFormula.assumptions", false]], "assumptions (codeladderformula attribute)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.assumptions", false]], "assumptions (codenegationformula attribute)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.assumptions", false]], "assumptions (codescalingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.assumptions", false]], "assumptions (codetriplingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.assumptions", false]], "assumptions (coordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.CoordinateModel.assumptions", false]], "assumptions (differentialadditionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.assumptions", false]], "assumptions (differentialadditionformula attribute)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.assumptions", false]], "assumptions (doublingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.assumptions", false]], "assumptions (doublingformula attribute)": [[15, "pyecsca.ec.formula.base.DoublingFormula.assumptions", false]], "assumptions (efdformula attribute)": [[17, "pyecsca.ec.formula.efd.EFDFormula.assumptions", false]], "assumptions (fakeadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.assumptions", false]], "assumptions (fakedifferentialadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.assumptions", false]], "assumptions (fakedoublingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.assumptions", false]], "assumptions (fakeformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeFormula.assumptions", false]], "assumptions (fakeladderformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.assumptions", false]], "assumptions (fakenegationformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.assumptions", false]], "assumptions (fakescalingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.assumptions", false]], "assumptions (faketriplingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.assumptions", false]], "assumptions (formula attribute)": [[15, "pyecsca.ec.formula.base.Formula.assumptions", false]], "assumptions (formulagraph attribute)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.assumptions", false]], "assumptions (ladderefdformula attribute)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.assumptions", false]], "assumptions (ladderformula attribute)": [[15, "pyecsca.ec.formula.base.LadderFormula.assumptions", false]], "assumptions (negationefdformula attribute)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.assumptions", false]], "assumptions (negationformula attribute)": [[15, "pyecsca.ec.formula.base.NegationFormula.assumptions", false]], "assumptions (scalingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.assumptions", false]], "assumptions (scalingformula attribute)": [[15, "pyecsca.ec.formula.base.ScalingFormula.assumptions", false]], "assumptions (triplingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.assumptions", false]], "assumptions (triplingformula attribute)": [[15, "pyecsca.ec.formula.base.TriplingFormula.assumptions", false]], "assumptions_str (additionefdformula property)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.assumptions_str", false]], "assumptions_str (additionformula property)": [[15, "pyecsca.ec.formula.base.AdditionFormula.assumptions_str", false]], "assumptions_str (codeadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.assumptions_str", false]], "assumptions_str (codedifferentialadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.assumptions_str", false]], "assumptions_str (codedoublingformula property)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.assumptions_str", false]], "assumptions_str (codeformula property)": [[16, "pyecsca.ec.formula.code.CodeFormula.assumptions_str", false]], "assumptions_str (codeladderformula property)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.assumptions_str", false]], "assumptions_str (codenegationformula property)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.assumptions_str", false]], "assumptions_str (codescalingformula property)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.assumptions_str", false]], "assumptions_str (codetriplingformula property)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.assumptions_str", false]], "assumptions_str (differentialadditionefdformula property)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.assumptions_str", false]], "assumptions_str (differentialadditionformula property)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.assumptions_str", false]], "assumptions_str (doublingefdformula property)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.assumptions_str", false]], "assumptions_str (doublingformula property)": [[15, "pyecsca.ec.formula.base.DoublingFormula.assumptions_str", false]], "assumptions_str (efdformula property)": [[17, "pyecsca.ec.formula.efd.EFDFormula.assumptions_str", false]], "assumptions_str (fakeadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.assumptions_str", false]], "assumptions_str (fakedifferentialadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.assumptions_str", false]], "assumptions_str (fakedoublingformula property)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.assumptions_str", false]], "assumptions_str (fakeformula property)": [[19, "pyecsca.ec.formula.fake.FakeFormula.assumptions_str", false]], "assumptions_str (fakeladderformula property)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.assumptions_str", false]], "assumptions_str (fakenegationformula property)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.assumptions_str", false]], "assumptions_str (fakescalingformula property)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.assumptions_str", false]], "assumptions_str (faketriplingformula property)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.assumptions_str", false]], "assumptions_str (formula property)": [[15, "pyecsca.ec.formula.base.Formula.assumptions_str", false]], "assumptions_str (ladderefdformula property)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.assumptions_str", false]], "assumptions_str (ladderformula property)": [[15, "pyecsca.ec.formula.base.LadderFormula.assumptions_str", false]], "assumptions_str (negationefdformula property)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.assumptions_str", false]], "assumptions_str (negationformula property)": [[15, "pyecsca.ec.formula.base.NegationFormula.assumptions_str", false]], "assumptions_str (scalingefdformula property)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.assumptions_str", false]], "assumptions_str (scalingformula property)": [[15, "pyecsca.ec.formula.base.ScalingFormula.assumptions_str", false]], "assumptions_str (triplingefdformula property)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.assumptions_str", false]], "assumptions_str (triplingformula property)": [[15, "pyecsca.ec.formula.base.TriplingFormula.assumptions_str", false]], "astype() (combinedtrace method)": [[94, "pyecsca.sca.trace.trace.CombinedTrace.astype", false]], "astype() (trace method)": [[94, "pyecsca.sca.trace.trace.Trace.astype", false]], "atr (ectestertarget property)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.atr", false]], "atr (ectestertargetleia property)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.atr", false]], "atr (ectestertargetpcsc property)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.atr", false]], "atr (iso7816target property)": [[73, "pyecsca.sca.target.ISO7816.ISO7816Target.atr", false]], "atr (leiatarget property)": [[81, "pyecsca.sca.target.leia.LEIATarget.atr", false]], "atr (pcsctarget property)": [[74, "pyecsca.sca.target.PCSC.PCSCTarget.atr", false]], "average() (basetracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.BaseTraceManager.average", false]], "average() (cputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.average", false]], "average() (gputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.average", false]], "average() (in module pyecsca.sca.trace.combine)": [[86, "pyecsca.sca.trace.combine.average", false]], "average_and_variance() (basetracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.BaseTraceManager.average_and_variance", false]], "average_and_variance() (cputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.average_and_variance", false]], "average_and_variance() (gputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.average_and_variance", false]], "average_and_variance() (in module pyecsca.sca.trace.combine)": [[86, "pyecsca.sca.trace.combine.average_and_variance", false]], "b (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.B", false]], "b_invariants() (in module pyecsca.ec.divpoly)": [[12, "pyecsca.ec.divpoly.b_invariants", false]], "badfliparoo": [[20, "pyecsca.ec.formula.fliparoo.BadFliparoo", false]], "barrett (reduction attribute)": [[8, "pyecsca.ec.configuration.Reduction.BARRETT", false]], "base (multiplecontext attribute)": [[60, "pyecsca.sca.re.rpa.MultipleContext.base", false]], "base (multiplication attribute)": [[8, "pyecsca.ec.configuration.Multiplication.BASE", false]], "base (reduction attribute)": [[8, "pyecsca.ec.configuration.Reduction.BASE", false]], "base (squaring attribute)": [[8, "pyecsca.ec.configuration.Squaring.BASE", false]], "base_221 (appletbaseenum attribute)": [[78, "pyecsca.sca.target.ectester.AppletBaseEnum.BASE_221", false]], "base_222 (appletbaseenum attribute)": [[78, "pyecsca.sca.target.ectester.AppletBaseEnum.BASE_222", false]], "base_addition (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.base_addition", false]], "base_addition (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.base_addition", false]], "base_addition (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.base_addition", false]], "base_addition (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.base_addition", false]], "base_addition (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.base_addition", false]], "base_doubling (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.base_doubling", false]], "base_doubling (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.base_doubling", false]], "base_doubling (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.base_doubling", false]], "base_doubling (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.base_doubling", false]], "base_doubling (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.base_doubling", false]], "base_negation (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.base_negation", false]], "base_negation (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.base_negation", false]], "base_negation (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.base_negation", false]], "base_negation (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.base_negation", false]], "base_negation (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.base_negation", false]], "base_neutral (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.base_neutral", false]], "base_neutral (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.base_neutral", false]], "base_neutral (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.base_neutral", false]], "base_neutral (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.base_neutral", false]], "base_neutral (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.base_neutral", false]], "basetracemanager (class in pyecsca.sca.stacked_traces.combine)": [[70, "pyecsca.sca.stacked_traces.combine.BaseTraceManager", false]], "bgmwmultiplier (class in pyecsca.ec.mult.comb)": [[38, "pyecsca.ec.mult.comb.BGMWMultiplier", false]], "binary (binarytarget attribute)": [[76, "pyecsca.sca.target.binary.BinaryTarget.binary", false]], "binary (hosttarget attribute)": [[3, "pyecsca.codegen.client.HostTarget.binary", false]], "binarynafmultiplier (class in pyecsca.ec.mult.naf)": [[41, "pyecsca.ec.mult.naf.BinaryNAFMultiplier", false]], "binarytarget (class in pyecsca.sca.target.binary)": [[76, "pyecsca.sca.target.binary.BinaryTarget", false]], "bit (class in pyecsca.sca.attack.leakage_model)": [[57, "pyecsca.sca.attack.leakage_model.Bit", false]], "bit_count() (appletbaseenum method)": [[78, "pyecsca.sca.target.ectester.AppletBaseEnum.bit_count", false]], "bit_count() (cardprotocol method)": [[73, "pyecsca.sca.target.ISO7816.CardProtocol.bit_count", false]], "bit_count() (curveenum method)": [[78, "pyecsca.sca.target.ectester.CurveEnum.bit_count", false]], "bit_count() (exportenum method)": [[78, "pyecsca.sca.target.ectester.ExportEnum.bit_count", false]], "bit_count() (formatenum method)": [[78, "pyecsca.sca.target.ectester.FormatEnum.bit_count", false]], "bit_count() (instructionenum method)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.bit_count", false]], "bit_count() (keyagreementenum method)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.bit_count", false]], "bit_count() (keybuildenum method)": [[78, "pyecsca.sca.target.ectester.KeyBuildEnum.bit_count", false]], "bit_count() (keyclassenum method)": [[78, "pyecsca.sca.target.ectester.KeyClassEnum.bit_count", false]], "bit_count() (keyenum method)": [[78, "pyecsca.sca.target.ectester.KeyEnum.bit_count", false]], "bit_count() (keypairenum method)": [[78, "pyecsca.sca.target.ectester.KeypairEnum.bit_count", false]], "bit_count() (parameterenum method)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.bit_count", false]], "bit_count() (runmodeenum method)": [[78, "pyecsca.sca.target.ectester.RunModeEnum.bit_count", false]], "bit_count() (samplecoding method)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.bit_count", false]], "bit_count() (signatureenum method)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.bit_count", false]], "bit_count() (transformationenum method)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.bit_count", false]], "bit_count() (triggers method)": [[3, "pyecsca.codegen.client.Triggers.bit_count", false]], "bit_length() (appletbaseenum method)": [[78, "pyecsca.sca.target.ectester.AppletBaseEnum.bit_length", false]], "bit_length() (cardprotocol method)": [[73, "pyecsca.sca.target.ISO7816.CardProtocol.bit_length", false]], "bit_length() (curveenum method)": [[78, "pyecsca.sca.target.ectester.CurveEnum.bit_length", false]], "bit_length() (exportenum method)": [[78, "pyecsca.sca.target.ectester.ExportEnum.bit_length", false]], "bit_length() (flintmod method)": [[30, "pyecsca.ec.mod.flint.FlintMod.bit_length", false]], "bit_length() (formatenum method)": [[78, "pyecsca.sca.target.ectester.FormatEnum.bit_length", false]], "bit_length() (gmpmod method)": [[31, "pyecsca.ec.mod.gmp.GMPMod.bit_length", false]], "bit_length() (instructionenum method)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.bit_length", false]], "bit_length() (keyagreementenum method)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.bit_length", false]], "bit_length() (keybuildenum method)": [[78, "pyecsca.sca.target.ectester.KeyBuildEnum.bit_length", false]], "bit_length() (keyclassenum method)": [[78, "pyecsca.sca.target.ectester.KeyClassEnum.bit_length", false]], "bit_length() (keyenum method)": [[78, "pyecsca.sca.target.ectester.KeyEnum.bit_length", false]], "bit_length() (keypairenum method)": [[78, "pyecsca.sca.target.ectester.KeypairEnum.bit_length", false]], "bit_length() (mod method)": [[29, "pyecsca.ec.mod.base.Mod.bit_length", false]], "bit_length() (parameterenum method)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.bit_length", false]], "bit_length() (rawmod method)": [[32, "pyecsca.ec.mod.raw.RawMod.bit_length", false]], "bit_length() (runmodeenum method)": [[78, "pyecsca.sca.target.ectester.RunModeEnum.bit_length", false]], "bit_length() (samplecoding method)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.bit_length", false]], "bit_length() (signatureenum method)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.bit_length", false]], "bit_length() (symbolicmod method)": [[33, "pyecsca.ec.mod.symbolic.SymbolicMod.bit_length", false]], "bit_length() (transformationenum method)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.bit_length", false]], "bit_length() (triggers method)": [[3, "pyecsca.codegen.client.Triggers.bit_length", false]], "bit_length() (undefined method)": [[29, "pyecsca.ec.mod.base.Undefined.bit_length", false]], "bitlength (class in pyecsca.sca.attack.leakage_model)": [[57, "pyecsca.sca.attack.leakage_model.BitLength", false]], "booth() (in module pyecsca.ec.scalar)": [[46, "pyecsca.ec.scalar.booth", false]], "booth_window() (in module pyecsca.ec.scalar)": [[46, "pyecsca.ec.scalar.booth_window", false]], "booth_word() (in module pyecsca.ec.scalar)": [[46, "pyecsca.ec.scalar.booth_word", false]], "both (keyenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyEnum.BOTH", false]], "buffers (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.buffers", false]], "buffers (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.buffers", false]], "buffers (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.buffers", false]], "buffers (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.buffers", false]], "buffers (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.buffers", false]], "build() (in module pyecsca.codegen.render)": [[5, "pyecsca.codegen.render.build", false]], "build() (tree class method)": [[62, "pyecsca.sca.re.tree.Tree.build", false]], "build_keybuilder (keybuildenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyBuildEnum.BUILD_KEYBUILDER", false]], "build_keypair (keybuildenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyBuildEnum.BUILD_KEYPAIR", false]], "build_tree() (re method)": [[59, "pyecsca.sca.re.base.RE.build_tree", false]], "build_tree() (rpa method)": [[60, "pyecsca.sca.re.rpa.RPA.build_tree", false]], "calculate_difference_of_means() (dpa method)": [[56, "pyecsca.sca.attack.DPA.DPA.calculate_difference_of_means", false]], "can_sign (ecdsa_none property)": [[47, "pyecsca.ec.signature.ECDSA_NONE.can_sign", false]], "can_sign (ecdsa_sha1 property)": [[47, "pyecsca.ec.signature.ECDSA_SHA1.can_sign", false]], "can_sign (ecdsa_sha224 property)": [[47, "pyecsca.ec.signature.ECDSA_SHA224.can_sign", false]], "can_sign (ecdsa_sha256 property)": [[47, "pyecsca.ec.signature.ECDSA_SHA256.can_sign", false]], "can_sign (ecdsa_sha384 property)": [[47, "pyecsca.ec.signature.ECDSA_SHA384.can_sign", false]], "can_sign (ecdsa_sha512 property)": [[47, "pyecsca.ec.signature.ECDSA_SHA512.can_sign", false]], "can_sign (signature property)": [[47, "pyecsca.ec.signature.Signature.can_sign", false]], "can_verify (ecdsa_none property)": [[47, "pyecsca.ec.signature.ECDSA_NONE.can_verify", false]], "can_verify (ecdsa_sha1 property)": [[47, "pyecsca.ec.signature.ECDSA_SHA1.can_verify", false]], "can_verify (ecdsa_sha224 property)": [[47, "pyecsca.ec.signature.ECDSA_SHA224.can_verify", false]], "can_verify (ecdsa_sha256 property)": [[47, "pyecsca.ec.signature.ECDSA_SHA256.can_verify", false]], "can_verify (ecdsa_sha384 property)": [[47, "pyecsca.ec.signature.ECDSA_SHA384.can_verify", false]], "can_verify (ecdsa_sha512 property)": [[47, "pyecsca.ec.signature.ECDSA_SHA512.can_verify", false]], "can_verify (signature property)": [[47, "pyecsca.ec.signature.Signature.can_verify", false]], "capture() (chipwhispererscope method)": [[66, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.capture", false]], "capture() (picoscopealt method)": [[67, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.capture", false]], "capture() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.capture", false]], "capture() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.capture", false]], "capture() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.capture", false]], "capture() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.capture", false]], "capture() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.capture", false]], "capture() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.capture", false]], "capture() (scope method)": [[65, "pyecsca.sca.scope.base.Scope.capture", false]], "card_present (ectestertargetleia property)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.card_present", false]], "card_present (leiatarget property)": [[81, "pyecsca.sca.target.leia.LEIATarget.card_present", false]], "cardconnectionexception": [[73, "pyecsca.sca.target.ISO7816.CardConnectionException", false]], "cardprotocol (class in pyecsca.sca.target.iso7816)": [[73, "pyecsca.sca.target.ISO7816.CardProtocol", false]], "category (domainparameters attribute)": [[44, "pyecsca.ec.params.DomainParameters.category", false]], "cfg_map (map attribute)": [[62, "pyecsca.sca.re.tree.Map.cfg_map", false]], "cfgs (map property)": [[62, "pyecsca.sca.re.tree.Map.cfgs", false]], "cfgs (node attribute)": [[62, "pyecsca.sca.re.tree.Node.cfgs", false]], "channels (chipwhispererscope property)": [[66, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.channels", false]], "channels (picoscopealt property)": [[67, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.channels", false]], "channels (picoscopesdk attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.CHANNELS", false]], "channels (picoscopesdk property)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.channels", false]], "channels (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.CHANNELS", false]], "channels (ps3000ascope property)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.channels", false]], "channels (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.CHANNELS", false]], "channels (ps3000scope property)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.channels", false]], "channels (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.CHANNELS", false]], "channels (ps4000scope property)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.channels", false]], "channels (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.CHANNELS", false]], "channels (ps5000scope property)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.channels", false]], "channels (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.CHANNELS", false]], "channels (ps6000scope property)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.channels", false]], "channels (scope property)": [[65, "pyecsca.sca.scope.base.Scope.channels", false]], "char (simpleserialmessage attribute)": [[83, "pyecsca.sca.target.simpleserial.SimpleSerialMessage.char", false]], "children (node property)": [[9, "pyecsca.ec.context.Node.children", false], [62, "pyecsca.sca.re.tree.Node.children", false]], "chipwhispererscope (class in pyecsca.sca.scope.chipwhisperer)": [[66, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope", false]], "chipwhisperertarget (class in pyecsca.sca.target.chipwhisperer)": [[77, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget", false]], "chipwhisperertraceset (class in pyecsca.sca.trace_set.chipwhisperer)": [[97, "pyecsca.sca.trace_set.chipwhisperer.ChipWhispererTraceSet", false]], "chunk_size_from_ratio() (gputracemanager static method)": [[70, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.chunk_size_from_ratio", false]], "chunking (ectestertarget attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.chunking", false]], "chunking (ectestertargetleia attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.chunking", false]], "chunking (ectestertargetpcsc attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.chunking", false]], "chunkingexception": [[78, "pyecsca.sca.target.ectester.ChunkingException", false]], "cla_ectester (ectestertarget attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.CLA_ECTESTER", false]], "cla_ectester (ectestertargetleia attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.CLA_ECTESTER", false]], "cla_ectester (ectestertargetpcsc attribute)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.CLA_ECTESTER", false]], "cleanup() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.cleanup", false]], "cleanup() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.cleanup", false]], "cleanup() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.cleanup", false]], "cleanupresponse (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.CleanupResponse", false]], "clear() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.clear", false]], "clear() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.clear", false]], "clear() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.clear", false]], "clear() (hdf5meta method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5Meta.clear", false]], "clearresponse (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.ClearResponse", false]], "close() (chipwhispererscope method)": [[66, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.close", false]], "close() (hdf5traceset method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.close", false]], "close() (picoscopealt method)": [[67, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.close", false]], "close() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.close", false]], "close() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.close", false]], "close() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.close", false]], "close() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.close", false]], "close() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.close", false]], "close() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.close", false]], "close() (scope method)": [[65, "pyecsca.sca.scope.base.Scope.close", false]], "cls (commandapdu attribute)": [[73, "pyecsca.sca.target.ISO7816.CommandAPDU.cls", false]], "cmd_debug() (in module pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.cmd_debug", false]], "cmd_ecdh() (in module pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.cmd_ecdh", false]], "cmd_ecdsa_sign() (in module pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.cmd_ecdsa_sign", false]], "cmd_ecdsa_verify() (in module pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.cmd_ecdsa_verify", false]], "cmd_generate() (in module pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.cmd_generate", false]], "cmd_init_prng() (in module pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.cmd_init_prng", false]], "cmd_scalar_mult() (in module pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.cmd_scalar_mult", false]], "cmd_set_params() (in module pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.cmd_set_params", false]], "cmd_set_privkey() (in module pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.cmd_set_privkey", false]], "cmd_set_pubkey() (in module pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.cmd_set_pubkey", false]], "cmd_set_trigger() (in module pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.cmd_set_trigger", false]], "code (additionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.code", false]], "code (additionformula attribute)": [[15, "pyecsca.ec.formula.base.AdditionFormula.code", false]], "code (codeadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.code", false]], "code (codedifferentialadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.code", false]], "code (codedoublingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.code", false]], "code (codeformula attribute)": [[16, "pyecsca.ec.formula.code.CodeFormula.code", false]], "code (codeladderformula attribute)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.code", false]], "code (codenegationformula attribute)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.code", false]], "code (codeop attribute)": [[43, "pyecsca.ec.op.CodeOp.code", false]], "code (codescalingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.code", false]], "code (codetriplingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.code", false]], "code (differentialadditionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.code", false]], "code (differentialadditionformula attribute)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.code", false]], "code (doublingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.code", false]], "code (doublingformula attribute)": [[15, "pyecsca.ec.formula.base.DoublingFormula.code", false]], "code (efdformula attribute)": [[17, "pyecsca.ec.formula.efd.EFDFormula.code", false]], "code (fakeadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.code", false]], "code (fakedifferentialadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.code", false]], "code (fakedoublingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.code", false]], "code (fakeformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeFormula.code", false]], "code (fakeladderformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.code", false]], "code (fakenegationformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.code", false]], "code (fakescalingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.code", false]], "code (faketriplingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.code", false]], "code (formula attribute)": [[15, "pyecsca.ec.formula.base.Formula.code", false]], "code (ladderefdformula attribute)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.code", false]], "code (ladderformula attribute)": [[15, "pyecsca.ec.formula.base.LadderFormula.code", false]], "code (negationefdformula attribute)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.code", false]], "code (negationformula attribute)": [[15, "pyecsca.ec.formula.base.NegationFormula.code", false]], "code (scalingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.code", false]], "code (scalingformula attribute)": [[15, "pyecsca.ec.formula.base.ScalingFormula.code", false]], "code (triplingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.code", false]], "code (triplingformula attribute)": [[15, "pyecsca.ec.formula.base.TriplingFormula.code", false]], "codeadditionformula (class in pyecsca.ec.formula.code)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula", false]], "codedifferentialadditionformula (class in pyecsca.ec.formula.code)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula", false]], "codedoublingformula (class in pyecsca.ec.formula.code)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula", false]], "codeformula (class in pyecsca.ec.formula.code)": [[16, "pyecsca.ec.formula.code.CodeFormula", false]], "codeladderformula (class in pyecsca.ec.formula.code)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula", false]], "codenegationformula (class in pyecsca.ec.formula.code)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula", false]], "codeop (class in pyecsca.ec.op)": [[43, "pyecsca.ec.op.CodeOp", false]], "codescalingformula (class in pyecsca.ec.formula.code)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula", false]], "codetriplingformula (class in pyecsca.ec.formula.code)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula", false]], "codomain (map attribute)": [[62, "pyecsca.sca.re.tree.Map.codomain", false]], "cofactor (domainparameters attribute)": [[44, "pyecsca.ec.params.DomainParameters.cofactor", false]], "color (constantnode attribute)": [[21, "pyecsca.ec.formula.graph.ConstantNode.color", false]], "color (inputnode attribute)": [[21, "pyecsca.ec.formula.graph.InputNode.color", false]], "comba (multiplication attribute)": [[8, "pyecsca.ec.configuration.Multiplication.COMBA", false]], "comba (squaring attribute)": [[8, "pyecsca.ec.configuration.Squaring.COMBA", false]], "combinedtrace (class in pyecsca.sca.trace.trace)": [[94, "pyecsca.sca.trace.trace.CombinedTrace", false]], "combmultiplier (class in pyecsca.ec.mult.comb)": [[38, "pyecsca.ec.mult.comb.CombMultiplier", false]], "commandapdu (class in pyecsca.sca.target.iso7816)": [[73, "pyecsca.sca.target.ISO7816.CommandAPDU", false]], "compiled (codeop attribute)": [[43, "pyecsca.ec.op.CodeOp.compiled", false]], "complete (differentialladdermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.complete", false]], "complete (doubleandaddmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.complete", false]], "complete (fullprecompmultiplier attribute)": [[39, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.complete", false]], "complete (laddermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.LadderMultiplier.complete", false]], "complete (ltrmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.LTRMultiplier.complete", false]], "complete (rtlmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.RTLMultiplier.complete", false]], "complete (simpleladdermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.complete", false]], "compress (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.COMPRESS", false]], "compress_hybrid (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.COMPRESS_HYBRID", false]], "compressed (formatenum attribute)": [[78, "pyecsca.sca.target.ectester.FormatEnum.COMPRESSED", false]], "compute_correlation_trace() (cpa method)": [[55, "pyecsca.sca.attack.CPA.CPA.compute_correlation_trace", false]], "compute_factor_set() (in module pyecsca.sca.re.zvp)": [[63, "pyecsca.sca.re.zvp.compute_factor_set", false]], "compute_intermediate_value() (cpa method)": [[55, "pyecsca.sca.attack.CPA.CPA.compute_intermediate_value", false]], "compute_split_point() (dpa method)": [[56, "pyecsca.sca.attack.DPA.DPA.compute_split_point", false]], "conditional_average() (basetracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.BaseTraceManager.conditional_average", false]], "conditional_average() (cputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.conditional_average", false]], "conditional_average() (gputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.conditional_average", false]], "conditional_average() (in module pyecsca.sca.trace.combine)": [[86, "pyecsca.sca.trace.combine.conditional_average", false]], "config (class in pyecsca.misc.cfg)": [[51, "pyecsca.misc.cfg.Config", false]], "configs (re attribute)": [[59, "pyecsca.sca.re.base.RE.configs", false]], "configs (rpa attribute)": [[60, "pyecsca.sca.re.rpa.RPA.configs", false]], "configuration (class in pyecsca.ec.configuration)": [[8, "pyecsca.ec.configuration.Configuration", false]], "conjugate() (appletbaseenum method)": [[78, "pyecsca.sca.target.ectester.AppletBaseEnum.conjugate", false]], "conjugate() (cardprotocol method)": [[73, "pyecsca.sca.target.ISO7816.CardProtocol.conjugate", false]], "conjugate() (curveenum method)": [[78, "pyecsca.sca.target.ectester.CurveEnum.conjugate", false]], "conjugate() (exportenum method)": [[78, "pyecsca.sca.target.ectester.ExportEnum.conjugate", false]], "conjugate() (formatenum method)": [[78, "pyecsca.sca.target.ectester.FormatEnum.conjugate", false]], "conjugate() (instructionenum method)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.conjugate", false]], "conjugate() (keyagreementenum method)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.conjugate", false]], "conjugate() (keybuildenum method)": [[78, "pyecsca.sca.target.ectester.KeyBuildEnum.conjugate", false]], "conjugate() (keyclassenum method)": [[78, "pyecsca.sca.target.ectester.KeyClassEnum.conjugate", false]], "conjugate() (keyenum method)": [[78, "pyecsca.sca.target.ectester.KeyEnum.conjugate", false]], "conjugate() (keypairenum method)": [[78, "pyecsca.sca.target.ectester.KeypairEnum.conjugate", false]], "conjugate() (parameterenum method)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.conjugate", false]], "conjugate() (runmodeenum method)": [[78, "pyecsca.sca.target.ectester.RunModeEnum.conjugate", false]], "conjugate() (samplecoding method)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.conjugate", false]], "conjugate() (signatureenum method)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.conjugate", false]], "conjugate() (transformationenum method)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.conjugate", false]], "conjugate() (triggers method)": [[3, "pyecsca.codegen.client.Triggers.conjugate", false]], "connect() (binarytarget method)": [[76, "pyecsca.sca.target.binary.BinaryTarget.connect", false]], "connect() (chipwhisperertarget method)": [[77, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.connect", false]], "connect() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.connect", false]], "connect() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.connect", false]], "connect() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.connect", false]], "connect() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.connect", false]], "connect() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.connect", false]], "connect() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.connect", false]], "connect() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.connect", false]], "connect() (iso7816target method)": [[73, "pyecsca.sca.target.ISO7816.ISO7816Target.connect", false]], "connect() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.connect", false]], "connect() (leiatarget method)": [[81, "pyecsca.sca.target.leia.LEIATarget.connect", false]], "connect() (pcsctarget method)": [[74, "pyecsca.sca.target.PCSC.PCSCTarget.connect", false]], "connect() (serialtarget method)": [[82, "pyecsca.sca.target.serial.SerialTarget.connect", false]], "connect() (simpleserialtarget method)": [[83, "pyecsca.sca.target.simpleserial.SimpleSerialTarget.connect", false]], "connect() (target method)": [[75, "pyecsca.sca.target.base.Target.connect", false]], "constantnode (class in pyecsca.ec.formula.graph)": [[21, "pyecsca.ec.formula.graph.ConstantNode", false]], "constants (codeop attribute)": [[43, "pyecsca.ec.op.CodeOp.constants", false]], "context (class in pyecsca.ec.context)": [[9, "pyecsca.ec.context.Context", false]], "convert_base() (in module pyecsca.ec.scalar)": [[46, "pyecsca.ec.scalar.convert_base", false]], "coord_map (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.coord_map", false]], "coordinate_model (additionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.coordinate_model", false]], "coordinate_model (additionformula attribute)": [[15, "pyecsca.ec.formula.base.AdditionFormula.coordinate_model", false]], "coordinate_model (codeadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.coordinate_model", false]], "coordinate_model (codedifferentialadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.coordinate_model", false]], "coordinate_model (codedoublingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.coordinate_model", false]], "coordinate_model (codeformula attribute)": [[16, "pyecsca.ec.formula.code.CodeFormula.coordinate_model", false]], "coordinate_model (codeladderformula attribute)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.coordinate_model", false]], "coordinate_model (codenegationformula attribute)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.coordinate_model", false]], "coordinate_model (codescalingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.coordinate_model", false]], "coordinate_model (codetriplingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.coordinate_model", false]], "coordinate_model (differentialadditionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.coordinate_model", false]], "coordinate_model (differentialadditionformula attribute)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.coordinate_model", false]], "coordinate_model (doublingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.coordinate_model", false]], "coordinate_model (doublingformula attribute)": [[15, "pyecsca.ec.formula.base.DoublingFormula.coordinate_model", false]], "coordinate_model (efdformula attribute)": [[17, "pyecsca.ec.formula.efd.EFDFormula.coordinate_model", false]], "coordinate_model (ellipticcurve attribute)": [[11, "pyecsca.ec.curve.EllipticCurve.coordinate_model", false]], "coordinate_model (fakeadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.coordinate_model", false]], "coordinate_model (fakedifferentialadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.coordinate_model", false]], "coordinate_model (fakedoublingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.coordinate_model", false]], "coordinate_model (fakeformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeFormula.coordinate_model", false]], "coordinate_model (fakeladderformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.coordinate_model", false]], "coordinate_model (fakenegationformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.coordinate_model", false]], "coordinate_model (fakepoint attribute)": [[19, "pyecsca.ec.formula.fake.FakePoint.coordinate_model", false]], "coordinate_model (fakescalingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.coordinate_model", false]], "coordinate_model (faketriplingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.coordinate_model", false]], "coordinate_model (formula attribute)": [[15, "pyecsca.ec.formula.base.Formula.coordinate_model", false]], "coordinate_model (formulagraph attribute)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.coordinate_model", false]], "coordinate_model (infinitypoint attribute)": [[45, "pyecsca.ec.point.InfinityPoint.coordinate_model", false]], "coordinate_model (ladderefdformula attribute)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.coordinate_model", false]], "coordinate_model (ladderformula attribute)": [[15, "pyecsca.ec.formula.base.LadderFormula.coordinate_model", false]], "coordinate_model (negationefdformula attribute)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.coordinate_model", false]], "coordinate_model (negationformula attribute)": [[15, "pyecsca.ec.formula.base.NegationFormula.coordinate_model", false]], "coordinate_model (point attribute)": [[45, "pyecsca.ec.point.Point.coordinate_model", false]], "coordinate_model (scalingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.coordinate_model", false]], "coordinate_model (scalingformula attribute)": [[15, "pyecsca.ec.formula.base.ScalingFormula.coordinate_model", false]], "coordinate_model (triplingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.coordinate_model", false]], "coordinate_model (triplingformula attribute)": [[15, "pyecsca.ec.formula.base.TriplingFormula.coordinate_model", false]], "coordinate_names (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.coordinate_names", false]], "coordinate_names (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.coordinate_names", false]], "coordinate_names (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.coordinate_names", false]], "coordinate_names (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.coordinate_names", false]], "coordinate_names (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.coordinate_names", false]], "coordinatemappingaction (class in pyecsca.ec.point)": [[45, "pyecsca.ec.point.CoordinateMappingAction", false]], "coordinatemodel (class in pyecsca.ec.coordinates)": [[10, "pyecsca.ec.coordinates.CoordinateModel", false]], "coordinates (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.coordinates", false]], "coordinates (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.coordinates", false]], "coordinates (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.coordinates", false]], "coordinates (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.coordinates", false]], "coordinates (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.coordinates", false]], "coords (configuration attribute)": [[8, "pyecsca.ec.configuration.Configuration.coords", false]], "coords (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.coords", false]], "coords (devicetarget attribute)": [[3, "pyecsca.codegen.client.DeviceTarget.coords", false]], "coords (emulatortarget attribute)": [[3, "pyecsca.codegen.client.EmulatorTarget.coords", false]], "coords (fakepoint attribute)": [[19, "pyecsca.ec.formula.fake.FakePoint.coords", false]], "coords (hosttarget attribute)": [[3, "pyecsca.codegen.client.HostTarget.coords", false]], "coords (impltarget attribute)": [[3, "pyecsca.codegen.client.ImplTarget.coords", false]], "coords (infinitypoint attribute)": [[45, "pyecsca.ec.point.InfinityPoint.coords", false]], "coords (leakagetarget attribute)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.coords", false]], "coords (point attribute)": [[45, "pyecsca.ec.point.Point.coords", false]], "coronmultiplier (class in pyecsca.ec.mult.binary)": [[37, "pyecsca.ec.mult.binary.CoronMultiplier", false]], "correlations (cpa attribute)": [[55, "pyecsca.sca.attack.CPA.CPA.correlations", false]], "coupling (picoscopesdk attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.COUPLING", false]], "coupling (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.COUPLING", false]], "coupling (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.COUPLING", false]], "coupling (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.COUPLING", false]], "coupling (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.COUPLING", false]], "coupling (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.COUPLING", false]], "cpa (class in pyecsca.sca.attack.cpa)": [[55, "pyecsca.sca.attack.CPA.CPA", false]], "cputracemanager (class in pyecsca.sca.stacked_traces.combine)": [[70, "pyecsca.sca.stacked_traces.combine.CPUTraceManager", false]], "current (defaultcontext attribute)": [[9, "pyecsca.ec.context.DefaultContext.current", false]], "current (pathcontext attribute)": [[9, "pyecsca.ec.context.PathContext.current", false]], "current_depth (pathcontext attribute)": [[9, "pyecsca.ec.context.PathContext.current_depth", false]], "curve (domainparameters attribute)": [[44, "pyecsca.ec.params.DomainParameters.curve", false]], "curve_model (affinecoordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.AffineCoordinateModel.curve_model", false]], "curve_model (coordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.CoordinateModel.curve_model", false]], "curveenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.CurveEnum", false]], "curvemodel (class in pyecsca.ec.model)": [[34, "pyecsca.ec.model.CurveModel", false]], "curves (domainparametercategory attribute)": [[44, "pyecsca.ec.params.DomainParameterCategory.curves", false]], "dadd (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.dadd", false]], "data (commandapdu attribute)": [[73, "pyecsca.sca.target.ISO7816.CommandAPDU.data", false]], "data (responseapdu attribute)": [[73, "pyecsca.sca.target.ISO7816.ResponseAPDU.data", false]], "data (simpleserialmessage attribute)": [[83, "pyecsca.sca.target.simpleserial.SimpleSerialMessage.data", false]], "data_space (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.data_space", false]], "dbl (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.dbl", false]], "debug() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.debug", false]], "debug() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.debug", false]], "debug() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.debug", false]], "debug() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.debug", false]], "debug() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.debug", false]], "debug_output (binarytarget attribute)": [[76, "pyecsca.sca.target.binary.BinaryTarget.debug_output", false]], "debug_output (hosttarget attribute)": [[3, "pyecsca.codegen.client.HostTarget.debug_output", false]], "decode_point() (ellipticcurve method)": [[11, "pyecsca.ec.curve.EllipticCurve.decode_point", false]], "deduplicate() (map method)": [[62, "pyecsca.sca.re.tree.Map.deduplicate", false]], "deepcopy() (addfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.AddFliparoo.deepcopy", false]], "deepcopy() (addsubfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.deepcopy", false]], "deepcopy() (fliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.Fliparoo.deepcopy", false]], "deepcopy() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.deepcopy", false]], "deepcopy() (mulfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.MulFliparoo.deepcopy", false]], "default (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.default", false]], "defaultcontext (class in pyecsca.ec.context)": [[9, "pyecsca.ec.context.DefaultContext", false]], "defines (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.defines", false]], "denominator (appletbaseenum attribute)": [[78, "pyecsca.sca.target.ectester.AppletBaseEnum.denominator", false]], "denominator (cardprotocol attribute)": [[73, "pyecsca.sca.target.ISO7816.CardProtocol.denominator", false]], "denominator (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.denominator", false]], "denominator (exportenum attribute)": [[78, "pyecsca.sca.target.ectester.ExportEnum.denominator", false]], "denominator (formatenum attribute)": [[78, "pyecsca.sca.target.ectester.FormatEnum.denominator", false]], "denominator (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.denominator", false]], "denominator (keyagreementenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.denominator", false]], "denominator (keybuildenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyBuildEnum.denominator", false]], "denominator (keyclassenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyClassEnum.denominator", false]], "denominator (keyenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyEnum.denominator", false]], "denominator (keypairenum attribute)": [[78, "pyecsca.sca.target.ectester.KeypairEnum.denominator", false]], "denominator (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.denominator", false]], "denominator (runmodeenum attribute)": [[78, "pyecsca.sca.target.ectester.RunModeEnum.denominator", false]], "denominator (samplecoding attribute)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.denominator", false]], "denominator (signatureenum attribute)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.denominator", false]], "denominator (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.denominator", false]], "denominator (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.denominator", false]], "depth (node property)": [[9, "pyecsca.ec.context.Node.depth", false], [62, "pyecsca.sca.re.tree.Node.depth", false]], "descendants (node property)": [[9, "pyecsca.ec.context.Node.descendants", false], [62, "pyecsca.sca.re.tree.Node.descendants", false]], "describe() (map method)": [[62, "pyecsca.sca.re.tree.Map.describe", false]], "describe() (tree method)": [[62, "pyecsca.sca.re.tree.Tree.describe", false]], "description (domainparametercategory attribute)": [[44, "pyecsca.ec.params.DomainParameterCategory.description", false]], "description (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.description", false]], "deviceconfiguration (class in pyecsca.codegen.common)": [[4, "pyecsca.codegen.common.DeviceConfiguration", false]], "devicetarget (class in pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.DeviceTarget", false]], "differentialadditionefdformula (class in pyecsca.ec.formula.efd)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula", false]], "differentialadditionformula (class in pyecsca.ec.formula.base)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula", false]], "differentialladdermultiplier (class in pyecsca.ec.mult.ladder)": [[40, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier", false]], "direction (bgmwmultiplier attribute)": [[38, "pyecsca.ec.mult.comb.BGMWMultiplier.direction", false]], "direction (binarynafmultiplier attribute)": [[41, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.direction", false]], "direction (doubleandaddmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.direction", false]], "direction (fullprecompmultiplier attribute)": [[39, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.direction", false]], "direction (ltrmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.LTRMultiplier.direction", false]], "direction (rtlmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.RTLMultiplier.direction", false]], "disconnect() (binarytarget method)": [[76, "pyecsca.sca.target.binary.BinaryTarget.disconnect", false]], "disconnect() (chipwhisperertarget method)": [[77, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.disconnect", false]], "disconnect() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.disconnect", false]], "disconnect() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.disconnect", false]], "disconnect() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.disconnect", false]], "disconnect() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.disconnect", false]], "disconnect() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.disconnect", false]], "disconnect() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.disconnect", false]], "disconnect() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.disconnect", false]], "disconnect() (iso7816target method)": [[73, "pyecsca.sca.target.ISO7816.ISO7816Target.disconnect", false]], "disconnect() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.disconnect", false]], "disconnect() (leiatarget method)": [[81, "pyecsca.sca.target.leia.LEIATarget.disconnect", false]], "disconnect() (pcsctarget method)": [[74, "pyecsca.sca.target.PCSC.PCSCTarget.disconnect", false]], "disconnect() (serialtarget method)": [[82, "pyecsca.sca.target.serial.SerialTarget.disconnect", false]], "disconnect() (simpleserialtarget method)": [[83, "pyecsca.sca.target.simpleserial.SimpleSerialTarget.disconnect", false]], "disconnect() (target method)": [[75, "pyecsca.sca.target.base.Target.disconnect", false]], "div (optype attribute)": [[43, "pyecsca.ec.op.OpType.Div", false]], "divpoly() (in module pyecsca.ec.divpoly)": [[12, "pyecsca.ec.divpoly.divpoly", false]], "dmap_index (node attribute)": [[62, "pyecsca.sca.re.tree.Node.dmap_index", false]], "dmap_input (node attribute)": [[62, "pyecsca.sca.re.tree.Node.dmap_input", false]], "domain (map attribute)": [[62, "pyecsca.sca.re.tree.Map.domain", false]], "domain_f2m (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.DOMAIN_F2M", false]], "domain_fp (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.DOMAIN_FP", false]], "domainparametercategory (class in pyecsca.ec.params)": [[44, "pyecsca.ec.params.DomainParameterCategory", false]], "domainparameters (class in pyecsca.ec.params)": [[44, "pyecsca.ec.params.DomainParameters", false]], "doms (dpa attribute)": [[56, "pyecsca.sca.attack.DPA.DPA.doms", false]], "doubleandaddmultiplier (class in pyecsca.ec.mult.binary)": [[37, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier", false]], "doublingefdformula (class in pyecsca.ec.formula.efd)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula", false]], "doublingformula (class in pyecsca.ec.formula.base)": [[15, "pyecsca.ec.formula.base.DoublingFormula", false]], "downsample_average() (in module pyecsca.sca.trace.sampling)": [[92, "pyecsca.sca.trace.sampling.downsample_average", false]], "downsample_decimate() (in module pyecsca.sca.trace.sampling)": [[92, "pyecsca.sca.trace.sampling.downsample_decimate", false]], "downsample_max() (in module pyecsca.sca.trace.sampling)": [[92, "pyecsca.sca.trace.sampling.downsample_max", false]], "downsample_min() (in module pyecsca.sca.trace.sampling)": [[92, "pyecsca.sca.trace.sampling.downsample_min", false]], "downsample_pick() (in module pyecsca.sca.trace.sampling)": [[92, "pyecsca.sca.trace.sampling.downsample_pick", false]], "dpa (class in pyecsca.sca.attack.dpa)": [[56, "pyecsca.sca.attack.DPA.DPA", false]], "draw() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.draw", false]], "dtype() (samplecoding method)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.dtype", false]], "ec (config attribute)": [[51, "pyecsca.misc.cfg.Config.ec", false]], "ecconfig (class in pyecsca.misc.cfg)": [[51, "pyecsca.misc.cfg.ECConfig", false]], "ecdh (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.ecdh", false]], "ecdh (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.ecdh", false]], "ecdh() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.ecdh", false]], "ecdh() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.ecdh", false]], "ecdh() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdh", false]], "ecdh() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdh", false]], "ecdh() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.ecdh", false]], "ecdh() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.ecdh", false]], "ecdh() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.ecdh", false]], "ecdh() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.ecdh", false]], "ecdh_direct() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.ecdh_direct", false]], "ecdh_direct() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdh_direct", false]], "ecdh_direct() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdh_direct", false]], "ecdh_none (class in pyecsca.ec.key_agreement)": [[26, "pyecsca.ec.key_agreement.ECDH_NONE", false]], "ecdh_sha1 (class in pyecsca.ec.key_agreement)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA1", false]], "ecdh_sha224 (class in pyecsca.ec.key_agreement)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA224", false]], "ecdh_sha256 (class in pyecsca.ec.key_agreement)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA256", false]], "ecdh_sha384 (class in pyecsca.ec.key_agreement)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA384", false]], "ecdh_sha512 (class in pyecsca.ec.key_agreement)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA512", false]], "ecdhaction (class in pyecsca.ec.key_agreement)": [[26, "pyecsca.ec.key_agreement.ECDHAction", false]], "ecdhresponse (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.ECDHResponse", false]], "ecdsa (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.ecdsa", false]], "ecdsa() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.ecdsa", false]], "ecdsa() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdsa", false]], "ecdsa() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdsa", false]], "ecdsa_none (class in pyecsca.ec.signature)": [[47, "pyecsca.ec.signature.ECDSA_NONE", false]], "ecdsa_sha1 (class in pyecsca.ec.signature)": [[47, "pyecsca.ec.signature.ECDSA_SHA1", false]], "ecdsa_sha224 (class in pyecsca.ec.signature)": [[47, "pyecsca.ec.signature.ECDSA_SHA224", false]], "ecdsa_sha256 (class in pyecsca.ec.signature)": [[47, "pyecsca.ec.signature.ECDSA_SHA256", false]], "ecdsa_sha384 (class in pyecsca.ec.signature)": [[47, "pyecsca.ec.signature.ECDSA_SHA384", false]], "ecdsa_sha512 (class in pyecsca.ec.signature)": [[47, "pyecsca.ec.signature.ECDSA_SHA512", false]], "ecdsa_sign (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.ecdsa_sign", false]], "ecdsa_sign() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.ecdsa_sign", false]], "ecdsa_sign() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.ecdsa_sign", false]], "ecdsa_sign() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdsa_sign", false]], "ecdsa_sign() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdsa_sign", false]], "ecdsa_sign() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.ecdsa_sign", false]], "ecdsa_sign() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.ecdsa_sign", false]], "ecdsa_sign() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.ecdsa_sign", false]], "ecdsa_sign() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.ecdsa_sign", false]], "ecdsa_verify (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.ecdsa_verify", false]], "ecdsa_verify() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.ecdsa_verify", false]], "ecdsa_verify() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.ecdsa_verify", false]], "ecdsa_verify() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdsa_verify", false]], "ecdsa_verify() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdsa_verify", false]], "ecdsa_verify() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.ecdsa_verify", false]], "ecdsa_verify() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.ecdsa_verify", false]], "ecdsa_verify() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.ecdsa_verify", false]], "ecdsa_verify() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.ecdsa_verify", false]], "ecdsaaction (class in pyecsca.ec.signature)": [[47, "pyecsca.ec.signature.ECDSAAction", false]], "ecdsaresponse (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.ECDSAResponse", false]], "ecdsasignaction (class in pyecsca.ec.signature)": [[47, "pyecsca.ec.signature.ECDSASignAction", false]], "ecdsaverifyaction (class in pyecsca.ec.signature)": [[47, "pyecsca.ec.signature.ECDSAVerifyAction", false]], "ectestertarget (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget", false]], "ectestertargetleia (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA", false]], "ectestertargetpcsc (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC", false]], "edwardsmodel (class in pyecsca.ec.model)": [[34, "pyecsca.ec.model.EdwardsModel", false]], "efdformula (class in pyecsca.ec.formula.efd)": [[17, "pyecsca.ec.formula.efd.EFDFormula", false]], "ellipticcurve (class in pyecsca.ec.curve)": [[11, "pyecsca.ec.curve.EllipticCurve", false]], "emulator (emulatortarget attribute)": [[3, "pyecsca.codegen.client.EmulatorTarget.emulator", false]], "emulatortarget (class in pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.EmulatorTarget", false]], "enabled (loggingconfig attribute)": [[51, "pyecsca.misc.cfg.LoggingConfig.enabled", false]], "encode_parameters() (ectestertarget static method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.encode_parameters", false]], "encode_parameters() (ectestertargetleia static method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.encode_parameters", false]], "encode_parameters() (ectestertargetpcsc static method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.encode_parameters", false]], "enter_action() (context method)": [[9, "pyecsca.ec.context.Context.enter_action", false]], "enter_action() (defaultcontext method)": [[9, "pyecsca.ec.context.DefaultContext.enter_action", false]], "enter_action() (multiplecontext method)": [[60, "pyecsca.sca.re.rpa.MultipleContext.enter_action", false]], "enter_action() (pathcontext method)": [[9, "pyecsca.ec.context.PathContext.enter_action", false]], "enumdefine (class in pyecsca.ec.configuration)": [[8, "pyecsca.ec.configuration.EnumDefine", false]], "equals() (fakepoint method)": [[19, "pyecsca.ec.formula.fake.FakePoint.equals", false]], "equals() (infinitypoint method)": [[45, "pyecsca.ec.point.InfinityPoint.equals", false]], "equals() (point method)": [[45, "pyecsca.ec.point.Point.equals", false]], "equals_affine() (fakepoint method)": [[19, "pyecsca.ec.formula.fake.FakePoint.equals_affine", false]], "equals_affine() (infinitypoint method)": [[45, "pyecsca.ec.point.InfinityPoint.equals_affine", false]], "equals_affine() (point method)": [[45, "pyecsca.ec.point.Point.equals_affine", false]], "equals_scaled() (fakepoint method)": [[19, "pyecsca.ec.formula.fake.FakePoint.equals_scaled", false]], "equals_scaled() (infinitypoint method)": [[45, "pyecsca.ec.point.InfinityPoint.equals_scaled", false]], "equals_scaled() (point method)": [[45, "pyecsca.ec.point.Point.equals_scaled", false]], "equation (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.equation", false]], "equation (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.equation", false]], "equation (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.equation", false]], "equation (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.equation", false]], "equation (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.equation", false]], "error (allocatekaresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateKaResponse.error", false]], "error (allocateresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateResponse.error", false]], "error (allocatesigresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateSigResponse.error", false]], "error (cleanupresponse attribute)": [[78, "pyecsca.sca.target.ectester.CleanupResponse.error", false]], "error (clearresponse attribute)": [[78, "pyecsca.sca.target.ectester.ClearResponse.error", false]], "error (ecdhresponse attribute)": [[78, "pyecsca.sca.target.ectester.ECDHResponse.error", false]], "error (ecdsaresponse attribute)": [[78, "pyecsca.sca.target.ectester.ECDSAResponse.error", false]], "error (exportresponse attribute)": [[78, "pyecsca.sca.target.ectester.ExportResponse.error", false]], "error (generateresponse attribute)": [[78, "pyecsca.sca.target.ectester.GenerateResponse.error", false]], "error (runmoderesponse attribute)": [[78, "pyecsca.sca.target.ectester.RunModeResponse.error", false]], "error (setresponse attribute)": [[78, "pyecsca.sca.target.ectester.SetResponse.error", false]], "error (transformresponse attribute)": [[78, "pyecsca.sca.target.ectester.TransformResponse.error", false]], "euler (inversion attribute)": [[8, "pyecsca.ec.configuration.Inversion.EULER", false]], "exit() (coordinatemappingaction method)": [[45, "pyecsca.ec.point.CoordinateMappingAction.exit", false]], "exit() (ecdhaction method)": [[26, "pyecsca.ec.key_agreement.ECDHAction.exit", false]], "exit() (formulaaction method)": [[15, "pyecsca.ec.formula.base.FormulaAction.exit", false]], "exit() (keygenaction method)": [[27, "pyecsca.ec.key_generation.KeygenAction.exit", false]], "exit() (randommodaction method)": [[29, "pyecsca.ec.mod.base.RandomModAction.exit", false]], "exit() (resultaction method)": [[9, "pyecsca.ec.context.ResultAction.exit", false]], "exit() (scalarmultiplicationaction method)": [[36, "pyecsca.ec.mult.base.ScalarMultiplicationAction.exit", false]], "exit_action() (context method)": [[9, "pyecsca.ec.context.Context.exit_action", false]], "exit_action() (defaultcontext method)": [[9, "pyecsca.ec.context.DefaultContext.exit_action", false]], "exit_action() (multiplecontext method)": [[60, "pyecsca.sca.re.rpa.MultipleContext.exit_action", false]], "exit_action() (pathcontext method)": [[9, "pyecsca.ec.context.PathContext.exit_action", false]], "expand() (tree method)": [[62, "pyecsca.sca.re.tree.Tree.expand", false]], "expand_all_muls() (in module pyecsca.ec.formula.partitions)": [[23, "pyecsca.ec.formula.partitions.expand_all_muls", false]], "expand_all_nopower2_muls() (in module pyecsca.ec.formula.partitions)": [[23, "pyecsca.ec.formula.partitions.expand_all_nopower2_muls", false]], "expand_formula_set() (in module pyecsca.ec.formula.expand)": [[18, "pyecsca.ec.formula.expand.expand_formula_set", false]], "export() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.export", false]], "export() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.export", false]], "export() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.export", false]], "export_false (exportenum attribute)": [[78, "pyecsca.sca.target.ectester.ExportEnum.EXPORT_FALSE", false]], "export_true (exportenum attribute)": [[78, "pyecsca.sca.target.ectester.ExportEnum.EXPORT_TRUE", false]], "exportenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.ExportEnum", false]], "exportresponse (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.ExportResponse", false]], "external (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.external", false]], "external_clock (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock", false]], "external_clock_frequencty (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_frequencty", false]], "external_clock_multiplier (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_multiplier", false]], "external_clock_phase_shift (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_phase_shift", false]], "external_clock_resampler_enabled (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_resampler_enabled", false]], "external_clock_resampler_mask (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_resampler_mask", false]], "external_clock_threshold (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_threshold", false]], "external_clock_time_base (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_time_base", false]], "extgcd() (in module pyecsca.ec.mod.base)": [[29, "pyecsca.ec.mod.base.extgcd", false]], "f2m (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.F2M", false]], "fakeadditionformula (class in pyecsca.ec.formula.fake)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula", false]], "fakedifferentialadditionformula (class in pyecsca.ec.formula.fake)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula", false]], "fakedoublingformula (class in pyecsca.ec.formula.fake)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula", false]], "fakeformula (class in pyecsca.ec.formula.fake)": [[19, "pyecsca.ec.formula.fake.FakeFormula", false]], "fakeladderformula (class in pyecsca.ec.formula.fake)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula", false]], "fakenegationformula (class in pyecsca.ec.formula.fake)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula", false]], "fakepoint (class in pyecsca.ec.formula.fake)": [[19, "pyecsca.ec.formula.fake.FakePoint", false]], "fakescalingformula (class in pyecsca.ec.formula.fake)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula", false]], "faketriplingformula (class in pyecsca.ec.formula.fake)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula", false]], "field (fakepoint attribute)": [[19, "pyecsca.ec.formula.fake.FakePoint.field", false]], "field (infinitypoint attribute)": [[45, "pyecsca.ec.point.InfinityPoint.field", false]], "field (point attribute)": [[45, "pyecsca.ec.point.Point.field", false]], "filter_bandpass() (in module pyecsca.sca.trace.filter)": [[88, "pyecsca.sca.trace.filter.filter_bandpass", false]], "filter_bandstop() (in module pyecsca.sca.trace.filter)": [[88, "pyecsca.sca.trace.filter.filter_bandstop", false]], "filter_frequency (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.filter_frequency", false]], "filter_highpass() (in module pyecsca.sca.trace.filter)": [[88, "pyecsca.sca.trace.filter.filter_highpass", false]], "filter_lowpass() (in module pyecsca.sca.trace.filter)": [[88, "pyecsca.sca.trace.filter.filter_lowpass", false]], "filter_range (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.filter_range", false]], "filter_type (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.filter_type", false]], "find_all_paths() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.find_all_paths", false]], "first (addfliparoo property)": [[20, "pyecsca.ec.formula.fliparoo.AddFliparoo.first", false]], "first (addsubfliparoo property)": [[20, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.first", false]], "first (fliparoo property)": [[20, "pyecsca.ec.formula.fliparoo.Fliparoo.first", false]], "first (mulfliparoo property)": [[20, "pyecsca.ec.formula.fliparoo.MulFliparoo.first", false]], "fixed (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.FIXED", false]], "fixedwindowltrmultiplier (class in pyecsca.ec.mult.window)": [[42, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier", false]], "flash() (chipwhisperertarget method)": [[77, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.flash", false]], "flash() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.flash", false]], "flash() (flashable method)": [[79, "pyecsca.sca.target.flash.Flashable.flash", false]], "flashable (class in pyecsca.sca.target.flash)": [[79, "pyecsca.sca.target.flash.Flashable", false]], "flintmod (class in pyecsca.ec.mod.flint)": [[30, "pyecsca.ec.mod.flint.FlintMod", false]], "fliparoo (class in pyecsca.ec.formula.fliparoo)": [[20, "pyecsca.ec.formula.fliparoo.Fliparoo", false]], "float16 (samplecoding attribute)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.Float16", false]], "float32 (samplecoding attribute)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.Float32", false]], "float8 (samplecoding attribute)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.Float8", false]], "formatenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.FormatEnum", false]], "formula (class in pyecsca.ec.formula.base)": [[15, "pyecsca.ec.formula.base.Formula", false]], "formula (formulaaction attribute)": [[15, "pyecsca.ec.formula.base.FormulaAction.formula", false]], "formula_ivs() (in module pyecsca.ec.formula.metrics)": [[22, "pyecsca.ec.formula.metrics.formula_ivs", false]], "formula_similarity() (in module pyecsca.ec.formula.metrics)": [[22, "pyecsca.ec.formula.metrics.formula_similarity", false]], "formula_similarity_abs() (in module pyecsca.ec.formula.metrics)": [[22, "pyecsca.ec.formula.metrics.formula_similarity_abs", false]], "formula_similarity_fuzz() (in module pyecsca.ec.formula.metrics)": [[22, "pyecsca.ec.formula.metrics.formula_similarity_fuzz", false]], "formulaaction (class in pyecsca.ec.formula.base)": [[15, "pyecsca.ec.formula.base.FormulaAction", false]], "formulagraph (class in pyecsca.ec.formula.graph)": [[21, "pyecsca.ec.formula.graph.FormulaGraph", false]], "formulas (accumulatormultiplier attribute)": [[36, "pyecsca.ec.mult.base.AccumulatorMultiplier.formulas", false]], "formulas (affinecoordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.AffineCoordinateModel.formulas", false]], "formulas (bgmwmultiplier attribute)": [[38, "pyecsca.ec.mult.comb.BGMWMultiplier.formulas", false]], "formulas (binarynafmultiplier attribute)": [[41, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.formulas", false]], "formulas (combmultiplier attribute)": [[38, "pyecsca.ec.mult.comb.CombMultiplier.formulas", false]], "formulas (configuration attribute)": [[8, "pyecsca.ec.configuration.Configuration.formulas", false]], "formulas (coordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.CoordinateModel.formulas", false]], "formulas (coronmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.CoronMultiplier.formulas", false]], "formulas (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.formulas", false]], "formulas (differentialladdermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.formulas", false]], "formulas (doubleandaddmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.formulas", false]], "formulas (fixedwindowltrmultiplier attribute)": [[42, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.formulas", false]], "formulas (fullprecompmultiplier attribute)": [[39, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.formulas", false]], "formulas (laddermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.LadderMultiplier.formulas", false]], "formulas (ltrmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.LTRMultiplier.formulas", false]], "formulas (multiplecontext attribute)": [[60, "pyecsca.sca.re.rpa.MultipleContext.formulas", false]], "formulas (rtlmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.RTLMultiplier.formulas", false]], "formulas (scalarmultiplier attribute)": [[36, "pyecsca.ec.mult.base.ScalarMultiplier.formulas", false]], "formulas (simpleladdermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.formulas", false]], "formulas (slidingwindowmultiplier attribute)": [[42, "pyecsca.ec.mult.window.SlidingWindowMultiplier.formulas", false]], "formulas (windowboothmultiplier attribute)": [[42, "pyecsca.ec.mult.window.WindowBoothMultiplier.formulas", false]], "formulas (windownafmultiplier attribute)": [[41, "pyecsca.ec.mult.naf.WindowNAFMultiplier.formulas", false]], "fp (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.FP", false]], "frequency (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.frequency", false]], "frequency (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.frequency", false]], "frequency (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.frequency", false]], "frequency (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.frequency", false]], "frequency (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.frequency", false]], "from_bool() (exportenum class method)": [[78, "pyecsca.sca.target.ectester.ExportEnum.from_bool", false]], "from_bytes() (appletbaseenum method)": [[78, "pyecsca.sca.target.ectester.AppletBaseEnum.from_bytes", false]], "from_bytes() (cardprotocol method)": [[73, "pyecsca.sca.target.ISO7816.CardProtocol.from_bytes", false]], "from_bytes() (curveenum method)": [[78, "pyecsca.sca.target.ectester.CurveEnum.from_bytes", false]], "from_bytes() (exportenum method)": [[78, "pyecsca.sca.target.ectester.ExportEnum.from_bytes", false]], "from_bytes() (formatenum method)": [[78, "pyecsca.sca.target.ectester.FormatEnum.from_bytes", false]], "from_bytes() (instructionenum method)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.from_bytes", false]], "from_bytes() (keyagreementenum method)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.from_bytes", false]], "from_bytes() (keybuildenum method)": [[78, "pyecsca.sca.target.ectester.KeyBuildEnum.from_bytes", false]], "from_bytes() (keyclassenum method)": [[78, "pyecsca.sca.target.ectester.KeyClassEnum.from_bytes", false]], "from_bytes() (keyenum method)": [[78, "pyecsca.sca.target.ectester.KeyEnum.from_bytes", false]], "from_bytes() (keypairenum method)": [[78, "pyecsca.sca.target.ectester.KeypairEnum.from_bytes", false]], "from_bytes() (parameterenum method)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.from_bytes", false]], "from_bytes() (runmodeenum method)": [[78, "pyecsca.sca.target.ectester.RunModeEnum.from_bytes", false]], "from_bytes() (samplecoding method)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.from_bytes", false]], "from_bytes() (signatureenum method)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.from_bytes", false]], "from_bytes() (transformationenum method)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.from_bytes", false]], "from_bytes() (triggers method)": [[3, "pyecsca.codegen.client.Triggers.from_bytes", false]], "from_der() (signatureresult static method)": [[47, "pyecsca.ec.signature.SignatureResult.from_DER", false]], "from_io_maps() (map class method)": [[62, "pyecsca.sca.re.tree.Map.from_io_maps", false]], "from_raw() (simpleserialmessage static method)": [[83, "pyecsca.sca.target.simpleserial.SimpleSerialMessage.from_raw", false]], "from_sets() (map class method)": [[62, "pyecsca.sca.re.tree.Map.from_sets", false]], "from_weierstrass (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.from_weierstrass", false]], "from_weierstrass (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.from_weierstrass", false]], "from_weierstrass (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.from_weierstrass", false]], "from_weierstrass (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.from_weierstrass", false]], "from_weierstrass (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.from_weierstrass", false]], "fromarray() (stackedtraces class method)": [[71, "pyecsca.sca.stacked_traces.stacked_traces.StackedTraces.fromarray", false]], "fromtraceset() (stackedtraces class method)": [[71, "pyecsca.sca.stacked_traces.stacked_traces.StackedTraces.fromtraceset", false]], "full_name (affinecoordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.AffineCoordinateModel.full_name", false]], "full_name (coordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.CoordinateModel.full_name", false]], "full_weierstrass (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.full_weierstrass", false]], "full_weierstrass (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.full_weierstrass", false]], "full_weierstrass (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.full_weierstrass", false]], "full_weierstrass (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.full_weierstrass", false]], "full_weierstrass (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.full_weierstrass", false]], "fullprecompmultiplier (class in pyecsca.ec.mult.fixed)": [[39, "pyecsca.ec.mult.fixed.FullPrecompMultiplier", false]], "fullrandom (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.FULLRANDOM", false]], "futures (taskexecutor attribute)": [[52, "pyecsca.misc.utils.TaskExecutor.futures", false]], "g (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.G", false]], "gcd (inversion attribute)": [[8, "pyecsca.ec.configuration.Inversion.GCD", false]], "gcd() (in module pyecsca.ec.mod.base)": [[29, "pyecsca.ec.mod.base.gcd", false]], "generate() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.generate", false]], "generate() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.generate", false]], "generate() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.generate", false]], "generate() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.generate", false]], "generate() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.generate", false]], "generate() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.generate", false]], "generate() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.generate", false]], "generate() (keygeneration method)": [[27, "pyecsca.ec.key_generation.KeyGeneration.generate", false]], "generate() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.generate", false]], "generate_fliparood_formulas() (in module pyecsca.ec.formula.fliparoo)": [[20, "pyecsca.ec.formula.fliparoo.generate_fliparood_formulas", false]], "generate_partitioned_formulas() (in module pyecsca.ec.formula.partitions)": [[23, "pyecsca.ec.formula.partitions.generate_partitioned_formulas", false]], "generate_switched_formulas() (in module pyecsca.ec.formula.switch_sign)": [[24, "pyecsca.ec.formula.switch_sign.generate_switched_formulas", false]], "generateresponse (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.GenerateResponse", false]], "generator (domainparameters attribute)": [[44, "pyecsca.ec.params.DomainParameters.generator", false]], "get() (hdf5meta method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5Meta.get", false]], "get() (hdf5traceset method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.get", false]], "get_by_index() (node method)": [[9, "pyecsca.ec.context.Node.get_by_index", false]], "get_by_key() (node method)": [[9, "pyecsca.ec.context.Node.get_by_key", false]], "get_category() (in module pyecsca.ec.params)": [[44, "pyecsca.ec.params.get_category", false]], "get_index() (exportresponse method)": [[78, "pyecsca.sca.target.ectester.ExportResponse.get_index", false]], "get_param() (exportresponse method)": [[78, "pyecsca.sca.target.ectester.ExportResponse.get_param", false]], "get_params() (in module pyecsca.ec.params)": [[44, "pyecsca.ec.params.get_params", false]], "get_trace() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.get_trace", false]], "get_variant() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.get_variant", false]], "get_variant() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.get_variant", false]], "get_variant() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.get_variant", false]], "get_variant() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.get_variant", false]], "get_variant() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.get_variant", false]], "get_variant() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.get_variant", false]], "getconfig() (in module pyecsca.misc.cfg)": [[51, "pyecsca.misc.cfg.getconfig", false]], "global_title (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.global_title", false]], "gmpmod (class in pyecsca.ec.mod.gmp)": [[31, "pyecsca.ec.mod.gmp.GMPMod", false]], "gputracemanager (class in pyecsca.sca.stacked_traces.combine)": [[70, "pyecsca.sca.stacked_traces.combine.GPUTraceManager", false]], "graph (addfliparoo attribute)": [[20, "pyecsca.ec.formula.fliparoo.AddFliparoo.graph", false]], "graph (addsubfliparoo attribute)": [[20, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.graph", false]], "graph (fliparoo attribute)": [[20, "pyecsca.ec.formula.fliparoo.Fliparoo.graph", false]], "graph (mulfliparoo attribute)": [[20, "pyecsca.ec.formula.fliparoo.MulFliparoo.graph", false]], "hammingdistance (class in pyecsca.sca.attack.leakage_model)": [[57, "pyecsca.sca.attack.leakage_model.HammingDistance", false]], "hammingweight (class in pyecsca.sca.attack.leakage_model)": [[57, "pyecsca.sca.attack.leakage_model.HammingWeight", false]], "handle (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.handle", false]], "handle (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.handle", false]], "handle (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.handle", false]], "handle (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.handle", false]], "handle (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.handle", false]], "hash_algo (ecdh_none attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_NONE.hash_algo", false]], "hash_algo (ecdh_sha1 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA1.hash_algo", false]], "hash_algo (ecdh_sha224 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA224.hash_algo", false]], "hash_algo (ecdh_sha256 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA256.hash_algo", false]], "hash_algo (ecdh_sha384 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA384.hash_algo", false]], "hash_algo (ecdh_sha512 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA512.hash_algo", false]], "hash_algo (ecdhaction attribute)": [[26, "pyecsca.ec.key_agreement.ECDHAction.hash_algo", false]], "hash_algo (ecdsa_none attribute)": [[47, "pyecsca.ec.signature.ECDSA_NONE.hash_algo", false]], "hash_algo (ecdsa_sha1 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA1.hash_algo", false]], "hash_algo (ecdsa_sha224 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA224.hash_algo", false]], "hash_algo (ecdsa_sha256 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA256.hash_algo", false]], "hash_algo (ecdsa_sha384 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA384.hash_algo", false]], "hash_algo (ecdsa_sha512 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA512.hash_algo", false]], "hash_algo (ecdsaaction attribute)": [[47, "pyecsca.ec.signature.ECDSAAction.hash_algo", false]], "hash_algo (ecdsasignaction attribute)": [[47, "pyecsca.ec.signature.ECDSASignAction.hash_algo", false]], "hash_algo (ecdsaverifyaction attribute)": [[47, "pyecsca.ec.signature.ECDSAVerifyAction.hash_algo", false]], "hash_algo (keyagreement attribute)": [[26, "pyecsca.ec.key_agreement.KeyAgreement.hash_algo", false]], "hash_algo (signature attribute)": [[47, "pyecsca.ec.signature.Signature.hash_algo", false]], "hash_type (configuration attribute)": [[8, "pyecsca.ec.configuration.Configuration.hash_type", false]], "hash_type (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.hash_type", false]], "hashtype (class in pyecsca.ec.configuration)": [[8, "pyecsca.ec.configuration.HashType", false]], "hdf5meta (class in pyecsca.sca.trace_set.hdf5)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5Meta", false]], "hdf5traceset (class in pyecsca.sca.trace_set.hdf5)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet", false]], "height (node property)": [[9, "pyecsca.ec.context.Node.height", false], [62, "pyecsca.sca.re.tree.Node.height", false]], "height (tree property)": [[62, "pyecsca.sca.re.tree.Tree.height", false]], "homogweights (affinecoordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.AffineCoordinateModel.homogweights", false]], "homogweights (coordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.CoordinateModel.homogweights", false]], "host (platform attribute)": [[4, "pyecsca.codegen.common.Platform.HOST", false]], "hosttarget (class in pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.HostTarget", false]], "hybrid (formatenum attribute)": [[78, "pyecsca.sca.target.ectester.FormatEnum.HYBRID", false]], "id (optype attribute)": [[43, "pyecsca.ec.op.OpType.Id", false]], "identity (class in pyecsca.sca.attack.leakage_model)": [[57, "pyecsca.sca.attack.leakage_model.Identity", false]], "imag (appletbaseenum attribute)": [[78, "pyecsca.sca.target.ectester.AppletBaseEnum.imag", false]], "imag (cardprotocol attribute)": [[73, "pyecsca.sca.target.ISO7816.CardProtocol.imag", false]], "imag (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.imag", false]], "imag (exportenum attribute)": [[78, "pyecsca.sca.target.ectester.ExportEnum.imag", false]], "imag (formatenum attribute)": [[78, "pyecsca.sca.target.ectester.FormatEnum.imag", false]], "imag (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.imag", false]], "imag (keyagreementenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.imag", false]], "imag (keybuildenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyBuildEnum.imag", false]], "imag (keyclassenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyClassEnum.imag", false]], "imag (keyenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyEnum.imag", false]], "imag (keypairenum attribute)": [[78, "pyecsca.sca.target.ectester.KeypairEnum.imag", false]], "imag (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.imag", false]], "imag (runmodeenum attribute)": [[78, "pyecsca.sca.target.ectester.RunModeEnum.imag", false]], "imag (samplecoding attribute)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.imag", false]], "imag (signatureenum attribute)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.imag", false]], "imag (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.imag", false]], "imag (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.imag", false]], "impltarget (class in pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.ImplTarget", false]], "in_notebook() (in module pyecsca.misc.utils)": [[52, "pyecsca.misc.utils.in_notebook", false]], "increment (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.INCREMENT", false]], "infinity (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.INFINITY", false]], "infinitypoint (class in pyecsca.ec.point)": [[45, "pyecsca.ec.point.InfinityPoint", false]], "info() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.info", false]], "info() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.info", false]], "info() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.info", false]], "init() (accumulatormultiplier method)": [[36, "pyecsca.ec.mult.base.AccumulatorMultiplier.init", false]], "init() (bgmwmultiplier method)": [[38, "pyecsca.ec.mult.comb.BGMWMultiplier.init", false]], "init() (binarynafmultiplier method)": [[41, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.init", false]], "init() (combmultiplier method)": [[38, "pyecsca.ec.mult.comb.CombMultiplier.init", false]], "init() (coronmultiplier method)": [[37, "pyecsca.ec.mult.binary.CoronMultiplier.init", false]], "init() (differentialladdermultiplier method)": [[40, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.init", false]], "init() (doubleandaddmultiplier method)": [[37, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.init", false]], "init() (fixedwindowltrmultiplier method)": [[42, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.init", false]], "init() (fullprecompmultiplier method)": [[39, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.init", false]], "init() (laddermultiplier method)": [[40, "pyecsca.ec.mult.ladder.LadderMultiplier.init", false]], "init() (ltrmultiplier method)": [[37, "pyecsca.ec.mult.binary.LTRMultiplier.init", false]], "init() (rtlmultiplier method)": [[37, "pyecsca.ec.mult.binary.RTLMultiplier.init", false]], "init() (scalarmultiplier method)": [[36, "pyecsca.ec.mult.base.ScalarMultiplier.init", false]], "init() (simpleladdermultiplier method)": [[40, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.init", false]], "init() (slidingwindowmultiplier method)": [[42, "pyecsca.ec.mult.window.SlidingWindowMultiplier.init", false]], "init() (windowboothmultiplier method)": [[42, "pyecsca.ec.mult.window.WindowBoothMultiplier.init", false]], "init() (windownafmultiplier method)": [[41, "pyecsca.ec.mult.naf.WindowNAFMultiplier.init", false]], "init_prng() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.init_prng", false]], "init_prng() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.init_prng", false]], "init_prng() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.init_prng", false]], "init_prng() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.init_prng", false]], "inplace() (chipwhisperertraceset class method)": [[97, "pyecsca.sca.trace_set.chipwhisperer.ChipWhispererTraceSet.inplace", false]], "inplace() (hdf5traceset class method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.inplace", false]], "inplace() (inspectortraceset class method)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.inplace", false]], "inplace() (pickletraceset class method)": [[100, "pyecsca.sca.trace_set.pickle.PickleTraceSet.inplace", false]], "inplace() (traceset class method)": [[96, "pyecsca.sca.trace_set.base.TraceSet.inplace", false]], "input_index (additionefdformula property)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.input_index", false]], "input_index (additionformula property)": [[15, "pyecsca.ec.formula.base.AdditionFormula.input_index", false]], "input_index (codeadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.input_index", false]], "input_index (codedifferentialadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.input_index", false]], "input_index (codedoublingformula property)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.input_index", false]], "input_index (codeformula property)": [[16, "pyecsca.ec.formula.code.CodeFormula.input_index", false]], "input_index (codeladderformula property)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.input_index", false]], "input_index (codenegationformula property)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.input_index", false]], "input_index (codescalingformula property)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.input_index", false]], "input_index (codetriplingformula property)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.input_index", false]], "input_index (differentialadditionefdformula property)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.input_index", false]], "input_index (differentialadditionformula property)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.input_index", false]], "input_index (doublingefdformula property)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.input_index", false]], "input_index (doublingformula property)": [[15, "pyecsca.ec.formula.base.DoublingFormula.input_index", false]], "input_index (efdformula property)": [[17, "pyecsca.ec.formula.efd.EFDFormula.input_index", false]], "input_index (fakeadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.input_index", false]], "input_index (fakedifferentialadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.input_index", false]], "input_index (fakedoublingformula property)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.input_index", false]], "input_index (fakeformula property)": [[19, "pyecsca.ec.formula.fake.FakeFormula.input_index", false]], "input_index (fakeladderformula property)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.input_index", false]], "input_index (fakenegationformula property)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.input_index", false]], "input_index (fakescalingformula property)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.input_index", false]], "input_index (faketriplingformula property)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.input_index", false]], "input_index (formula property)": [[15, "pyecsca.ec.formula.base.Formula.input_index", false]], "input_index (ladderefdformula property)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.input_index", false]], "input_index (ladderformula property)": [[15, "pyecsca.ec.formula.base.LadderFormula.input_index", false]], "input_index (negationefdformula property)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.input_index", false]], "input_index (negationformula property)": [[15, "pyecsca.ec.formula.base.NegationFormula.input_index", false]], "input_index (scalingefdformula property)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.input_index", false]], "input_index (scalingformula property)": [[15, "pyecsca.ec.formula.base.ScalingFormula.input_index", false]], "input_index (triplingefdformula property)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.input_index", false]], "input_index (triplingformula property)": [[15, "pyecsca.ec.formula.base.TriplingFormula.input_index", false]], "input_nodes (formulagraph attribute)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.input_nodes", false]], "input_nodes() (addfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.AddFliparoo.input_nodes", false]], "input_nodes() (addsubfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.input_nodes", false]], "input_nodes() (fliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.Fliparoo.input_nodes", false]], "input_nodes() (mulfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.MulFliparoo.input_nodes", false]], "input_points (formulaaction attribute)": [[15, "pyecsca.ec.formula.base.FormulaAction.input_points", false]], "inputnode (class in pyecsca.ec.formula.graph)": [[21, "pyecsca.ec.formula.graph.InputNode", false]], "inputs (additionefdformula property)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.inputs", false]], "inputs (additionformula property)": [[15, "pyecsca.ec.formula.base.AdditionFormula.inputs", false]], "inputs (codeadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.inputs", false]], "inputs (codedifferentialadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.inputs", false]], "inputs (codedoublingformula property)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.inputs", false]], "inputs (codeformula property)": [[16, "pyecsca.ec.formula.code.CodeFormula.inputs", false]], "inputs (codeladderformula property)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.inputs", false]], "inputs (codenegationformula property)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.inputs", false]], "inputs (codescalingformula property)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.inputs", false]], "inputs (codetriplingformula property)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.inputs", false]], "inputs (differentialadditionefdformula property)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.inputs", false]], "inputs (differentialadditionformula property)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.inputs", false]], "inputs (doublingefdformula property)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.inputs", false]], "inputs (doublingformula property)": [[15, "pyecsca.ec.formula.base.DoublingFormula.inputs", false]], "inputs (efdformula property)": [[17, "pyecsca.ec.formula.efd.EFDFormula.inputs", false]], "inputs (fakeadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.inputs", false]], "inputs (fakedifferentialadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.inputs", false]], "inputs (fakedoublingformula property)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.inputs", false]], "inputs (fakeformula property)": [[19, "pyecsca.ec.formula.fake.FakeFormula.inputs", false]], "inputs (fakeladderformula property)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.inputs", false]], "inputs (fakenegationformula property)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.inputs", false]], "inputs (fakescalingformula property)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.inputs", false]], "inputs (faketriplingformula property)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.inputs", false]], "inputs (formula property)": [[15, "pyecsca.ec.formula.base.Formula.inputs", false]], "inputs (formulaaction attribute)": [[15, "pyecsca.ec.formula.base.FormulaAction.inputs", false]], "inputs (ladderefdformula property)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.inputs", false]], "inputs (ladderformula property)": [[15, "pyecsca.ec.formula.base.LadderFormula.inputs", false]], "inputs (negationefdformula property)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.inputs", false]], "inputs (negationformula property)": [[15, "pyecsca.ec.formula.base.NegationFormula.inputs", false]], "inputs (scalingefdformula property)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.inputs", false]], "inputs (scalingformula property)": [[15, "pyecsca.ec.formula.base.ScalingFormula.inputs", false]], "inputs (triplingefdformula property)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.inputs", false]], "inputs (triplingformula property)": [[15, "pyecsca.ec.formula.base.TriplingFormula.inputs", false]], "ins (commandapdu attribute)": [[73, "pyecsca.sca.target.ISO7816.CommandAPDU.ins", false]], "ins_allocate (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_ALLOCATE", false]], "ins_allocate_ka (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_ALLOCATE_KA", false]], "ins_allocate_sig (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_ALLOCATE_SIG", false]], "ins_buffer (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_BUFFER", false]], "ins_cleanup (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_CLEANUP", false]], "ins_clear (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_CLEAR", false]], "ins_ecdh (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_ECDH", false]], "ins_ecdh_direct (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_ECDH_DIRECT", false]], "ins_ecdsa (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_ECDSA", false]], "ins_ecdsa_sign (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_ECDSA_SIGN", false]], "ins_ecdsa_verify (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_ECDSA_VERIFY", false]], "ins_export (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_EXPORT", false]], "ins_generate (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_GENERATE", false]], "ins_get_info (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_GET_INFO", false]], "ins_perform (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_PERFORM", false]], "ins_set (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_SET", false]], "ins_set_dry_run_mode (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_SET_DRY_RUN_MODE", false]], "ins_transform (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.INS_TRANSFORM", false]], "inside (action attribute)": [[9, "pyecsca.ec.context.Action.inside", false]], "inside (coordinatemappingaction attribute)": [[45, "pyecsca.ec.point.CoordinateMappingAction.inside", false]], "inside (ecdhaction attribute)": [[26, "pyecsca.ec.key_agreement.ECDHAction.inside", false]], "inside (ecdsaaction attribute)": [[47, "pyecsca.ec.signature.ECDSAAction.inside", false]], "inside (ecdsasignaction attribute)": [[47, "pyecsca.ec.signature.ECDSASignAction.inside", false]], "inside (ecdsaverifyaction attribute)": [[47, "pyecsca.ec.signature.ECDSAVerifyAction.inside", false]], "inside (formulaaction attribute)": [[15, "pyecsca.ec.formula.base.FormulaAction.inside", false]], "inside (keygenaction attribute)": [[27, "pyecsca.ec.key_generation.KeygenAction.inside", false]], "inside (multiplecontext attribute)": [[60, "pyecsca.sca.re.rpa.MultipleContext.inside", false]], "inside (precomputationaction attribute)": [[36, "pyecsca.ec.mult.base.PrecomputationAction.inside", false]], "inside (randommodaction attribute)": [[29, "pyecsca.ec.mod.base.RandomModAction.inside", false]], "inside (resultaction attribute)": [[9, "pyecsca.ec.context.ResultAction.inside", false]], "inside (scalarmultiplicationaction attribute)": [[36, "pyecsca.ec.mult.base.ScalarMultiplicationAction.inside", false]], "inspectortraceset (class in pyecsca.sca.trace_set.inspector)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet", false]], "instructionenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.InstructionEnum", false]], "int16 (samplecoding attribute)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.Int16", false]], "int32 (samplecoding attribute)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.Int32", false]], "int8 (samplecoding attribute)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.Int8", false]], "intermediates (formulaaction attribute)": [[15, "pyecsca.ec.formula.base.FormulaAction.intermediates", false]], "inv (configuration attribute)": [[8, "pyecsca.ec.configuration.Configuration.inv", false]], "inv (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.inv", false]], "inv (optype attribute)": [[43, "pyecsca.ec.op.OpType.Inv", false]], "inverse() (flintmod method)": [[30, "pyecsca.ec.mod.flint.FlintMod.inverse", false]], "inverse() (gmpmod method)": [[31, "pyecsca.ec.mod.gmp.GMPMod.inverse", false]], "inverse() (mod method)": [[29, "pyecsca.ec.mod.base.Mod.inverse", false]], "inverse() (rawmod method)": [[32, "pyecsca.ec.mod.raw.RawMod.inverse", false]], "inverse() (symbolicmod method)": [[33, "pyecsca.ec.mod.symbolic.SymbolicMod.inverse", false]], "inverse() (undefined method)": [[29, "pyecsca.ec.mod.base.Undefined.inverse", false]], "inversion (class in pyecsca.ec.configuration)": [[8, "pyecsca.ec.configuration.Inversion", false]], "invert() (in module pyecsca.sca.trace.process)": [[91, "pyecsca.sca.trace.process.invert", false]], "is_add (constantnode property)": [[21, "pyecsca.ec.formula.graph.ConstantNode.is_add", false]], "is_add (inputnode property)": [[21, "pyecsca.ec.formula.graph.InputNode.is_add", false]], "is_add (node property)": [[21, "pyecsca.ec.formula.graph.Node.is_add", false]], "is_div (constantnode property)": [[21, "pyecsca.ec.formula.graph.ConstantNode.is_div", false]], "is_div (inputnode property)": [[21, "pyecsca.ec.formula.graph.InputNode.is_div", false]], "is_div (node property)": [[21, "pyecsca.ec.formula.graph.Node.is_div", false]], "is_id (constantnode property)": [[21, "pyecsca.ec.formula.graph.ConstantNode.is_id", false]], "is_id (inputnode property)": [[21, "pyecsca.ec.formula.graph.InputNode.is_id", false]], "is_id (node property)": [[21, "pyecsca.ec.formula.graph.Node.is_id", false]], "is_inv (constantnode property)": [[21, "pyecsca.ec.formula.graph.ConstantNode.is_inv", false]], "is_inv (inputnode property)": [[21, "pyecsca.ec.formula.graph.InputNode.is_inv", false]], "is_inv (node property)": [[21, "pyecsca.ec.formula.graph.Node.is_inv", false]], "is_leaf (node property)": [[9, "pyecsca.ec.context.Node.is_leaf", false], [62, "pyecsca.sca.re.tree.Node.is_leaf", false]], "is_mul (constantnode property)": [[21, "pyecsca.ec.formula.graph.ConstantNode.is_mul", false]], "is_mul (inputnode property)": [[21, "pyecsca.ec.formula.graph.InputNode.is_mul", false]], "is_mul (node property)": [[21, "pyecsca.ec.formula.graph.Node.is_mul", false]], "is_neg (constantnode property)": [[21, "pyecsca.ec.formula.graph.ConstantNode.is_neg", false]], "is_neg (inputnode property)": [[21, "pyecsca.ec.formula.graph.InputNode.is_neg", false]], "is_neg (node property)": [[21, "pyecsca.ec.formula.graph.Node.is_neg", false]], "is_neutral() (ellipticcurve method)": [[11, "pyecsca.ec.curve.EllipticCurve.is_neutral", false]], "is_on_curve() (ellipticcurve method)": [[11, "pyecsca.ec.curve.EllipticCurve.is_on_curve", false]], "is_pow (constantnode property)": [[21, "pyecsca.ec.formula.graph.ConstantNode.is_pow", false]], "is_pow (inputnode property)": [[21, "pyecsca.ec.formula.graph.InputNode.is_pow", false]], "is_pow (node property)": [[21, "pyecsca.ec.formula.graph.Node.is_pow", false]], "is_residue() (flintmod method)": [[30, "pyecsca.ec.mod.flint.FlintMod.is_residue", false]], "is_residue() (gmpmod method)": [[31, "pyecsca.ec.mod.gmp.GMPMod.is_residue", false]], "is_residue() (mod method)": [[29, "pyecsca.ec.mod.base.Mod.is_residue", false]], "is_residue() (rawmod method)": [[32, "pyecsca.ec.mod.raw.RawMod.is_residue", false]], "is_residue() (symbolicmod method)": [[33, "pyecsca.ec.mod.symbolic.SymbolicMod.is_residue", false]], "is_residue() (undefined method)": [[29, "pyecsca.ec.mod.base.Undefined.is_residue", false]], "is_root (node property)": [[9, "pyecsca.ec.context.Node.is_root", false], [62, "pyecsca.sca.re.tree.Node.is_root", false]], "is_sqr (constantnode property)": [[21, "pyecsca.ec.formula.graph.ConstantNode.is_sqr", false]], "is_sqr (inputnode property)": [[21, "pyecsca.ec.formula.graph.InputNode.is_sqr", false]], "is_sqr (node property)": [[21, "pyecsca.ec.formula.graph.Node.is_sqr", false]], "is_sub (constantnode property)": [[21, "pyecsca.ec.formula.graph.ConstantNode.is_sub", false]], "is_sub (inputnode property)": [[21, "pyecsca.ec.formula.graph.InputNode.is_sub", false]], "is_sub (node property)": [[21, "pyecsca.ec.formula.graph.Node.is_sub", false]], "iso7816 (class in pyecsca.sca.target.iso7816)": [[73, "pyecsca.sca.target.ISO7816.ISO7816", false]], "iso7816target (class in pyecsca.sca.target.iso7816)": [[73, "pyecsca.sca.target.ISO7816.ISO7816Target", false]], "items() (hdf5meta method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5Meta.items", false]], "iter_path_reverse() (node method)": [[9, "pyecsca.ec.context.Node.iter_path_reverse", false], [62, "pyecsca.sca.re.tree.Node.iter_path_reverse", false]], "ivs_norm() (in module pyecsca.ec.formula.metrics)": [[22, "pyecsca.ec.formula.metrics.ivs_norm", false]], "jacobi() (in module pyecsca.ec.mod.base)": [[29, "pyecsca.ec.mod.base.jacobi", false]], "k (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.K", false]], "karatsuba (multiplication attribute)": [[8, "pyecsca.ec.configuration.Multiplication.KARATSUBA", false]], "karatsuba (squaring attribute)": [[8, "pyecsca.ec.configuration.Squaring.KARATSUBA", false]], "key (exportresponse attribute)": [[78, "pyecsca.sca.target.ectester.ExportResponse.key", false]], "keyagreement (class in pyecsca.ec.key_agreement)": [[26, "pyecsca.ec.key_agreement.KeyAgreement", false]], "keyagreementenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum", false]], "keybuildenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.KeyBuildEnum", false]], "keyclassenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.KeyClassEnum", false]], "keyenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.KeyEnum", false]], "keygen (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.keygen", false]], "keygen (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.keygen", false]], "keygenaction (class in pyecsca.ec.key_generation)": [[27, "pyecsca.ec.key_generation.KeygenAction", false]], "keygeneration (class in pyecsca.ec.key_generation)": [[27, "pyecsca.ec.key_generation.KeyGeneration", false]], "keypair (exportresponse attribute)": [[78, "pyecsca.sca.target.ectester.ExportResponse.keypair", false]], "keypair (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.KEYPAIR", false]], "keypair_both (keypairenum attribute)": [[78, "pyecsca.sca.target.ectester.KeypairEnum.KEYPAIR_BOTH", false]], "keypair_local (keypairenum attribute)": [[78, "pyecsca.sca.target.ectester.KeypairEnum.KEYPAIR_LOCAL", false]], "keypair_remote (keypairenum attribute)": [[78, "pyecsca.sca.target.ectester.KeypairEnum.KEYPAIR_REMOTE", false]], "keypairenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.KeypairEnum", false]], "keys (taskexecutor attribute)": [[52, "pyecsca.misc.utils.TaskExecutor.keys", false]], "keys() (hdf5meta method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5Meta.keys", false]], "ks_test() (in module pyecsca.sca.trace.test)": [[93, "pyecsca.sca.trace.test.ks_test", false]], "label (constantnode property)": [[21, "pyecsca.ec.formula.graph.ConstantNode.label", false]], "label (inputnode property)": [[21, "pyecsca.ec.formula.graph.InputNode.label", false]], "label (node property)": [[21, "pyecsca.ec.formula.graph.Node.label", false]], "ladd (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.ladd", false]], "ladderefdformula (class in pyecsca.ec.formula.efd)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula", false]], "ladderformula (class in pyecsca.ec.formula.base)": [[15, "pyecsca.ec.formula.base.LadderFormula", false]], "laddermultiplier (class in pyecsca.ec.mult.ladder)": [[40, "pyecsca.ec.mult.ladder.LadderMultiplier", false]], "last (addfliparoo property)": [[20, "pyecsca.ec.formula.fliparoo.AddFliparoo.last", false]], "last (addsubfliparoo property)": [[20, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.last", false]], "last (fliparoo property)": [[20, "pyecsca.ec.formula.fliparoo.Fliparoo.last", false]], "last (mulfliparoo property)": [[20, "pyecsca.ec.formula.fliparoo.MulFliparoo.last", false]], "leakage_model (cpa attribute)": [[55, "pyecsca.sca.attack.CPA.CPA.leakage_model", false]], "leakage_model (leakagetarget attribute)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.leakage_model", false]], "leakagemodel (class in pyecsca.sca.attack.leakage_model)": [[57, "pyecsca.sca.attack.leakage_model.LeakageModel", false]], "leakagetarget (class in pyecsca.sca.target.leakage)": [[80, "pyecsca.sca.target.leakage.LeakageTarget", false]], "leaves (node property)": [[9, "pyecsca.ec.context.Node.leaves", false], [62, "pyecsca.sca.re.tree.Node.leaves", false]], "leaves (tree property)": [[62, "pyecsca.sca.re.tree.Tree.leaves", false]], "leiatarget (class in pyecsca.sca.target.leia)": [[81, "pyecsca.sca.target.leia.LEIATarget", false]], "levels() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.levels", false]], "load_category() (in module pyecsca.ec.params)": [[44, "pyecsca.ec.params.load_category", false]], "load_params() (in module pyecsca.ec.params)": [[44, "pyecsca.ec.params.load_params", false]], "load_params_ecgen() (in module pyecsca.ec.params)": [[44, "pyecsca.ec.params.load_params_ecgen", false]], "load_params_ectester() (in module pyecsca.ec.params)": [[44, "pyecsca.ec.params.load_params_ectester", false]], "local() (in module pyecsca.ec.context)": [[9, "pyecsca.ec.context.local", false]], "log (config attribute)": [[51, "pyecsca.misc.cfg.Config.log", false]], "log() (in module pyecsca.misc.utils)": [[52, "pyecsca.misc.utils.log", false]], "log_scale (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.log_scale", false]], "loggingconfig (class in pyecsca.misc.cfg)": [[51, "pyecsca.misc.cfg.LoggingConfig", false]], "ltr (processingdirection attribute)": [[36, "pyecsca.ec.mult.base.ProcessingDirection.LTR", false]], "ltrmultiplier (class in pyecsca.ec.mult.binary)": [[37, "pyecsca.ec.mult.binary.LTRMultiplier", false]], "m (fixedwindowltrmultiplier attribute)": [[42, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.m", false]], "m2e() (in module pyecsca.ec.transformations)": [[48, "pyecsca.ec.transformations.M2E", false]], "m2sw() (in module pyecsca.ec.transformations)": [[48, "pyecsca.ec.transformations.M2SW", false]], "m2te() (in module pyecsca.ec.transformations)": [[48, "pyecsca.ec.transformations.M2TE", false]], "map (class in pyecsca.sca.re.tree)": [[62, "pyecsca.sca.re.tree.Map", false]], "map() (taskexecutor method)": [[52, "pyecsca.misc.utils.TaskExecutor.map", false]], "map_to_affine() (in module pyecsca.sca.re.zvp)": [[63, "pyecsca.sca.re.zvp.map_to_affine", false]], "mapping (map attribute)": [[62, "pyecsca.sca.re.tree.Map.mapping", false]], "maps (tree attribute)": [[62, "pyecsca.sca.re.tree.Tree.maps", false]], "mask_04 (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.MASK_04", false]], "match_part() (in module pyecsca.sca.trace.match)": [[89, "pyecsca.sca.trace.match.match_part", false]], "match_pattern() (in module pyecsca.sca.trace.match)": [[89, "pyecsca.sca.trace.match.match_pattern", false]], "max (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.MAX", false]], "max_adc_value (picoscopesdk attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.MAX_ADC_VALUE", false]], "max_adc_value (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.MAX_ADC_VALUE", false]], "max_adc_value (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.MAX_ADC_VALUE", false]], "max_adc_value (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.MAX_ADC_VALUE", false]], "max_adc_value (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.MAX_ADC_VALUE", false]], "max_adc_value (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.MAX_ADC_VALUE", false]], "merge() (map method)": [[62, "pyecsca.sca.re.tree.Map.merge", false]], "meta (additionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.meta", false]], "meta (additionformula attribute)": [[15, "pyecsca.ec.formula.base.AdditionFormula.meta", false]], "meta (codeadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.meta", false]], "meta (codedifferentialadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.meta", false]], "meta (codedoublingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.meta", false]], "meta (codeformula attribute)": [[16, "pyecsca.ec.formula.code.CodeFormula.meta", false]], "meta (codeladderformula attribute)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.meta", false]], "meta (codenegationformula attribute)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.meta", false]], "meta (codescalingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.meta", false]], "meta (codetriplingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.meta", false]], "meta (combinedtrace attribute)": [[94, "pyecsca.sca.trace.trace.CombinedTrace.meta", false]], "meta (differentialadditionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.meta", false]], "meta (differentialadditionformula attribute)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.meta", false]], "meta (doublingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.meta", false]], "meta (doublingformula attribute)": [[15, "pyecsca.ec.formula.base.DoublingFormula.meta", false]], "meta (efdformula attribute)": [[17, "pyecsca.ec.formula.efd.EFDFormula.meta", false]], "meta (fakeadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.meta", false]], "meta (fakedifferentialadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.meta", false]], "meta (fakedoublingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.meta", false]], "meta (fakeformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeFormula.meta", false]], "meta (fakeladderformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.meta", false]], "meta (fakenegationformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.meta", false]], "meta (fakescalingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.meta", false]], "meta (faketriplingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.meta", false]], "meta (formula attribute)": [[15, "pyecsca.ec.formula.base.Formula.meta", false]], "meta (ladderefdformula attribute)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.meta", false]], "meta (ladderformula attribute)": [[15, "pyecsca.ec.formula.base.LadderFormula.meta", false]], "meta (negationefdformula attribute)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.meta", false]], "meta (negationformula attribute)": [[15, "pyecsca.ec.formula.base.NegationFormula.meta", false]], "meta (scalingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.meta", false]], "meta (scalingformula attribute)": [[15, "pyecsca.ec.formula.base.ScalingFormula.meta", false]], "meta (stackedtraces attribute)": [[71, "pyecsca.sca.stacked_traces.stacked_traces.StackedTraces.meta", false]], "meta (trace attribute)": [[94, "pyecsca.sca.trace.trace.Trace.meta", false]], "meta (triplingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.meta", false]], "meta (triplingformula attribute)": [[15, "pyecsca.ec.formula.base.TriplingFormula.meta", false]], "miller_rabin() (in module pyecsca.ec.mod.base)": [[29, "pyecsca.ec.mod.base.miller_rabin", false]], "min_adc_value (picoscopesdk attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.MIN_ADC_VALUE", false]], "min_adc_value (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.MIN_ADC_VALUE", false]], "min_adc_value (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.MIN_ADC_VALUE", false]], "min_adc_value (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.MIN_ADC_VALUE", false]], "min_adc_value (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.MIN_ADC_VALUE", false]], "min_adc_value (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.MIN_ADC_VALUE", false]], "mod (class in pyecsca.ec.mod.base)": [[29, "pyecsca.ec.mod.base.Mod", false]], "mod() (in module pyecsca.ec.mod.base)": [[29, "pyecsca.ec.mod.base.mod", false]], "mod_implementation (ecconfig property)": [[51, "pyecsca.misc.cfg.ECConfig.mod_implementation", false]], "mod_rand (configuration attribute)": [[8, "pyecsca.ec.configuration.Configuration.mod_rand", false]], "mod_rand (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.mod_rand", false]], "mode_dry_run (runmodeenum attribute)": [[78, "pyecsca.sca.target.ectester.RunModeEnum.MODE_DRY_RUN", false]], "mode_normal (runmodeenum attribute)": [[78, "pyecsca.sca.target.ectester.RunModeEnum.MODE_NORMAL", false]], "model (configuration attribute)": [[8, "pyecsca.ec.configuration.Configuration.model", false]], "model (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.model", false]], "model (devicetarget attribute)": [[3, "pyecsca.codegen.client.DeviceTarget.model", false]], "model (ellipticcurve attribute)": [[11, "pyecsca.ec.curve.EllipticCurve.model", false]], "model (emulatortarget attribute)": [[3, "pyecsca.codegen.client.EmulatorTarget.model", false]], "model (hosttarget attribute)": [[3, "pyecsca.codegen.client.HostTarget.model", false]], "model (impltarget attribute)": [[3, "pyecsca.codegen.client.ImplTarget.model", false]], "model (leakagetarget attribute)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.model", false]], "model_from (coordinatemappingaction attribute)": [[45, "pyecsca.ec.point.CoordinateMappingAction.model_from", false]], "model_to (coordinatemappingaction attribute)": [[45, "pyecsca.ec.point.CoordinateMappingAction.model_to", false]], "module": [[1, "module-pyecsca.codegen", false], [2, "module-pyecsca.codegen.builder", false], [3, "module-pyecsca.codegen.client", false], [4, "module-pyecsca.codegen.common", false], [5, "module-pyecsca.codegen.render", false], [6, "module-pyecsca.codegen.templates", false], [7, "module-pyecsca.ec", false], [8, "module-pyecsca.ec.configuration", false], [9, "module-pyecsca.ec.context", false], [10, "module-pyecsca.ec.coordinates", false], [11, "module-pyecsca.ec.curve", false], [12, "module-pyecsca.ec.divpoly", false], [13, "module-pyecsca.ec.error", false], [14, "module-pyecsca.ec.formula", false], [15, "module-pyecsca.ec.formula.base", false], [16, "module-pyecsca.ec.formula.code", false], [17, "module-pyecsca.ec.formula.efd", false], [18, "module-pyecsca.ec.formula.expand", false], [19, "module-pyecsca.ec.formula.fake", false], [20, "module-pyecsca.ec.formula.fliparoo", false], [21, "module-pyecsca.ec.formula.graph", false], [22, "module-pyecsca.ec.formula.metrics", false], [23, "module-pyecsca.ec.formula.partitions", false], [24, "module-pyecsca.ec.formula.switch_sign", false], [25, "module-pyecsca.ec.formula.unroll", false], [26, "module-pyecsca.ec.key_agreement", false], [27, "module-pyecsca.ec.key_generation", false], [28, "module-pyecsca.ec.mod", false], [29, "module-pyecsca.ec.mod.base", false], [30, "module-pyecsca.ec.mod.flint", false], [31, "module-pyecsca.ec.mod.gmp", false], [32, "module-pyecsca.ec.mod.raw", false], [33, "module-pyecsca.ec.mod.symbolic", false], [34, "module-pyecsca.ec.model", false], [35, "module-pyecsca.ec.mult", false], [36, "module-pyecsca.ec.mult.base", false], [37, "module-pyecsca.ec.mult.binary", false], [38, "module-pyecsca.ec.mult.comb", false], [39, "module-pyecsca.ec.mult.fixed", false], [40, "module-pyecsca.ec.mult.ladder", false], [41, "module-pyecsca.ec.mult.naf", false], [42, "module-pyecsca.ec.mult.window", false], [43, "module-pyecsca.ec.op", false], [44, "module-pyecsca.ec.params", false], [45, "module-pyecsca.ec.point", false], [46, "module-pyecsca.ec.scalar", false], [47, "module-pyecsca.ec.signature", false], [48, "module-pyecsca.ec.transformations", false], [49, "module-pyecsca.misc", false], [50, "module-pyecsca.misc.cache", false], [51, "module-pyecsca.misc.cfg", false], [52, "module-pyecsca.misc.utils", false], [53, "module-pyecsca.sca", false], [54, "module-pyecsca.sca.attack", false], [55, "module-pyecsca.sca.attack.CPA", false], [56, "module-pyecsca.sca.attack.DPA", false], [57, "module-pyecsca.sca.attack.leakage_model", false], [58, "module-pyecsca.sca.re", false], [59, "module-pyecsca.sca.re.base", false], [60, "module-pyecsca.sca.re.rpa", false], [61, "module-pyecsca.sca.re.structural", false], [62, "module-pyecsca.sca.re.tree", false], [63, "module-pyecsca.sca.re.zvp", false], [64, "module-pyecsca.sca.scope", false], [65, "module-pyecsca.sca.scope.base", false], [66, "module-pyecsca.sca.scope.chipwhisperer", false], [67, "module-pyecsca.sca.scope.picoscope_alt", false], [68, "module-pyecsca.sca.scope.picoscope_sdk", false], [69, "module-pyecsca.sca.stacked_traces", false], [70, "module-pyecsca.sca.stacked_traces.combine", false], [71, "module-pyecsca.sca.stacked_traces.stacked_traces", false], [72, "module-pyecsca.sca.target", false], [73, "module-pyecsca.sca.target.ISO7816", false], [74, "module-pyecsca.sca.target.PCSC", false], [75, "module-pyecsca.sca.target.base", false], [76, "module-pyecsca.sca.target.binary", false], [77, "module-pyecsca.sca.target.chipwhisperer", false], [78, "module-pyecsca.sca.target.ectester", false], [79, "module-pyecsca.sca.target.flash", false], [80, "module-pyecsca.sca.target.leakage", false], [81, "module-pyecsca.sca.target.leia", false], [82, "module-pyecsca.sca.target.serial", false], [83, "module-pyecsca.sca.target.simpleserial", false], [84, "module-pyecsca.sca.trace", false], [85, "module-pyecsca.sca.trace.align", false], [86, "module-pyecsca.sca.trace.combine", false], [87, "module-pyecsca.sca.trace.edit", false], [88, "module-pyecsca.sca.trace.filter", false], [89, "module-pyecsca.sca.trace.match", false], [90, "module-pyecsca.sca.trace.plot", false], [91, "module-pyecsca.sca.trace.process", false], [92, "module-pyecsca.sca.trace.sampling", false], [93, "module-pyecsca.sca.trace.test", false], [94, "module-pyecsca.sca.trace.trace", false], [95, "module-pyecsca.sca.trace_set", false], [96, "module-pyecsca.sca.trace_set.base", false], [97, "module-pyecsca.sca.trace_set.chipwhisperer", false], [98, "module-pyecsca.sca.trace_set.hdf5", false], [99, "module-pyecsca.sca.trace_set.inspector", false], [100, "module-pyecsca.sca.trace_set.pickle", false]], "module (picoscopesdk attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.MODULE", false]], "module (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.MODULE", false]], "module (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.MODULE", false]], "module (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.MODULE", false]], "module (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.MODULE", false]], "module (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.MODULE", false]], "montgomery (reduction attribute)": [[8, "pyecsca.ec.configuration.Reduction.MONTGOMERY", false]], "montgomerymodel (class in pyecsca.ec.model)": [[34, "pyecsca.ec.model.MontgomeryModel", false]], "msg (ecdsaaction attribute)": [[47, "pyecsca.ec.signature.ECDSAAction.msg", false]], "msg (ecdsasignaction attribute)": [[47, "pyecsca.ec.signature.ECDSASignAction.msg", false]], "msg (ecdsaverifyaction attribute)": [[47, "pyecsca.ec.signature.ECDSAVerifyAction.msg", false]], "mulfliparoo (class in pyecsca.ec.formula.fliparoo)": [[20, "pyecsca.ec.formula.fliparoo.MulFliparoo", false]], "mult (configuration attribute)": [[8, "pyecsca.ec.configuration.Configuration.mult", false]], "mult (cpa attribute)": [[55, "pyecsca.sca.attack.CPA.CPA.mult", false]], "mult (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.mult", false]], "mult (dpa attribute)": [[56, "pyecsca.sca.attack.DPA.DPA.mult", false]], "mult (ecdh_none attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_NONE.mult", false]], "mult (ecdh_sha1 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA1.mult", false]], "mult (ecdh_sha224 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA224.mult", false]], "mult (ecdh_sha256 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA256.mult", false]], "mult (ecdh_sha384 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA384.mult", false]], "mult (ecdh_sha512 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA512.mult", false]], "mult (ecdsa_none attribute)": [[47, "pyecsca.ec.signature.ECDSA_NONE.mult", false]], "mult (ecdsa_sha1 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA1.mult", false]], "mult (ecdsa_sha224 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA224.mult", false]], "mult (ecdsa_sha256 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA256.mult", false]], "mult (ecdsa_sha384 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA384.mult", false]], "mult (ecdsa_sha512 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA512.mult", false]], "mult (keyagreement attribute)": [[26, "pyecsca.ec.key_agreement.KeyAgreement.mult", false]], "mult (keygeneration attribute)": [[27, "pyecsca.ec.key_generation.KeyGeneration.mult", false]], "mult (leakagetarget attribute)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.mult", false]], "mult (optype attribute)": [[43, "pyecsca.ec.op.OpType.Mult", false]], "mult (signature attribute)": [[47, "pyecsca.ec.signature.Signature.mult", false]], "mult (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.mult", false]], "mult_by_n() (in module pyecsca.ec.divpoly)": [[12, "pyecsca.ec.divpoly.mult_by_n", false]], "multiplecontext (class in pyecsca.sca.re.rpa)": [[60, "pyecsca.sca.re.rpa.MultipleContext", false]], "multiplication (class in pyecsca.ec.configuration)": [[8, "pyecsca.ec.configuration.Multiplication", false]], "multiply() (accumulatormultiplier method)": [[36, "pyecsca.ec.mult.base.AccumulatorMultiplier.multiply", false]], "multiply() (bgmwmultiplier method)": [[38, "pyecsca.ec.mult.comb.BGMWMultiplier.multiply", false]], "multiply() (binarynafmultiplier method)": [[41, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.multiply", false]], "multiply() (combmultiplier method)": [[38, "pyecsca.ec.mult.comb.CombMultiplier.multiply", false]], "multiply() (coronmultiplier method)": [[37, "pyecsca.ec.mult.binary.CoronMultiplier.multiply", false]], "multiply() (differentialladdermultiplier method)": [[40, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.multiply", false]], "multiply() (doubleandaddmultiplier method)": [[37, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.multiply", false]], "multiply() (fixedwindowltrmultiplier method)": [[42, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.multiply", false]], "multiply() (fullprecompmultiplier method)": [[39, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.multiply", false]], "multiply() (laddermultiplier method)": [[40, "pyecsca.ec.mult.ladder.LadderMultiplier.multiply", false]], "multiply() (ltrmultiplier method)": [[37, "pyecsca.ec.mult.binary.LTRMultiplier.multiply", false]], "multiply() (rtlmultiplier method)": [[37, "pyecsca.ec.mult.binary.RTLMultiplier.multiply", false]], "multiply() (scalarmultiplier method)": [[36, "pyecsca.ec.mult.base.ScalarMultiplier.multiply", false]], "multiply() (simpleladdermultiplier method)": [[40, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.multiply", false]], "multiply() (slidingwindowmultiplier method)": [[42, "pyecsca.ec.mult.window.SlidingWindowMultiplier.multiply", false]], "multiply() (windowboothmultiplier method)": [[42, "pyecsca.ec.mult.window.WindowBoothMultiplier.multiply", false]], "multiply() (windownafmultiplier method)": [[41, "pyecsca.ec.mult.naf.WindowNAFMultiplier.multiply", false]], "n (flintmod property)": [[30, "pyecsca.ec.mod.flint.FlintMod.n", false]], "n (gmpmod attribute)": [[31, "pyecsca.ec.mod.gmp.GMPMod.n", false]], "n (mod attribute)": [[29, "pyecsca.ec.mod.base.Mod.n", false]], "n (rawmod attribute)": [[32, "pyecsca.ec.mod.raw.RawMod.n", false]], "n (symbolicmod attribute)": [[33, "pyecsca.ec.mod.symbolic.SymbolicMod.n", false]], "n (undefined attribute)": [[29, "pyecsca.ec.mod.base.Undefined.n", false]], "naf() (in module pyecsca.ec.scalar)": [[46, "pyecsca.ec.scalar.naf", false]], "name (additionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.name", false]], "name (additionformula attribute)": [[15, "pyecsca.ec.formula.base.AdditionFormula.name", false]], "name (affinecoordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.AffineCoordinateModel.name", false]], "name (codeadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.name", false]], "name (codedifferentialadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.name", false]], "name (codedoublingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.name", false]], "name (codeformula attribute)": [[16, "pyecsca.ec.formula.code.CodeFormula.name", false]], "name (codeladderformula attribute)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.name", false]], "name (codenegationformula attribute)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.name", false]], "name (codescalingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.name", false]], "name (codetriplingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.name", false]], "name (coordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.CoordinateModel.name", false]], "name (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.name", false]], "name (differentialadditionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.name", false]], "name (differentialadditionformula attribute)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.name", false]], "name (domainparametercategory attribute)": [[44, "pyecsca.ec.params.DomainParameterCategory.name", false]], "name (domainparameters attribute)": [[44, "pyecsca.ec.params.DomainParameters.name", false]], "name (doublingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.name", false]], "name (doublingformula attribute)": [[15, "pyecsca.ec.formula.base.DoublingFormula.name", false]], "name (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.name", false]], "name (efdformula attribute)": [[17, "pyecsca.ec.formula.efd.EFDFormula.name", false]], "name (fakeadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.name", false]], "name (fakedifferentialadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.name", false]], "name (fakedoublingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.name", false]], "name (fakeformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeFormula.name", false]], "name (fakeladderformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.name", false]], "name (fakenegationformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.name", false]], "name (fakescalingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.name", false]], "name (faketriplingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.name", false]], "name (formula attribute)": [[15, "pyecsca.ec.formula.base.Formula.name", false]], "name (formulagraph attribute)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.name", false]], "name (ladderefdformula attribute)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.name", false]], "name (ladderformula attribute)": [[15, "pyecsca.ec.formula.base.LadderFormula.name", false]], "name (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.name", false]], "name (negationefdformula attribute)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.name", false]], "name (negationformula attribute)": [[15, "pyecsca.ec.formula.base.NegationFormula.name", false]], "name (opresult attribute)": [[15, "pyecsca.ec.formula.base.OpResult.name", false]], "name (scalingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.name", false]], "name (scalingformula attribute)": [[15, "pyecsca.ec.formula.base.ScalingFormula.name", false]], "name (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.name", false]], "name (triplingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.name", false]], "name (triplingformula attribute)": [[15, "pyecsca.ec.formula.base.TriplingFormula.name", false]], "name (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.name", false]], "names() (enumdefine class method)": [[8, "pyecsca.ec.configuration.EnumDefine.names", false]], "names() (hashtype class method)": [[8, "pyecsca.ec.configuration.HashType.names", false]], "names() (inversion class method)": [[8, "pyecsca.ec.configuration.Inversion.names", false]], "names() (multiplication class method)": [[8, "pyecsca.ec.configuration.Multiplication.names", false]], "names() (platform class method)": [[4, "pyecsca.codegen.common.Platform.names", false]], "names() (randommod class method)": [[8, "pyecsca.ec.configuration.RandomMod.names", false]], "names() (reduction class method)": [[8, "pyecsca.ec.configuration.Reduction.names", false]], "names() (squaring class method)": [[8, "pyecsca.ec.configuration.Squaring.names", false]], "nano (platform attribute)": [[4, "pyecsca.codegen.common.Platform.NANO", false]], "ne (commandapdu attribute)": [[73, "pyecsca.sca.target.ISO7816.CommandAPDU.ne", false]], "neg (optype attribute)": [[43, "pyecsca.ec.op.OpType.Neg", false]], "neg (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.neg", false]], "negationefdformula (class in pyecsca.ec.formula.efd)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula", false]], "negationformula (class in pyecsca.ec.formula.base)": [[15, "pyecsca.ec.formula.base.NegationFormula", false]], "networkx_graph() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.networkx_graph", false]], "neutral (affinecoordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.AffineCoordinateModel.neutral", false]], "neutral (coordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.CoordinateModel.neutral", false]], "neutral (ellipticcurve attribute)": [[11, "pyecsca.ec.curve.EllipticCurve.neutral", false]], "neutral_is_affine (ellipticcurve property)": [[11, "pyecsca.ec.curve.EllipticCurve.neutral_is_affine", false]], "no_inverse_action (ecconfig property)": [[51, "pyecsca.misc.cfg.ECConfig.no_inverse_action", false]], "node (class in pyecsca.ec.context)": [[9, "pyecsca.ec.context.Node", false]], "node (class in pyecsca.ec.formula.graph)": [[21, "pyecsca.ec.formula.graph.Node", false]], "node (class in pyecsca.sca.re.tree)": [[62, "pyecsca.sca.re.tree.Node", false]], "node_index() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.node_index", false]], "nodes (addfliparoo attribute)": [[20, "pyecsca.ec.formula.fliparoo.AddFliparoo.nodes", false]], "nodes (addsubfliparoo attribute)": [[20, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.nodes", false]], "nodes (fliparoo attribute)": [[20, "pyecsca.ec.formula.fliparoo.Fliparoo.nodes", false]], "nodes (formulagraph attribute)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.nodes", false]], "nodes (mulfliparoo attribute)": [[20, "pyecsca.ec.formula.fliparoo.MulFliparoo.nodes", false]], "noise (class in pyecsca.sca.attack.leakage_model)": [[57, "pyecsca.sca.attack.leakage_model.Noise", false]], "non_residue_action (ecconfig property)": [[51, "pyecsca.misc.cfg.ECConfig.non_residue_action", false]], "none (hashtype attribute)": [[8, "pyecsca.ec.configuration.HashType.NONE", false]], "none (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.NONE", false]], "none (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.NONE", false]], "noninvertibleerror": [[13, "pyecsca.ec.error.NonInvertibleError", false]], "noninvertiblewarning": [[13, "pyecsca.ec.error.NonInvertibleWarning", false]], "nonresidueerror": [[13, "pyecsca.ec.error.NonResidueError", false]], "nonresiduewarning": [[13, "pyecsca.ec.error.NonResidueWarning", false]], "normalize() (in module pyecsca.sca.trace.process)": [[91, "pyecsca.sca.trace.process.normalize", false]], "normalize_wl() (in module pyecsca.sca.trace.process)": [[91, "pyecsca.sca.trace.process.normalize_wl", false]], "normalnoice (class in pyecsca.sca.attack.leakage_model)": [[57, "pyecsca.sca.attack.leakage_model.NormalNoice", false]], "num_addsubs (additionefdformula property)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_addsubs", false]], "num_addsubs (additionformula property)": [[15, "pyecsca.ec.formula.base.AdditionFormula.num_addsubs", false]], "num_addsubs (codeadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.num_addsubs", false]], "num_addsubs (codedifferentialadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_addsubs", false]], "num_addsubs (codedoublingformula property)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.num_addsubs", false]], "num_addsubs (codeformula property)": [[16, "pyecsca.ec.formula.code.CodeFormula.num_addsubs", false]], "num_addsubs (codeladderformula property)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.num_addsubs", false]], "num_addsubs (codenegationformula property)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.num_addsubs", false]], "num_addsubs (codescalingformula property)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.num_addsubs", false]], "num_addsubs (codetriplingformula property)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.num_addsubs", false]], "num_addsubs (differentialadditionefdformula property)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_addsubs", false]], "num_addsubs (differentialadditionformula property)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_addsubs", false]], "num_addsubs (doublingefdformula property)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_addsubs", false]], "num_addsubs (doublingformula property)": [[15, "pyecsca.ec.formula.base.DoublingFormula.num_addsubs", false]], "num_addsubs (efdformula property)": [[17, "pyecsca.ec.formula.efd.EFDFormula.num_addsubs", false]], "num_addsubs (fakeadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_addsubs", false]], "num_addsubs (fakedifferentialadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_addsubs", false]], "num_addsubs (fakedoublingformula property)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_addsubs", false]], "num_addsubs (fakeformula property)": [[19, "pyecsca.ec.formula.fake.FakeFormula.num_addsubs", false]], "num_addsubs (fakeladderformula property)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.num_addsubs", false]], "num_addsubs (fakenegationformula property)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.num_addsubs", false]], "num_addsubs (fakescalingformula property)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.num_addsubs", false]], "num_addsubs (faketriplingformula property)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_addsubs", false]], "num_addsubs (formula property)": [[15, "pyecsca.ec.formula.base.Formula.num_addsubs", false]], "num_addsubs (ladderefdformula property)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.num_addsubs", false]], "num_addsubs (ladderformula property)": [[15, "pyecsca.ec.formula.base.LadderFormula.num_addsubs", false]], "num_addsubs (negationefdformula property)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.num_addsubs", false]], "num_addsubs (negationformula property)": [[15, "pyecsca.ec.formula.base.NegationFormula.num_addsubs", false]], "num_addsubs (scalingefdformula property)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_addsubs", false]], "num_addsubs (scalingformula property)": [[15, "pyecsca.ec.formula.base.ScalingFormula.num_addsubs", false]], "num_addsubs (triplingefdformula property)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_addsubs", false]], "num_addsubs (triplingformula property)": [[15, "pyecsca.ec.formula.base.TriplingFormula.num_addsubs", false]], "num_args (bit attribute)": [[57, "pyecsca.sca.attack.leakage_model.Bit.num_args", false]], "num_args (bitlength attribute)": [[57, "pyecsca.sca.attack.leakage_model.BitLength.num_args", false]], "num_args (hammingdistance attribute)": [[57, "pyecsca.sca.attack.leakage_model.HammingDistance.num_args", false]], "num_args (hammingweight attribute)": [[57, "pyecsca.sca.attack.leakage_model.HammingWeight.num_args", false]], "num_args (identity attribute)": [[57, "pyecsca.sca.attack.leakage_model.Identity.num_args", false]], "num_args (leakagemodel attribute)": [[57, "pyecsca.sca.attack.leakage_model.LeakageModel.num_args", false]], "num_args (slice attribute)": [[57, "pyecsca.sca.attack.leakage_model.Slice.num_args", false]], "num_divisions (additionefdformula property)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_divisions", false]], "num_divisions (additionformula property)": [[15, "pyecsca.ec.formula.base.AdditionFormula.num_divisions", false]], "num_divisions (codeadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.num_divisions", false]], "num_divisions (codedifferentialadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_divisions", false]], "num_divisions (codedoublingformula property)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.num_divisions", false]], "num_divisions (codeformula property)": [[16, "pyecsca.ec.formula.code.CodeFormula.num_divisions", false]], "num_divisions (codeladderformula property)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.num_divisions", false]], "num_divisions (codenegationformula property)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.num_divisions", false]], "num_divisions (codescalingformula property)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.num_divisions", false]], "num_divisions (codetriplingformula property)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.num_divisions", false]], "num_divisions (differentialadditionefdformula property)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_divisions", false]], "num_divisions (differentialadditionformula property)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_divisions", false]], "num_divisions (doublingefdformula property)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_divisions", false]], "num_divisions (doublingformula property)": [[15, "pyecsca.ec.formula.base.DoublingFormula.num_divisions", false]], "num_divisions (efdformula property)": [[17, "pyecsca.ec.formula.efd.EFDFormula.num_divisions", false]], "num_divisions (fakeadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_divisions", false]], "num_divisions (fakedifferentialadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_divisions", false]], "num_divisions (fakedoublingformula property)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_divisions", false]], "num_divisions (fakeformula property)": [[19, "pyecsca.ec.formula.fake.FakeFormula.num_divisions", false]], "num_divisions (fakeladderformula property)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.num_divisions", false]], "num_divisions (fakenegationformula property)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.num_divisions", false]], "num_divisions (fakescalingformula property)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.num_divisions", false]], "num_divisions (faketriplingformula property)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_divisions", false]], "num_divisions (formula property)": [[15, "pyecsca.ec.formula.base.Formula.num_divisions", false]], "num_divisions (ladderefdformula property)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.num_divisions", false]], "num_divisions (ladderformula property)": [[15, "pyecsca.ec.formula.base.LadderFormula.num_divisions", false]], "num_divisions (negationefdformula property)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.num_divisions", false]], "num_divisions (negationformula property)": [[15, "pyecsca.ec.formula.base.NegationFormula.num_divisions", false]], "num_divisions (scalingefdformula property)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_divisions", false]], "num_divisions (scalingformula property)": [[15, "pyecsca.ec.formula.base.ScalingFormula.num_divisions", false]], "num_divisions (triplingefdformula property)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_divisions", false]], "num_divisions (triplingformula property)": [[15, "pyecsca.ec.formula.base.TriplingFormula.num_divisions", false]], "num_inputs (additionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_inputs", false]], "num_inputs (additionformula attribute)": [[15, "pyecsca.ec.formula.base.AdditionFormula.num_inputs", false]], "num_inputs (codeadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.num_inputs", false]], "num_inputs (codedifferentialadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_inputs", false]], "num_inputs (codedoublingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.num_inputs", false]], "num_inputs (codeformula attribute)": [[16, "pyecsca.ec.formula.code.CodeFormula.num_inputs", false]], "num_inputs (codeladderformula attribute)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.num_inputs", false]], "num_inputs (codenegationformula attribute)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.num_inputs", false]], "num_inputs (codescalingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.num_inputs", false]], "num_inputs (codetriplingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.num_inputs", false]], "num_inputs (differentialadditionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_inputs", false]], "num_inputs (differentialadditionformula attribute)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_inputs", false]], "num_inputs (doublingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_inputs", false]], "num_inputs (doublingformula attribute)": [[15, "pyecsca.ec.formula.base.DoublingFormula.num_inputs", false]], "num_inputs (efdformula attribute)": [[17, "pyecsca.ec.formula.efd.EFDFormula.num_inputs", false]], "num_inputs (fakeadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_inputs", false]], "num_inputs (fakedifferentialadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_inputs", false]], "num_inputs (fakedoublingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_inputs", false]], "num_inputs (fakeformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeFormula.num_inputs", false]], "num_inputs (fakeladderformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.num_inputs", false]], "num_inputs (fakenegationformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.num_inputs", false]], "num_inputs (fakescalingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.num_inputs", false]], "num_inputs (faketriplingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_inputs", false]], "num_inputs (formula attribute)": [[15, "pyecsca.ec.formula.base.Formula.num_inputs", false]], "num_inputs (ladderefdformula attribute)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.num_inputs", false]], "num_inputs (ladderformula attribute)": [[15, "pyecsca.ec.formula.base.LadderFormula.num_inputs", false]], "num_inputs (negationefdformula attribute)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.num_inputs", false]], "num_inputs (negationformula attribute)": [[15, "pyecsca.ec.formula.base.NegationFormula.num_inputs", false]], "num_inputs (scalingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_inputs", false]], "num_inputs (scalingformula attribute)": [[15, "pyecsca.ec.formula.base.ScalingFormula.num_inputs", false]], "num_inputs (triplingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_inputs", false]], "num_inputs (triplingformula attribute)": [[15, "pyecsca.ec.formula.base.TriplingFormula.num_inputs", false]], "num_inversions (additionefdformula property)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_inversions", false]], "num_inversions (additionformula property)": [[15, "pyecsca.ec.formula.base.AdditionFormula.num_inversions", false]], "num_inversions (codeadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.num_inversions", false]], "num_inversions (codedifferentialadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_inversions", false]], "num_inversions (codedoublingformula property)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.num_inversions", false]], "num_inversions (codeformula property)": [[16, "pyecsca.ec.formula.code.CodeFormula.num_inversions", false]], "num_inversions (codeladderformula property)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.num_inversions", false]], "num_inversions (codenegationformula property)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.num_inversions", false]], "num_inversions (codescalingformula property)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.num_inversions", false]], "num_inversions (codetriplingformula property)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.num_inversions", false]], "num_inversions (differentialadditionefdformula property)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_inversions", false]], "num_inversions (differentialadditionformula property)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_inversions", false]], "num_inversions (doublingefdformula property)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_inversions", false]], "num_inversions (doublingformula property)": [[15, "pyecsca.ec.formula.base.DoublingFormula.num_inversions", false]], "num_inversions (efdformula property)": [[17, "pyecsca.ec.formula.efd.EFDFormula.num_inversions", false]], "num_inversions (fakeadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_inversions", false]], "num_inversions (fakedifferentialadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_inversions", false]], "num_inversions (fakedoublingformula property)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_inversions", false]], "num_inversions (fakeformula property)": [[19, "pyecsca.ec.formula.fake.FakeFormula.num_inversions", false]], "num_inversions (fakeladderformula property)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.num_inversions", false]], "num_inversions (fakenegationformula property)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.num_inversions", false]], "num_inversions (fakescalingformula property)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.num_inversions", false]], "num_inversions (faketriplingformula property)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_inversions", false]], "num_inversions (formula property)": [[15, "pyecsca.ec.formula.base.Formula.num_inversions", false]], "num_inversions (ladderefdformula property)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.num_inversions", false]], "num_inversions (ladderformula property)": [[15, "pyecsca.ec.formula.base.LadderFormula.num_inversions", false]], "num_inversions (negationefdformula property)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.num_inversions", false]], "num_inversions (negationformula property)": [[15, "pyecsca.ec.formula.base.NegationFormula.num_inversions", false]], "num_inversions (scalingefdformula property)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_inversions", false]], "num_inversions (scalingformula property)": [[15, "pyecsca.ec.formula.base.ScalingFormula.num_inversions", false]], "num_inversions (triplingefdformula property)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_inversions", false]], "num_inversions (triplingformula property)": [[15, "pyecsca.ec.formula.base.TriplingFormula.num_inversions", false]], "num_multiplications (additionefdformula property)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_multiplications", false]], "num_multiplications (additionformula property)": [[15, "pyecsca.ec.formula.base.AdditionFormula.num_multiplications", false]], "num_multiplications (codeadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.num_multiplications", false]], "num_multiplications (codedifferentialadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_multiplications", false]], "num_multiplications (codedoublingformula property)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.num_multiplications", false]], "num_multiplications (codeformula property)": [[16, "pyecsca.ec.formula.code.CodeFormula.num_multiplications", false]], "num_multiplications (codeladderformula property)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.num_multiplications", false]], "num_multiplications (codenegationformula property)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.num_multiplications", false]], "num_multiplications (codescalingformula property)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.num_multiplications", false]], "num_multiplications (codetriplingformula property)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.num_multiplications", false]], "num_multiplications (differentialadditionefdformula property)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_multiplications", false]], "num_multiplications (differentialadditionformula property)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_multiplications", false]], "num_multiplications (doublingefdformula property)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_multiplications", false]], "num_multiplications (doublingformula property)": [[15, "pyecsca.ec.formula.base.DoublingFormula.num_multiplications", false]], "num_multiplications (efdformula property)": [[17, "pyecsca.ec.formula.efd.EFDFormula.num_multiplications", false]], "num_multiplications (fakeadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_multiplications", false]], "num_multiplications (fakedifferentialadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_multiplications", false]], "num_multiplications (fakedoublingformula property)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_multiplications", false]], "num_multiplications (fakeformula property)": [[19, "pyecsca.ec.formula.fake.FakeFormula.num_multiplications", false]], "num_multiplications (fakeladderformula property)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.num_multiplications", false]], "num_multiplications (fakenegationformula property)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.num_multiplications", false]], "num_multiplications (fakescalingformula property)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.num_multiplications", false]], "num_multiplications (faketriplingformula property)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_multiplications", false]], "num_multiplications (formula property)": [[15, "pyecsca.ec.formula.base.Formula.num_multiplications", false]], "num_multiplications (ladderefdformula property)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.num_multiplications", false]], "num_multiplications (ladderformula property)": [[15, "pyecsca.ec.formula.base.LadderFormula.num_multiplications", false]], "num_multiplications (negationefdformula property)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.num_multiplications", false]], "num_multiplications (negationformula property)": [[15, "pyecsca.ec.formula.base.NegationFormula.num_multiplications", false]], "num_multiplications (scalingefdformula property)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_multiplications", false]], "num_multiplications (scalingformula property)": [[15, "pyecsca.ec.formula.base.ScalingFormula.num_multiplications", false]], "num_multiplications (triplingefdformula property)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_multiplications", false]], "num_multiplications (triplingformula property)": [[15, "pyecsca.ec.formula.base.TriplingFormula.num_multiplications", false]], "num_operations (additionefdformula property)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_operations", false]], "num_operations (additionformula property)": [[15, "pyecsca.ec.formula.base.AdditionFormula.num_operations", false]], "num_operations (codeadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.num_operations", false]], "num_operations (codedifferentialadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_operations", false]], "num_operations (codedoublingformula property)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.num_operations", false]], "num_operations (codeformula property)": [[16, "pyecsca.ec.formula.code.CodeFormula.num_operations", false]], "num_operations (codeladderformula property)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.num_operations", false]], "num_operations (codenegationformula property)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.num_operations", false]], "num_operations (codescalingformula property)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.num_operations", false]], "num_operations (codetriplingformula property)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.num_operations", false]], "num_operations (differentialadditionefdformula property)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_operations", false]], "num_operations (differentialadditionformula property)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_operations", false]], "num_operations (doublingefdformula property)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_operations", false]], "num_operations (doublingformula property)": [[15, "pyecsca.ec.formula.base.DoublingFormula.num_operations", false]], "num_operations (efdformula property)": [[17, "pyecsca.ec.formula.efd.EFDFormula.num_operations", false]], "num_operations (fakeadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_operations", false]], "num_operations (fakedifferentialadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_operations", false]], "num_operations (fakedoublingformula property)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_operations", false]], "num_operations (fakeformula property)": [[19, "pyecsca.ec.formula.fake.FakeFormula.num_operations", false]], "num_operations (fakeladderformula property)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.num_operations", false]], "num_operations (fakenegationformula property)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.num_operations", false]], "num_operations (fakescalingformula property)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.num_operations", false]], "num_operations (faketriplingformula property)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_operations", false]], "num_operations (formula property)": [[15, "pyecsca.ec.formula.base.Formula.num_operations", false]], "num_operations (ladderefdformula property)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.num_operations", false]], "num_operations (ladderformula property)": [[15, "pyecsca.ec.formula.base.LadderFormula.num_operations", false]], "num_operations (negationefdformula property)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.num_operations", false]], "num_operations (negationformula property)": [[15, "pyecsca.ec.formula.base.NegationFormula.num_operations", false]], "num_operations (scalingefdformula property)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_operations", false]], "num_operations (scalingformula property)": [[15, "pyecsca.ec.formula.base.ScalingFormula.num_operations", false]], "num_operations (triplingefdformula property)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_operations", false]], "num_operations (triplingformula property)": [[15, "pyecsca.ec.formula.base.TriplingFormula.num_operations", false]], "num_outputs (additionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_outputs", false]], "num_outputs (additionformula attribute)": [[15, "pyecsca.ec.formula.base.AdditionFormula.num_outputs", false]], "num_outputs (codeadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.num_outputs", false]], "num_outputs (codedifferentialadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_outputs", false]], "num_outputs (codedoublingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.num_outputs", false]], "num_outputs (codeformula attribute)": [[16, "pyecsca.ec.formula.code.CodeFormula.num_outputs", false]], "num_outputs (codeladderformula attribute)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.num_outputs", false]], "num_outputs (codenegationformula attribute)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.num_outputs", false]], "num_outputs (codescalingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.num_outputs", false]], "num_outputs (codetriplingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.num_outputs", false]], "num_outputs (differentialadditionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_outputs", false]], "num_outputs (differentialadditionformula attribute)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_outputs", false]], "num_outputs (doublingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_outputs", false]], "num_outputs (doublingformula attribute)": [[15, "pyecsca.ec.formula.base.DoublingFormula.num_outputs", false]], "num_outputs (efdformula attribute)": [[17, "pyecsca.ec.formula.efd.EFDFormula.num_outputs", false]], "num_outputs (fakeadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_outputs", false]], "num_outputs (fakedifferentialadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_outputs", false]], "num_outputs (fakedoublingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_outputs", false]], "num_outputs (fakeformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeFormula.num_outputs", false]], "num_outputs (fakeladderformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.num_outputs", false]], "num_outputs (fakenegationformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.num_outputs", false]], "num_outputs (fakescalingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.num_outputs", false]], "num_outputs (faketriplingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_outputs", false]], "num_outputs (formula attribute)": [[15, "pyecsca.ec.formula.base.Formula.num_outputs", false]], "num_outputs (ladderefdformula attribute)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.num_outputs", false]], "num_outputs (ladderformula attribute)": [[15, "pyecsca.ec.formula.base.LadderFormula.num_outputs", false]], "num_outputs (negationefdformula attribute)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.num_outputs", false]], "num_outputs (negationformula attribute)": [[15, "pyecsca.ec.formula.base.NegationFormula.num_outputs", false]], "num_outputs (scalingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_outputs", false]], "num_outputs (scalingformula attribute)": [[15, "pyecsca.ec.formula.base.ScalingFormula.num_outputs", false]], "num_outputs (triplingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_outputs", false]], "num_outputs (triplingformula attribute)": [[15, "pyecsca.ec.formula.base.TriplingFormula.num_outputs", false]], "num_powers (additionefdformula property)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_powers", false]], "num_powers (additionformula property)": [[15, "pyecsca.ec.formula.base.AdditionFormula.num_powers", false]], "num_powers (codeadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.num_powers", false]], "num_powers (codedifferentialadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_powers", false]], "num_powers (codedoublingformula property)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.num_powers", false]], "num_powers (codeformula property)": [[16, "pyecsca.ec.formula.code.CodeFormula.num_powers", false]], "num_powers (codeladderformula property)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.num_powers", false]], "num_powers (codenegationformula property)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.num_powers", false]], "num_powers (codescalingformula property)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.num_powers", false]], "num_powers (codetriplingformula property)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.num_powers", false]], "num_powers (differentialadditionefdformula property)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_powers", false]], "num_powers (differentialadditionformula property)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_powers", false]], "num_powers (doublingefdformula property)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_powers", false]], "num_powers (doublingformula property)": [[15, "pyecsca.ec.formula.base.DoublingFormula.num_powers", false]], "num_powers (efdformula property)": [[17, "pyecsca.ec.formula.efd.EFDFormula.num_powers", false]], "num_powers (fakeadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_powers", false]], "num_powers (fakedifferentialadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_powers", false]], "num_powers (fakedoublingformula property)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_powers", false]], "num_powers (fakeformula property)": [[19, "pyecsca.ec.formula.fake.FakeFormula.num_powers", false]], "num_powers (fakeladderformula property)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.num_powers", false]], "num_powers (fakenegationformula property)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.num_powers", false]], "num_powers (fakescalingformula property)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.num_powers", false]], "num_powers (faketriplingformula property)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_powers", false]], "num_powers (formula property)": [[15, "pyecsca.ec.formula.base.Formula.num_powers", false]], "num_powers (ladderefdformula property)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.num_powers", false]], "num_powers (ladderformula property)": [[15, "pyecsca.ec.formula.base.LadderFormula.num_powers", false]], "num_powers (negationefdformula property)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.num_powers", false]], "num_powers (negationformula property)": [[15, "pyecsca.ec.formula.base.NegationFormula.num_powers", false]], "num_powers (scalingefdformula property)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_powers", false]], "num_powers (scalingformula property)": [[15, "pyecsca.ec.formula.base.ScalingFormula.num_powers", false]], "num_powers (triplingefdformula property)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_powers", false]], "num_powers (triplingformula property)": [[15, "pyecsca.ec.formula.base.TriplingFormula.num_powers", false]], "num_samples (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.num_samples", false]], "num_squarings (additionefdformula property)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_squarings", false]], "num_squarings (additionformula property)": [[15, "pyecsca.ec.formula.base.AdditionFormula.num_squarings", false]], "num_squarings (codeadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.num_squarings", false]], "num_squarings (codedifferentialadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_squarings", false]], "num_squarings (codedoublingformula property)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.num_squarings", false]], "num_squarings (codeformula property)": [[16, "pyecsca.ec.formula.code.CodeFormula.num_squarings", false]], "num_squarings (codeladderformula property)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.num_squarings", false]], "num_squarings (codenegationformula property)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.num_squarings", false]], "num_squarings (codescalingformula property)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.num_squarings", false]], "num_squarings (codetriplingformula property)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.num_squarings", false]], "num_squarings (differentialadditionefdformula property)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_squarings", false]], "num_squarings (differentialadditionformula property)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_squarings", false]], "num_squarings (doublingefdformula property)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_squarings", false]], "num_squarings (doublingformula property)": [[15, "pyecsca.ec.formula.base.DoublingFormula.num_squarings", false]], "num_squarings (efdformula property)": [[17, "pyecsca.ec.formula.efd.EFDFormula.num_squarings", false]], "num_squarings (fakeadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_squarings", false]], "num_squarings (fakedifferentialadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_squarings", false]], "num_squarings (fakedoublingformula property)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_squarings", false]], "num_squarings (fakeformula property)": [[19, "pyecsca.ec.formula.fake.FakeFormula.num_squarings", false]], "num_squarings (fakeladderformula property)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.num_squarings", false]], "num_squarings (fakenegationformula property)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.num_squarings", false]], "num_squarings (fakescalingformula property)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.num_squarings", false]], "num_squarings (faketriplingformula property)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_squarings", false]], "num_squarings (formula property)": [[15, "pyecsca.ec.formula.base.Formula.num_squarings", false]], "num_squarings (ladderefdformula property)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.num_squarings", false]], "num_squarings (ladderformula property)": [[15, "pyecsca.ec.formula.base.LadderFormula.num_squarings", false]], "num_squarings (negationefdformula property)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.num_squarings", false]], "num_squarings (negationformula property)": [[15, "pyecsca.ec.formula.base.NegationFormula.num_squarings", false]], "num_squarings (scalingefdformula property)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_squarings", false]], "num_squarings (scalingformula property)": [[15, "pyecsca.ec.formula.base.ScalingFormula.num_squarings", false]], "num_squarings (triplingefdformula property)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_squarings", false]], "num_squarings (triplingformula property)": [[15, "pyecsca.ec.formula.base.TriplingFormula.num_squarings", false]], "num_traces (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.num_traces", false]], "numerator (appletbaseenum attribute)": [[78, "pyecsca.sca.target.ectester.AppletBaseEnum.numerator", false]], "numerator (cardprotocol attribute)": [[73, "pyecsca.sca.target.ISO7816.CardProtocol.numerator", false]], "numerator (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.numerator", false]], "numerator (exportenum attribute)": [[78, "pyecsca.sca.target.ectester.ExportEnum.numerator", false]], "numerator (formatenum attribute)": [[78, "pyecsca.sca.target.ectester.FormatEnum.numerator", false]], "numerator (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.numerator", false]], "numerator (keyagreementenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.numerator", false]], "numerator (keybuildenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyBuildEnum.numerator", false]], "numerator (keyclassenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyClassEnum.numerator", false]], "numerator (keyenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyEnum.numerator", false]], "numerator (keypairenum attribute)": [[78, "pyecsca.sca.target.ectester.KeypairEnum.numerator", false]], "numerator (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.numerator", false]], "numerator (runmodeenum attribute)": [[78, "pyecsca.sca.target.ectester.RunModeEnum.numerator", false]], "numerator (samplecoding attribute)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.numerator", false]], "numerator (signatureenum attribute)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.numerator", false]], "numerator (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.numerator", false]], "numerator (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.numerator", false]], "offset() (in module pyecsca.sca.trace.process)": [[91, "pyecsca.sca.trace.process.offset", false]], "one (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.ONE", false]], "onebyterandom (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.ONEBYTERANDOM", false]], "op (opresult attribute)": [[15, "pyecsca.ec.formula.base.OpResult.op", false]], "op_results (formulaaction attribute)": [[15, "pyecsca.ec.formula.base.FormulaAction.op_results", false]], "open() (chipwhispererscope method)": [[66, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.open", false]], "open() (picoscopealt method)": [[67, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.open", false]], "open() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.open", false]], "open() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.open", false]], "open() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.open", false]], "open() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.open", false]], "open() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.open", false]], "open() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.open", false]], "open() (scope method)": [[65, "pyecsca.sca.scope.base.Scope.open", false]], "operator (addfliparoo attribute)": [[20, "pyecsca.ec.formula.fliparoo.AddFliparoo.operator", false]], "operator (addsubfliparoo attribute)": [[20, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.operator", false]], "operator (codeop attribute)": [[43, "pyecsca.ec.op.CodeOp.operator", false]], "operator (fliparoo attribute)": [[20, "pyecsca.ec.formula.fliparoo.Fliparoo.operator", false]], "operator (mulfliparoo attribute)": [[20, "pyecsca.ec.formula.fliparoo.MulFliparoo.operator", false]], "opresult (class in pyecsca.ec.formula.base)": [[15, "pyecsca.ec.formula.base.OpResult", false]], "optionals (accumulatormultiplier attribute)": [[36, "pyecsca.ec.mult.base.AccumulatorMultiplier.optionals", false]], "optionals (bgmwmultiplier attribute)": [[38, "pyecsca.ec.mult.comb.BGMWMultiplier.optionals", false]], "optionals (binarynafmultiplier attribute)": [[41, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.optionals", false]], "optionals (combmultiplier attribute)": [[38, "pyecsca.ec.mult.comb.CombMultiplier.optionals", false]], "optionals (coronmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.CoronMultiplier.optionals", false]], "optionals (differentialladdermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.optionals", false]], "optionals (doubleandaddmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.optionals", false]], "optionals (fixedwindowltrmultiplier attribute)": [[42, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.optionals", false]], "optionals (fullprecompmultiplier attribute)": [[39, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.optionals", false]], "optionals (laddermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.LadderMultiplier.optionals", false]], "optionals (ltrmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.LTRMultiplier.optionals", false]], "optionals (rtlmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.RTLMultiplier.optionals", false]], "optionals (scalarmultiplier attribute)": [[36, "pyecsca.ec.mult.base.ScalarMultiplier.optionals", false]], "optionals (simpleladdermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.optionals", false]], "optionals (slidingwindowmultiplier attribute)": [[42, "pyecsca.ec.mult.window.SlidingWindowMultiplier.optionals", false]], "optionals (windowboothmultiplier attribute)": [[42, "pyecsca.ec.mult.window.WindowBoothMultiplier.optionals", false]], "optionals (windownafmultiplier attribute)": [[41, "pyecsca.ec.mult.naf.WindowNAFMultiplier.optionals", false]], "optype (class in pyecsca.ec.op)": [[43, "pyecsca.ec.op.OpType", false]], "order (domainparameters attribute)": [[44, "pyecsca.ec.params.DomainParameters.order", false]], "order (randommodaction attribute)": [[29, "pyecsca.ec.mod.base.RandomModAction.order", false]], "output_index (additionefdformula property)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.output_index", false]], "output_index (additionformula property)": [[15, "pyecsca.ec.formula.base.AdditionFormula.output_index", false]], "output_index (codeadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.output_index", false]], "output_index (codedifferentialadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.output_index", false]], "output_index (codedoublingformula property)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.output_index", false]], "output_index (codeformula property)": [[16, "pyecsca.ec.formula.code.CodeFormula.output_index", false]], "output_index (codeladderformula property)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.output_index", false]], "output_index (codenegationformula property)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.output_index", false]], "output_index (codescalingformula property)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.output_index", false]], "output_index (codetriplingformula property)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.output_index", false]], "output_index (differentialadditionefdformula property)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.output_index", false]], "output_index (differentialadditionformula property)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.output_index", false]], "output_index (doublingefdformula property)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.output_index", false]], "output_index (doublingformula property)": [[15, "pyecsca.ec.formula.base.DoublingFormula.output_index", false]], "output_index (efdformula property)": [[17, "pyecsca.ec.formula.efd.EFDFormula.output_index", false]], "output_index (fakeadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.output_index", false]], "output_index (fakedifferentialadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.output_index", false]], "output_index (fakedoublingformula property)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.output_index", false]], "output_index (fakeformula property)": [[19, "pyecsca.ec.formula.fake.FakeFormula.output_index", false]], "output_index (fakeladderformula property)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.output_index", false]], "output_index (fakenegationformula property)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.output_index", false]], "output_index (fakescalingformula property)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.output_index", false]], "output_index (faketriplingformula property)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.output_index", false]], "output_index (formula property)": [[15, "pyecsca.ec.formula.base.Formula.output_index", false]], "output_index (ladderefdformula property)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.output_index", false]], "output_index (ladderformula property)": [[15, "pyecsca.ec.formula.base.LadderFormula.output_index", false]], "output_index (negationefdformula property)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.output_index", false]], "output_index (negationformula property)": [[15, "pyecsca.ec.formula.base.NegationFormula.output_index", false]], "output_index (scalingefdformula property)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.output_index", false]], "output_index (scalingformula property)": [[15, "pyecsca.ec.formula.base.ScalingFormula.output_index", false]], "output_index (triplingefdformula property)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.output_index", false]], "output_index (triplingformula property)": [[15, "pyecsca.ec.formula.base.TriplingFormula.output_index", false]], "output_names (formulagraph attribute)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.output_names", false]], "output_nodes() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.output_nodes", false]], "output_points (formulaaction attribute)": [[15, "pyecsca.ec.formula.base.FormulaAction.output_points", false]], "outputs (additionefdformula property)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.outputs", false]], "outputs (additionformula property)": [[15, "pyecsca.ec.formula.base.AdditionFormula.outputs", false]], "outputs (codeadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.outputs", false]], "outputs (codedifferentialadditionformula property)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.outputs", false]], "outputs (codedoublingformula property)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.outputs", false]], "outputs (codeformula property)": [[16, "pyecsca.ec.formula.code.CodeFormula.outputs", false]], "outputs (codeladderformula property)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.outputs", false]], "outputs (codenegationformula property)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.outputs", false]], "outputs (codescalingformula property)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.outputs", false]], "outputs (codetriplingformula property)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.outputs", false]], "outputs (differentialadditionefdformula property)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.outputs", false]], "outputs (differentialadditionformula property)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.outputs", false]], "outputs (doublingefdformula property)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.outputs", false]], "outputs (doublingformula property)": [[15, "pyecsca.ec.formula.base.DoublingFormula.outputs", false]], "outputs (efdformula property)": [[17, "pyecsca.ec.formula.efd.EFDFormula.outputs", false]], "outputs (fakeadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.outputs", false]], "outputs (fakedifferentialadditionformula property)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.outputs", false]], "outputs (fakedoublingformula property)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.outputs", false]], "outputs (fakeformula property)": [[19, "pyecsca.ec.formula.fake.FakeFormula.outputs", false]], "outputs (fakeladderformula property)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.outputs", false]], "outputs (fakenegationformula property)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.outputs", false]], "outputs (fakescalingformula property)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.outputs", false]], "outputs (faketriplingformula property)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.outputs", false]], "outputs (formula property)": [[15, "pyecsca.ec.formula.base.Formula.outputs", false]], "outputs (formulaaction attribute)": [[15, "pyecsca.ec.formula.base.FormulaAction.outputs", false]], "outputs (ladderefdformula property)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.outputs", false]], "outputs (ladderformula property)": [[15, "pyecsca.ec.formula.base.LadderFormula.outputs", false]], "outputs (negationefdformula property)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.outputs", false]], "outputs (negationformula property)": [[15, "pyecsca.ec.formula.base.NegationFormula.outputs", false]], "outputs (scalingefdformula property)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.outputs", false]], "outputs (scalingformula property)": [[15, "pyecsca.ec.formula.base.ScalingFormula.outputs", false]], "outputs (triplingefdformula property)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.outputs", false]], "outputs (triplingformula property)": [[15, "pyecsca.ec.formula.base.TriplingFormula.outputs", false]], "p0 (rpa attribute)": [[60, "pyecsca.sca.re.rpa.RPA.P0", false]], "p1 (commandapdu attribute)": [[73, "pyecsca.sca.target.ISO7816.CommandAPDU.p1", false]], "p2 (commandapdu attribute)": [[73, "pyecsca.sca.target.ISO7816.CommandAPDU.p2", false]], "pad() (in module pyecsca.sca.trace.edit)": [[87, "pyecsca.sca.trace.edit.pad", false]], "parameter_names (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.parameter_names", false]], "parameter_names (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.parameter_names", false]], "parameter_names (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.parameter_names", false]], "parameter_names (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.parameter_names", false]], "parameter_names (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.parameter_names", false]], "parameterenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.ParameterEnum", false]], "parameters (additionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.parameters", false]], "parameters (additionformula attribute)": [[15, "pyecsca.ec.formula.base.AdditionFormula.parameters", false]], "parameters (affinecoordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.AffineCoordinateModel.parameters", false]], "parameters (codeadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.parameters", false]], "parameters (codedifferentialadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.parameters", false]], "parameters (codedoublingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.parameters", false]], "parameters (codeformula attribute)": [[16, "pyecsca.ec.formula.code.CodeFormula.parameters", false]], "parameters (codeladderformula attribute)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.parameters", false]], "parameters (codenegationformula attribute)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.parameters", false]], "parameters (codeop attribute)": [[43, "pyecsca.ec.op.CodeOp.parameters", false]], "parameters (codescalingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.parameters", false]], "parameters (codetriplingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.parameters", false]], "parameters (coordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.CoordinateModel.parameters", false]], "parameters (differentialadditionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.parameters", false]], "parameters (differentialadditionformula attribute)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.parameters", false]], "parameters (doublingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.parameters", false]], "parameters (doublingformula attribute)": [[15, "pyecsca.ec.formula.base.DoublingFormula.parameters", false]], "parameters (efdformula attribute)": [[17, "pyecsca.ec.formula.efd.EFDFormula.parameters", false]], "parameters (ellipticcurve attribute)": [[11, "pyecsca.ec.curve.EllipticCurve.parameters", false]], "parameters (exportresponse attribute)": [[78, "pyecsca.sca.target.ectester.ExportResponse.parameters", false]], "parameters (fakeadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.parameters", false]], "parameters (fakedifferentialadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.parameters", false]], "parameters (fakedoublingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.parameters", false]], "parameters (fakeformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeFormula.parameters", false]], "parameters (fakeladderformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.parameters", false]], "parameters (fakenegationformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.parameters", false]], "parameters (fakescalingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.parameters", false]], "parameters (faketriplingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.parameters", false]], "parameters (formula attribute)": [[15, "pyecsca.ec.formula.base.Formula.parameters", false]], "parameters (formulagraph attribute)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.parameters", false]], "parameters (ladderefdformula attribute)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.parameters", false]], "parameters (ladderformula attribute)": [[15, "pyecsca.ec.formula.base.LadderFormula.parameters", false]], "parameters (negationefdformula attribute)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.parameters", false]], "parameters (negationformula attribute)": [[15, "pyecsca.ec.formula.base.NegationFormula.parameters", false]], "parameters (scalingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.parameters", false]], "parameters (scalingformula attribute)": [[15, "pyecsca.ec.formula.base.ScalingFormula.parameters", false]], "parameters (triplingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.parameters", false]], "parameters (triplingformula attribute)": [[15, "pyecsca.ec.formula.base.TriplingFormula.parameters", false]], "params (allocatekaresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateKaResponse.params", false]], "params (allocateresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateResponse.params", false]], "params (allocatesigresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateSigResponse.params", false]], "params (cleanupresponse attribute)": [[78, "pyecsca.sca.target.ectester.CleanupResponse.params", false]], "params (clearresponse attribute)": [[78, "pyecsca.sca.target.ectester.ClearResponse.params", false]], "params (cpa attribute)": [[55, "pyecsca.sca.attack.CPA.CPA.params", false]], "params (devicetarget attribute)": [[3, "pyecsca.codegen.client.DeviceTarget.params", false]], "params (dpa attribute)": [[56, "pyecsca.sca.attack.DPA.DPA.params", false]], "params (ecdh_none attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_NONE.params", false]], "params (ecdh_sha1 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA1.params", false]], "params (ecdh_sha224 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA224.params", false]], "params (ecdh_sha256 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA256.params", false]], "params (ecdh_sha384 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA384.params", false]], "params (ecdh_sha512 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA512.params", false]], "params (ecdhaction attribute)": [[26, "pyecsca.ec.key_agreement.ECDHAction.params", false]], "params (ecdhresponse attribute)": [[78, "pyecsca.sca.target.ectester.ECDHResponse.params", false]], "params (ecdsa_none attribute)": [[47, "pyecsca.ec.signature.ECDSA_NONE.params", false]], "params (ecdsa_sha1 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA1.params", false]], "params (ecdsa_sha224 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA224.params", false]], "params (ecdsa_sha256 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA256.params", false]], "params (ecdsa_sha384 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA384.params", false]], "params (ecdsa_sha512 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA512.params", false]], "params (ecdsaaction attribute)": [[47, "pyecsca.ec.signature.ECDSAAction.params", false]], "params (ecdsaresponse attribute)": [[78, "pyecsca.sca.target.ectester.ECDSAResponse.params", false]], "params (ecdsasignaction attribute)": [[47, "pyecsca.ec.signature.ECDSASignAction.params", false]], "params (ecdsaverifyaction attribute)": [[47, "pyecsca.ec.signature.ECDSAVerifyAction.params", false]], "params (emulatortarget attribute)": [[3, "pyecsca.codegen.client.EmulatorTarget.params", false]], "params (exportresponse attribute)": [[78, "pyecsca.sca.target.ectester.ExportResponse.params", false]], "params (generateresponse attribute)": [[78, "pyecsca.sca.target.ectester.GenerateResponse.params", false]], "params (hosttarget attribute)": [[3, "pyecsca.codegen.client.HostTarget.params", false]], "params (impltarget attribute)": [[3, "pyecsca.codegen.client.ImplTarget.params", false]], "params (keyagreement attribute)": [[26, "pyecsca.ec.key_agreement.KeyAgreement.params", false]], "params (keygenaction attribute)": [[27, "pyecsca.ec.key_generation.KeygenAction.params", false]], "params (keygeneration attribute)": [[27, "pyecsca.ec.key_generation.KeyGeneration.params", false]], "params (leakagetarget attribute)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.params", false]], "params (precomputationaction attribute)": [[36, "pyecsca.ec.mult.base.PrecomputationAction.params", false]], "params (rpa attribute)": [[60, "pyecsca.sca.re.rpa.RPA.params", false]], "params (runmoderesponse attribute)": [[78, "pyecsca.sca.target.ectester.RunModeResponse.params", false]], "params (setresponse attribute)": [[78, "pyecsca.sca.target.ectester.SetResponse.params", false]], "params (signature attribute)": [[47, "pyecsca.ec.signature.Signature.params", false]], "params (transformresponse attribute)": [[78, "pyecsca.sca.target.ectester.TransformResponse.params", false]], "parent (node property)": [[9, "pyecsca.ec.context.Node.parent", false], [62, "pyecsca.sca.re.tree.Node.parent", false]], "parents (codeop property)": [[43, "pyecsca.ec.op.CodeOp.parents", false]], "parents (multiplecontext attribute)": [[60, "pyecsca.sca.re.rpa.MultipleContext.parents", false]], "parents (opresult attribute)": [[15, "pyecsca.ec.formula.base.OpResult.parents", false]], "parsers (class in pyecsca.sca.trace_set.inspector)": [[99, "pyecsca.sca.trace_set.inspector.Parsers", false]], "path (node property)": [[9, "pyecsca.ec.context.Node.path", false], [62, "pyecsca.sca.re.tree.Node.path", false]], "path (pathcontext attribute)": [[9, "pyecsca.ec.context.PathContext.path", false]], "pathcontext (class in pyecsca.ec.context)": [[9, "pyecsca.ec.context.PathContext", false]], "pcsctarget (class in pyecsca.sca.target.pcsc)": [[74, "pyecsca.sca.target.PCSC.PCSCTarget", false]], "pearson_corr() (cputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.pearson_corr", false]], "pearson_corr() (gputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.pearson_corr", false]], "peqpr (accumulationorder attribute)": [[36, "pyecsca.ec.mult.base.AccumulationOrder.PeqPR", false]], "peqrp (accumulationorder attribute)": [[36, "pyecsca.ec.mult.base.AccumulationOrder.PeqRP", false]], "perform() (cpa method)": [[55, "pyecsca.sca.attack.CPA.CPA.perform", false]], "perform() (dpa method)": [[56, "pyecsca.sca.attack.DPA.DPA.perform", false]], "perform() (ecdh_none method)": [[26, "pyecsca.ec.key_agreement.ECDH_NONE.perform", false]], "perform() (ecdh_sha1 method)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA1.perform", false]], "perform() (ecdh_sha224 method)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA224.perform", false]], "perform() (ecdh_sha256 method)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA256.perform", false]], "perform() (ecdh_sha384 method)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA384.perform", false]], "perform() (ecdh_sha512 method)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA512.perform", false]], "perform() (keyagreement method)": [[26, "pyecsca.ec.key_agreement.KeyAgreement.perform", false]], "perform_raw() (ecdh_none method)": [[26, "pyecsca.ec.key_agreement.ECDH_NONE.perform_raw", false]], "perform_raw() (ecdh_sha1 method)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA1.perform_raw", false]], "perform_raw() (ecdh_sha224 method)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA224.perform_raw", false]], "perform_raw() (ecdh_sha256 method)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA256.perform_raw", false]], "perform_raw() (ecdh_sha384 method)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA384.perform_raw", false]], "perform_raw() (ecdh_sha512 method)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA512.perform_raw", false]], "perform_raw() (keyagreement method)": [[26, "pyecsca.ec.key_agreement.KeyAgreement.perform_raw", false]], "peval() (in module pyecsca.misc.utils)": [[52, "pyecsca.misc.utils.peval", false]], "pexec() (in module pyecsca.misc.utils)": [[52, "pyecsca.misc.utils.pexec", false]], "pickletraceset (class in pyecsca.sca.trace_set.pickle)": [[100, "pyecsca.sca.trace_set.pickle.PickleTraceSet", false]], "picoscopealt (class in pyecsca.sca.scope.picoscope_alt)": [[67, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt", false]], "picoscopesdk (class in pyecsca.sca.scope.picoscope_sdk)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk", false]], "planar_positions() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.planar_positions", false]], "platform (class in pyecsca.codegen.common)": [[4, "pyecsca.codegen.common.Platform", false]], "platform (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.platform", false]], "plot_correlations() (cpa method)": [[55, "pyecsca.sca.attack.CPA.CPA.plot_correlations", false]], "plot_difference_of_means() (dpa method)": [[56, "pyecsca.sca.attack.DPA.DPA.plot_difference_of_means", false]], "plot_trace() (in module pyecsca.sca.trace.plot)": [[90, "pyecsca.sca.trace.plot.plot_trace", false]], "plot_traces() (in module pyecsca.sca.trace.plot)": [[90, "pyecsca.sca.trace.plot.plot_traces", false]], "point (class in pyecsca.ec.point)": [[45, "pyecsca.ec.point.Point", false]], "point (coordinatemappingaction attribute)": [[45, "pyecsca.ec.point.CoordinateMappingAction.point", false]], "point (precomputationaction attribute)": [[36, "pyecsca.ec.mult.base.PrecomputationAction.point", false]], "point (scalarmultiplicationaction attribute)": [[36, "pyecsca.ec.mult.base.ScalarMultiplicationAction.point", false]], "points (cpa attribute)": [[55, "pyecsca.sca.attack.CPA.CPA.points", false]], "points (dpa attribute)": [[56, "pyecsca.sca.attack.DPA.DPA.points", false]], "points (multiplecontext attribute)": [[60, "pyecsca.sca.re.rpa.MultipleContext.points", false]], "pop() (hdf5meta method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5Meta.pop", false]], "popitem() (hdf5meta method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5Meta.popitem", false]], "posttrig (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.posttrig", false]], "posttrig (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.posttrig", false]], "posttrig (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.posttrig", false]], "posttrig (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.posttrig", false]], "posttrig (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.posttrig", false]], "pow (optype attribute)": [[43, "pyecsca.ec.op.OpType.Pow", false]], "precise (tree property)": [[62, "pyecsca.sca.re.tree.Tree.precise", false]], "precomputationaction (class in pyecsca.ec.mult.base)": [[36, "pyecsca.ec.mult.base.PrecomputationAction", false]], "precompute_negation (windowboothmultiplier attribute)": [[42, "pyecsca.ec.mult.window.WindowBoothMultiplier.precompute_negation", false]], "precompute_negation (windownafmultiplier attribute)": [[41, "pyecsca.ec.mult.naf.WindowNAFMultiplier.precompute_negation", false]], "prefix (picoscopesdk attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.PREFIX", false]], "prefix (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.PREFIX", false]], "prefix (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.PREFIX", false]], "prefix (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.PREFIX", false]], "prefix (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.PREFIX", false]], "prefix (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.PREFIX", false]], "pretrig (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.pretrig", false]], "pretrig (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.pretrig", false]], "pretrig (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.pretrig", false]], "pretrig (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.pretrig", false]], "pretrig (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.pretrig", false]], "previous() (addfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.AddFliparoo.previous", false]], "previous() (addsubfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.previous", false]], "previous() (fliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.Fliparoo.previous", false]], "previous() (mulfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.MulFliparoo.previous", false]], "prime (ellipticcurve attribute)": [[11, "pyecsca.ec.curve.EllipticCurve.prime", false]], "print() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.print", false]], "private (keyenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyEnum.PRIVATE", false]], "privkey (devicetarget attribute)": [[3, "pyecsca.codegen.client.DeviceTarget.privkey", false]], "privkey (ecdh_none attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_NONE.privkey", false]], "privkey (ecdh_sha1 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA1.privkey", false]], "privkey (ecdh_sha224 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA224.privkey", false]], "privkey (ecdh_sha256 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA256.privkey", false]], "privkey (ecdh_sha384 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA384.privkey", false]], "privkey (ecdh_sha512 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA512.privkey", false]], "privkey (ecdhaction attribute)": [[26, "pyecsca.ec.key_agreement.ECDHAction.privkey", false]], "privkey (ecdsa_none attribute)": [[47, "pyecsca.ec.signature.ECDSA_NONE.privkey", false]], "privkey (ecdsa_sha1 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA1.privkey", false]], "privkey (ecdsa_sha224 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA224.privkey", false]], "privkey (ecdsa_sha256 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA256.privkey", false]], "privkey (ecdsa_sha384 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA384.privkey", false]], "privkey (ecdsa_sha512 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA512.privkey", false]], "privkey (ecdsasignaction attribute)": [[47, "pyecsca.ec.signature.ECDSASignAction.privkey", false]], "privkey (emulatortarget attribute)": [[3, "pyecsca.codegen.client.EmulatorTarget.privkey", false]], "privkey (hosttarget attribute)": [[3, "pyecsca.codegen.client.HostTarget.privkey", false]], "privkey (impltarget attribute)": [[3, "pyecsca.codegen.client.ImplTarget.privkey", false]], "privkey (keyagreement attribute)": [[26, "pyecsca.ec.key_agreement.KeyAgreement.privkey", false]], "privkey (leakagetarget attribute)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.privkey", false]], "privkey (signature attribute)": [[47, "pyecsca.ec.signature.Signature.privkey", false]], "process (binarytarget attribute)": [[76, "pyecsca.sca.target.binary.BinaryTarget.process", false]], "process (hosttarget attribute)": [[3, "pyecsca.codegen.client.HostTarget.process", false]], "processingdirection (class in pyecsca.ec.mult.base)": [[36, "pyecsca.ec.mult.base.ProcessingDirection", false]], "ps3000ascope (class in pyecsca.sca.scope.picoscope_sdk)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope", false]], "ps3000scope (class in pyecsca.sca.scope.picoscope_sdk)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope", false]], "ps4000scope (class in pyecsca.sca.scope.picoscope_sdk)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope", false]], "ps5000scope (class in pyecsca.sca.scope.picoscope_sdk)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope", false]], "ps6000scope (class in pyecsca.sca.scope.picoscope_sdk)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope", false]], "pubkey (devicetarget attribute)": [[3, "pyecsca.codegen.client.DeviceTarget.pubkey", false]], "pubkey (ecdh_none attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_NONE.pubkey", false]], "pubkey (ecdh_sha1 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA1.pubkey", false]], "pubkey (ecdh_sha224 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA224.pubkey", false]], "pubkey (ecdh_sha256 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA256.pubkey", false]], "pubkey (ecdh_sha384 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA384.pubkey", false]], "pubkey (ecdh_sha512 attribute)": [[26, "pyecsca.ec.key_agreement.ECDH_SHA512.pubkey", false]], "pubkey (ecdhaction attribute)": [[26, "pyecsca.ec.key_agreement.ECDHAction.pubkey", false]], "pubkey (ecdsa_none attribute)": [[47, "pyecsca.ec.signature.ECDSA_NONE.pubkey", false]], "pubkey (ecdsa_sha1 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA1.pubkey", false]], "pubkey (ecdsa_sha224 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA224.pubkey", false]], "pubkey (ecdsa_sha256 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA256.pubkey", false]], "pubkey (ecdsa_sha384 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA384.pubkey", false]], "pubkey (ecdsa_sha512 attribute)": [[47, "pyecsca.ec.signature.ECDSA_SHA512.pubkey", false]], "pubkey (ecdsaverifyaction attribute)": [[47, "pyecsca.ec.signature.ECDSAVerifyAction.pubkey", false]], "pubkey (emulatortarget attribute)": [[3, "pyecsca.codegen.client.EmulatorTarget.pubkey", false]], "pubkey (hosttarget attribute)": [[3, "pyecsca.codegen.client.HostTarget.pubkey", false]], "pubkey (impltarget attribute)": [[3, "pyecsca.codegen.client.ImplTarget.pubkey", false]], "pubkey (keyagreement attribute)": [[26, "pyecsca.ec.key_agreement.KeyAgreement.pubkey", false]], "pubkey (leakagetarget attribute)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.pubkey", false]], "pubkey (signature attribute)": [[47, "pyecsca.ec.signature.Signature.pubkey", false]], "public (keyenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyEnum.PUBLIC", false]], "pyecsca.codegen": [[1, "module-pyecsca.codegen", false]], "pyecsca.codegen.builder": [[2, "module-pyecsca.codegen.builder", false]], "pyecsca.codegen.client": [[3, "module-pyecsca.codegen.client", false]], "pyecsca.codegen.common": [[4, "module-pyecsca.codegen.common", false]], "pyecsca.codegen.render": [[5, "module-pyecsca.codegen.render", false]], "pyecsca.codegen.templates": [[6, "module-pyecsca.codegen.templates", false]], "pyecsca.ec": [[7, "module-pyecsca.ec", false]], "pyecsca.ec.configuration": [[8, "module-pyecsca.ec.configuration", false]], "pyecsca.ec.context": [[9, "module-pyecsca.ec.context", false]], "pyecsca.ec.coordinates": [[10, "module-pyecsca.ec.coordinates", false]], "pyecsca.ec.curve": [[11, "module-pyecsca.ec.curve", false]], "pyecsca.ec.divpoly": [[12, "module-pyecsca.ec.divpoly", false]], "pyecsca.ec.error": [[13, "module-pyecsca.ec.error", false]], "pyecsca.ec.formula": [[14, "module-pyecsca.ec.formula", false]], "pyecsca.ec.formula.base": [[15, "module-pyecsca.ec.formula.base", false]], "pyecsca.ec.formula.code": [[16, "module-pyecsca.ec.formula.code", false]], "pyecsca.ec.formula.efd": [[17, "module-pyecsca.ec.formula.efd", false]], "pyecsca.ec.formula.expand": [[18, "module-pyecsca.ec.formula.expand", false]], "pyecsca.ec.formula.fake": [[19, "module-pyecsca.ec.formula.fake", false]], "pyecsca.ec.formula.fliparoo": [[20, "module-pyecsca.ec.formula.fliparoo", false]], "pyecsca.ec.formula.graph": [[21, "module-pyecsca.ec.formula.graph", false]], "pyecsca.ec.formula.metrics": [[22, "module-pyecsca.ec.formula.metrics", false]], "pyecsca.ec.formula.partitions": [[23, "module-pyecsca.ec.formula.partitions", false]], "pyecsca.ec.formula.switch_sign": [[24, "module-pyecsca.ec.formula.switch_sign", false]], "pyecsca.ec.formula.unroll": [[25, "module-pyecsca.ec.formula.unroll", false]], "pyecsca.ec.key_agreement": [[26, "module-pyecsca.ec.key_agreement", false]], "pyecsca.ec.key_generation": [[27, "module-pyecsca.ec.key_generation", false]], "pyecsca.ec.mod": [[28, "module-pyecsca.ec.mod", false]], "pyecsca.ec.mod.base": [[29, "module-pyecsca.ec.mod.base", false]], "pyecsca.ec.mod.flint": [[30, "module-pyecsca.ec.mod.flint", false]], "pyecsca.ec.mod.gmp": [[31, "module-pyecsca.ec.mod.gmp", false]], "pyecsca.ec.mod.raw": [[32, "module-pyecsca.ec.mod.raw", false]], "pyecsca.ec.mod.symbolic": [[33, "module-pyecsca.ec.mod.symbolic", false]], "pyecsca.ec.model": [[34, "module-pyecsca.ec.model", false]], "pyecsca.ec.mult": [[35, "module-pyecsca.ec.mult", false]], "pyecsca.ec.mult.base": [[36, "module-pyecsca.ec.mult.base", false]], "pyecsca.ec.mult.binary": [[37, "module-pyecsca.ec.mult.binary", false]], "pyecsca.ec.mult.comb": [[38, "module-pyecsca.ec.mult.comb", false]], "pyecsca.ec.mult.fixed": [[39, "module-pyecsca.ec.mult.fixed", false]], "pyecsca.ec.mult.ladder": [[40, "module-pyecsca.ec.mult.ladder", false]], "pyecsca.ec.mult.naf": [[41, "module-pyecsca.ec.mult.naf", false]], "pyecsca.ec.mult.window": [[42, "module-pyecsca.ec.mult.window", false]], "pyecsca.ec.op": [[43, "module-pyecsca.ec.op", false]], "pyecsca.ec.params": [[44, "module-pyecsca.ec.params", false]], "pyecsca.ec.point": [[45, "module-pyecsca.ec.point", false]], "pyecsca.ec.scalar": [[46, "module-pyecsca.ec.scalar", false]], "pyecsca.ec.signature": [[47, "module-pyecsca.ec.signature", false]], "pyecsca.ec.transformations": [[48, "module-pyecsca.ec.transformations", false]], "pyecsca.misc": [[49, "module-pyecsca.misc", false]], "pyecsca.misc.cache": [[50, "module-pyecsca.misc.cache", false]], "pyecsca.misc.cfg": [[51, "module-pyecsca.misc.cfg", false]], "pyecsca.misc.utils": [[52, "module-pyecsca.misc.utils", false]], "pyecsca.sca": [[53, "module-pyecsca.sca", false]], "pyecsca.sca.attack": [[54, "module-pyecsca.sca.attack", false]], "pyecsca.sca.attack.cpa": [[55, "module-pyecsca.sca.attack.CPA", false]], "pyecsca.sca.attack.dpa": [[56, "module-pyecsca.sca.attack.DPA", false]], "pyecsca.sca.attack.leakage_model": [[57, "module-pyecsca.sca.attack.leakage_model", false]], "pyecsca.sca.re": [[58, "module-pyecsca.sca.re", false]], "pyecsca.sca.re.base": [[59, "module-pyecsca.sca.re.base", false]], "pyecsca.sca.re.rpa": [[60, "module-pyecsca.sca.re.rpa", false]], "pyecsca.sca.re.structural": [[61, "module-pyecsca.sca.re.structural", false]], "pyecsca.sca.re.tree": [[62, "module-pyecsca.sca.re.tree", false]], "pyecsca.sca.re.zvp": [[63, "module-pyecsca.sca.re.zvp", false]], "pyecsca.sca.scope": [[64, "module-pyecsca.sca.scope", false]], "pyecsca.sca.scope.base": [[65, "module-pyecsca.sca.scope.base", false]], "pyecsca.sca.scope.chipwhisperer": [[66, "module-pyecsca.sca.scope.chipwhisperer", false]], "pyecsca.sca.scope.picoscope_alt": [[67, "module-pyecsca.sca.scope.picoscope_alt", false]], "pyecsca.sca.scope.picoscope_sdk": [[68, "module-pyecsca.sca.scope.picoscope_sdk", false]], "pyecsca.sca.stacked_traces": [[69, "module-pyecsca.sca.stacked_traces", false]], "pyecsca.sca.stacked_traces.combine": [[70, "module-pyecsca.sca.stacked_traces.combine", false]], "pyecsca.sca.stacked_traces.stacked_traces": [[71, "module-pyecsca.sca.stacked_traces.stacked_traces", false]], "pyecsca.sca.target": [[72, "module-pyecsca.sca.target", false]], "pyecsca.sca.target.base": [[75, "module-pyecsca.sca.target.base", false]], "pyecsca.sca.target.binary": [[76, "module-pyecsca.sca.target.binary", false]], "pyecsca.sca.target.chipwhisperer": [[77, "module-pyecsca.sca.target.chipwhisperer", false]], "pyecsca.sca.target.ectester": [[78, "module-pyecsca.sca.target.ectester", false]], "pyecsca.sca.target.flash": [[79, "module-pyecsca.sca.target.flash", false]], "pyecsca.sca.target.iso7816": [[73, "module-pyecsca.sca.target.ISO7816", false]], "pyecsca.sca.target.leakage": [[80, "module-pyecsca.sca.target.leakage", false]], "pyecsca.sca.target.leia": [[81, "module-pyecsca.sca.target.leia", false]], "pyecsca.sca.target.pcsc": [[74, "module-pyecsca.sca.target.PCSC", false]], "pyecsca.sca.target.serial": [[82, "module-pyecsca.sca.target.serial", false]], "pyecsca.sca.target.simpleserial": [[83, "module-pyecsca.sca.target.simpleserial", false]], "pyecsca.sca.trace": [[84, "module-pyecsca.sca.trace", false]], "pyecsca.sca.trace.align": [[85, "module-pyecsca.sca.trace.align", false]], "pyecsca.sca.trace.combine": [[86, "module-pyecsca.sca.trace.combine", false]], "pyecsca.sca.trace.edit": [[87, "module-pyecsca.sca.trace.edit", false]], "pyecsca.sca.trace.filter": [[88, "module-pyecsca.sca.trace.filter", false]], "pyecsca.sca.trace.match": [[89, "module-pyecsca.sca.trace.match", false]], "pyecsca.sca.trace.plot": [[90, "module-pyecsca.sca.trace.plot", false]], "pyecsca.sca.trace.process": [[91, "module-pyecsca.sca.trace.process", false]], "pyecsca.sca.trace.sampling": [[92, "module-pyecsca.sca.trace.sampling", false]], "pyecsca.sca.trace.test": [[93, "module-pyecsca.sca.trace.test", false]], "pyecsca.sca.trace.trace": [[94, "module-pyecsca.sca.trace.trace", false]], "pyecsca.sca.trace_set": [[95, "module-pyecsca.sca.trace_set", false]], "pyecsca.sca.trace_set.base": [[96, "module-pyecsca.sca.trace_set.base", false]], "pyecsca.sca.trace_set.chipwhisperer": [[97, "module-pyecsca.sca.trace_set.chipwhisperer", false]], "pyecsca.sca.trace_set.hdf5": [[98, "module-pyecsca.sca.trace_set.hdf5", false]], "pyecsca.sca.trace_set.inspector": [[99, "module-pyecsca.sca.trace_set.inspector", false]], "pyecsca.sca.trace_set.pickle": [[100, "module-pyecsca.sca.trace_set.pickle", false]], "quit() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.quit", false]], "quit() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.quit", false]], "quit() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.quit", false]], "quit() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.quit", false]], "quit() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.quit", false]], "r (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.R", false]], "r (signatureresult attribute)": [[47, "pyecsca.ec.signature.SignatureResult.r", false]], "random() (flintmod class method)": [[30, "pyecsca.ec.mod.flint.FlintMod.random", false]], "random() (gmpmod class method)": [[31, "pyecsca.ec.mod.gmp.GMPMod.random", false]], "random() (mod class method)": [[29, "pyecsca.ec.mod.base.Mod.random", false]], "random() (rawmod class method)": [[32, "pyecsca.ec.mod.raw.RawMod.random", false]], "random() (symbolicmod class method)": [[33, "pyecsca.ec.mod.symbolic.SymbolicMod.random", false]], "random() (undefined class method)": [[29, "pyecsca.ec.mod.base.Undefined.random", false]], "random_mod (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.random_mod", false]], "randommod (class in pyecsca.ec.configuration)": [[8, "pyecsca.ec.configuration.RandomMod", false]], "randommodaction (class in pyecsca.ec.mod.base)": [[29, "pyecsca.ec.mod.base.RandomModAction", false]], "ranges (picoscopesdk attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.RANGES", false]], "ranges (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.RANGES", false], [68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.ranges", false]], "ranges (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.RANGES", false], [68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.ranges", false]], "ranges (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.RANGES", false], [68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.ranges", false]], "ranges (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.RANGES", false], [68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.ranges", false]], "ranges (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.RANGES", false], [68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.ranges", false]], "raw (sampletype attribute)": [[65, "pyecsca.sca.scope.base.SampleType.Raw", false]], "rawmod (class in pyecsca.ec.mod.raw)": [[32, "pyecsca.ec.mod.raw.RawMod", false]], "re (class in pyecsca.sca.re.base)": [[59, "pyecsca.sca.re.base.RE", false]], "read() (binarytarget method)": [[76, "pyecsca.sca.target.binary.BinaryTarget.read", false]], "read() (chipwhisperertarget method)": [[77, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.read", false]], "read() (chipwhisperertraceset class method)": [[97, "pyecsca.sca.trace_set.chipwhisperer.ChipWhispererTraceSet.read", false]], "read() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.read", false]], "read() (hdf5traceset class method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.read", false]], "read() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.read", false]], "read() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.read", false]], "read() (inspectortraceset class method)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.read", false]], "read() (pickletraceset class method)": [[100, "pyecsca.sca.trace_set.pickle.PickleTraceSet.read", false]], "read() (serialtarget method)": [[82, "pyecsca.sca.target.serial.SerialTarget.read", false]], "read() (simpleserialtarget method)": [[83, "pyecsca.sca.target.simpleserial.SimpleSerialTarget.read", false]], "read() (traceset class method)": [[96, "pyecsca.sca.trace_set.base.TraceSet.read", false]], "read_bool() (parsers static method)": [[99, "pyecsca.sca.trace_set.inspector.Parsers.read_bool", false]], "read_float() (parsers static method)": [[99, "pyecsca.sca.trace_set.inspector.Parsers.read_float", false]], "read_int() (parsers static method)": [[99, "pyecsca.sca.trace_set.inspector.Parsers.read_int", false]], "read_str() (parsers static method)": [[99, "pyecsca.sca.trace_set.inspector.Parsers.read_str", false]], "real (appletbaseenum attribute)": [[78, "pyecsca.sca.target.ectester.AppletBaseEnum.real", false]], "real (cardprotocol attribute)": [[73, "pyecsca.sca.target.ISO7816.CardProtocol.real", false]], "real (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.real", false]], "real (exportenum attribute)": [[78, "pyecsca.sca.target.ectester.ExportEnum.real", false]], "real (formatenum attribute)": [[78, "pyecsca.sca.target.ectester.FormatEnum.real", false]], "real (instructionenum attribute)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.real", false]], "real (keyagreementenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.real", false]], "real (keybuildenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyBuildEnum.real", false]], "real (keyclassenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyClassEnum.real", false]], "real (keyenum attribute)": [[78, "pyecsca.sca.target.ectester.KeyEnum.real", false]], "real (keypairenum attribute)": [[78, "pyecsca.sca.target.ectester.KeypairEnum.real", false]], "real (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.real", false]], "real (runmodeenum attribute)": [[78, "pyecsca.sca.target.ectester.RunModeEnum.real", false]], "real (samplecoding attribute)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.real", false]], "real (signatureenum attribute)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.real", false]], "real (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.real", false]], "real (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.real", false]], "recenter() (in module pyecsca.sca.trace.process)": [[91, "pyecsca.sca.trace.process.recenter", false]], "recoding_direction (slidingwindowmultiplier attribute)": [[42, "pyecsca.ec.mult.window.SlidingWindowMultiplier.recoding_direction", false]], "reconnect_outgoing_nodes() (constantnode method)": [[21, "pyecsca.ec.formula.graph.ConstantNode.reconnect_outgoing_nodes", false]], "reconnect_outgoing_nodes() (inputnode method)": [[21, "pyecsca.ec.formula.graph.InputNode.reconnect_outgoing_nodes", false]], "reconnect_outgoing_nodes() (node method)": [[21, "pyecsca.ec.formula.graph.Node.reconnect_outgoing_nodes", false]], "recover_bit() (cpa method)": [[55, "pyecsca.sca.attack.CPA.CPA.recover_bit", false]], "recover_bit() (dpa method)": [[56, "pyecsca.sca.attack.DPA.DPA.recover_bit", false]], "recursive_fliparoo() (in module pyecsca.ec.formula.fliparoo)": [[20, "pyecsca.ec.formula.fliparoo.recursive_fliparoo", false]], "recv_msgs() (chipwhisperertarget method)": [[77, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.recv_msgs", false]], "recv_msgs() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.recv_msgs", false]], "recv_msgs() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.recv_msgs", false]], "recv_msgs() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.recv_msgs", false]], "recv_msgs() (simpleserialtarget method)": [[83, "pyecsca.sca.target.simpleserial.SimpleSerialTarget.recv_msgs", false]], "red (configuration attribute)": [[8, "pyecsca.ec.configuration.Configuration.red", false]], "red (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.red", false]], "reduce (randommod attribute)": [[8, "pyecsca.ec.configuration.RandomMod.REDUCE", false]], "reduce_all_adds() (in module pyecsca.ec.formula.partitions)": [[23, "pyecsca.ec.formula.partitions.reduce_all_adds", false]], "reduction (class in pyecsca.ec.configuration)": [[8, "pyecsca.ec.configuration.Reduction", false]], "reindex() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.reindex", false]], "remove() (hdf5traceset method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.remove", false]], "remove_node() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.remove_node", false]], "render() (in module pyecsca.codegen.render)": [[5, "pyecsca.codegen.render.render", false]], "render() (node method)": [[9, "pyecsca.ec.context.Node.render", false]], "render() (tree method)": [[62, "pyecsca.sca.re.tree.Tree.render", false]], "render_and_build() (in module pyecsca.codegen.render)": [[5, "pyecsca.codegen.render.render_and_build", false]], "render_basic() (tree method)": [[62, "pyecsca.sca.re.tree.Tree.render_basic", false]], "reorder() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.reorder", false]], "requires (accumulatormultiplier attribute)": [[36, "pyecsca.ec.mult.base.AccumulatorMultiplier.requires", false]], "requires (bgmwmultiplier attribute)": [[38, "pyecsca.ec.mult.comb.BGMWMultiplier.requires", false]], "requires (binarynafmultiplier attribute)": [[41, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.requires", false]], "requires (combmultiplier attribute)": [[38, "pyecsca.ec.mult.comb.CombMultiplier.requires", false]], "requires (coronmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.CoronMultiplier.requires", false]], "requires (differentialladdermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.requires", false]], "requires (doubleandaddmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.requires", false]], "requires (fixedwindowltrmultiplier attribute)": [[42, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.requires", false]], "requires (fullprecompmultiplier attribute)": [[39, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.requires", false]], "requires (laddermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.LadderMultiplier.requires", false]], "requires (ltrmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.LTRMultiplier.requires", false]], "requires (rtlmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.RTLMultiplier.requires", false]], "requires (scalarmultiplier attribute)": [[36, "pyecsca.ec.mult.base.ScalarMultiplier.requires", false]], "requires (simpleladdermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.requires", false]], "requires (slidingwindowmultiplier attribute)": [[42, "pyecsca.ec.mult.window.SlidingWindowMultiplier.requires", false]], "requires (windowboothmultiplier attribute)": [[42, "pyecsca.ec.mult.window.WindowBoothMultiplier.requires", false]], "requires (windownafmultiplier attribute)": [[41, "pyecsca.ec.mult.naf.WindowNAFMultiplier.requires", false]], "reset() (chipwhisperertarget method)": [[77, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.reset", false]], "reset() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.reset", false]], "resetconfig() (in module pyecsca.misc.cfg)": [[51, "pyecsca.misc.cfg.resetconfig", false]], "resp (allocatekaresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateKaResponse.resp", false]], "resp (allocateresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateResponse.resp", false]], "resp (allocatesigresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateSigResponse.resp", false]], "resp (cleanupresponse attribute)": [[78, "pyecsca.sca.target.ectester.CleanupResponse.resp", false]], "resp (clearresponse attribute)": [[78, "pyecsca.sca.target.ectester.ClearResponse.resp", false]], "resp (ecdhresponse attribute)": [[78, "pyecsca.sca.target.ectester.ECDHResponse.resp", false]], "resp (ecdsaresponse attribute)": [[78, "pyecsca.sca.target.ectester.ECDSAResponse.resp", false]], "resp (exportresponse attribute)": [[78, "pyecsca.sca.target.ectester.ExportResponse.resp", false]], "resp (generateresponse attribute)": [[78, "pyecsca.sca.target.ectester.GenerateResponse.resp", false]], "resp (runmoderesponse attribute)": [[78, "pyecsca.sca.target.ectester.RunModeResponse.resp", false]], "resp (setresponse attribute)": [[78, "pyecsca.sca.target.ectester.SetResponse.resp", false]], "resp (transformresponse attribute)": [[78, "pyecsca.sca.target.ectester.TransformResponse.resp", false]], "response (node attribute)": [[62, "pyecsca.sca.re.tree.Node.response", false]], "responseapdu (class in pyecsca.sca.target.iso7816)": [[73, "pyecsca.sca.target.ISO7816.ResponseAPDU", false]], "result (codeop attribute)": [[43, "pyecsca.ec.op.CodeOp.result", false]], "result (constantnode property)": [[21, "pyecsca.ec.formula.graph.ConstantNode.result", false]], "result (coordinatemappingaction property)": [[45, "pyecsca.ec.point.CoordinateMappingAction.result", false]], "result (ecdhaction property)": [[26, "pyecsca.ec.key_agreement.ECDHAction.result", false]], "result (emulatortarget attribute)": [[3, "pyecsca.codegen.client.EmulatorTarget.result", false]], "result (formulaaction property)": [[15, "pyecsca.ec.formula.base.FormulaAction.result", false]], "result (inputnode property)": [[21, "pyecsca.ec.formula.graph.InputNode.result", false]], "result (keygenaction property)": [[27, "pyecsca.ec.key_generation.KeygenAction.result", false]], "result (node property)": [[21, "pyecsca.ec.formula.graph.Node.result", false]], "result (randommodaction property)": [[29, "pyecsca.ec.mod.base.RandomModAction.result", false]], "result (resultaction property)": [[9, "pyecsca.ec.context.ResultAction.result", false]], "result (scalarmultiplicationaction property)": [[36, "pyecsca.ec.mult.base.ScalarMultiplicationAction.result", false]], "resultaction (class in pyecsca.ec.context)": [[9, "pyecsca.ec.context.ResultAction", false]], "retrieve() (chipwhispererscope method)": [[66, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.retrieve", false]], "retrieve() (picoscopealt method)": [[67, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.retrieve", false]], "retrieve() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.retrieve", false]], "retrieve() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.retrieve", false]], "retrieve() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.retrieve", false]], "retrieve() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.retrieve", false]], "retrieve() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.retrieve", false]], "retrieve() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.retrieve", false]], "retrieve() (scope method)": [[65, "pyecsca.sca.scope.base.Scope.retrieve", false]], "reverse() (in module pyecsca.sca.trace.edit)": [[87, "pyecsca.sca.trace.edit.reverse", false]], "rolling_mean() (in module pyecsca.sca.trace.process)": [[91, "pyecsca.sca.trace.process.rolling_mean", false]], "root (node property)": [[9, "pyecsca.ec.context.Node.root", false], [62, "pyecsca.sca.re.tree.Node.root", false]], "root (tree attribute)": [[62, "pyecsca.sca.re.tree.Tree.root", false]], "roots (formulagraph attribute)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.roots", false]], "rpa (class in pyecsca.sca.re.rpa)": [[60, "pyecsca.sca.re.rpa.RPA", false]], "rpa_distinguish() (in module pyecsca.sca.re.rpa)": [[60, "pyecsca.sca.re.rpa.rpa_distinguish", false]], "rpa_input_point() (in module pyecsca.sca.re.rpa)": [[60, "pyecsca.sca.re.rpa.rpa_input_point", false]], "rpa_point_0y() (in module pyecsca.sca.re.rpa)": [[60, "pyecsca.sca.re.rpa.rpa_point_0y", false]], "rpa_point_x0() (in module pyecsca.sca.re.rpa)": [[60, "pyecsca.sca.re.rpa.rpa_point_x0", false]], "rtl (processingdirection attribute)": [[36, "pyecsca.ec.mult.base.ProcessingDirection.RTL", false]], "rtlmultiplier (class in pyecsca.ec.mult.binary)": [[37, "pyecsca.ec.mult.binary.RTLMultiplier", false]], "run() (gputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.run", false]], "run() (re method)": [[59, "pyecsca.sca.re.base.RE.run", false]], "run() (rpa method)": [[60, "pyecsca.sca.re.rpa.RPA.run", false]], "run_mode() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.run_mode", false]], "run_mode() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.run_mode", false]], "run_mode() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.run_mode", false]], "runmodeenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.RunModeEnum", false]], "runmoderesponse (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.RunModeResponse", false]], "s (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.S", false]], "s (signatureresult attribute)": [[47, "pyecsca.ec.signature.SignatureResult.s", false]], "sample (randommod attribute)": [[8, "pyecsca.ec.configuration.RandomMod.SAMPLE", false]], "sample_coding (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.sample_coding", false]], "samplecoding (class in pyecsca.sca.trace_set.inspector)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding", false]], "samples (combinedtrace attribute)": [[94, "pyecsca.sca.trace.trace.CombinedTrace.samples", false]], "samples (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.samples", false]], "samples (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.samples", false]], "samples (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.samples", false]], "samples (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.samples", false]], "samples (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.samples", false]], "samples (stackedtraces attribute)": [[71, "pyecsca.sca.stacked_traces.stacked_traces.StackedTraces.samples", false]], "samples (trace attribute)": [[94, "pyecsca.sca.trace.trace.Trace.samples", false]], "sampletype (class in pyecsca.sca.scope.base)": [[65, "pyecsca.sca.scope.base.SampleType", false]], "sampling_frequency (inspectortraceset property)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.sampling_frequency", false]], "satisfying (affinecoordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.AffineCoordinateModel.satisfying", false]], "satisfying (coordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.CoordinateModel.satisfying", false]], "save() (hdf5traceset method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.save", false]], "save_figure() (in module pyecsca.sca.trace.plot)": [[90, "pyecsca.sca.trace.plot.save_figure", false]], "save_figure_png() (in module pyecsca.sca.trace.plot)": [[90, "pyecsca.sca.trace.plot.save_figure_png", false]], "save_figure_svg() (in module pyecsca.sca.trace.plot)": [[90, "pyecsca.sca.trace.plot.save_figure_svg", false]], "scalar (scalarmultiplicationaction attribute)": [[36, "pyecsca.ec.mult.base.ScalarMultiplicationAction.scalar", false]], "scalar_mult() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.scalar_mult", false]], "scalar_mult() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.scalar_mult", false]], "scalar_mult() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.scalar_mult", false]], "scalar_mult() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.scalar_mult", false]], "scalar_mult() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.scalar_mult", false]], "scalarmult (configuration attribute)": [[8, "pyecsca.ec.configuration.Configuration.scalarmult", false]], "scalarmult (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.scalarmult", false]], "scalarmultiplicationaction (class in pyecsca.ec.mult.base)": [[36, "pyecsca.ec.mult.base.ScalarMultiplicationAction", false]], "scalarmultiplier (class in pyecsca.ec.mult.base)": [[36, "pyecsca.ec.mult.base.ScalarMultiplier", false]], "scalars (rpa attribute)": [[60, "pyecsca.sca.re.rpa.RPA.scalars", false]], "scalingefdformula (class in pyecsca.ec.formula.efd)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula", false]], "scalingformula (class in pyecsca.ec.formula.base)": [[15, "pyecsca.ec.formula.base.ScalingFormula", false]], "scl (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.scl", false]], "scope (class in pyecsca.sca.scope.base)": [[65, "pyecsca.sca.scope.base.Scope", false]], "scope_coupling (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.scope_coupling", false]], "scope_id (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.scope_id", false]], "scope_impedance (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.scope_impedance", false]], "scope_offset (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.scope_offset", false]], "scope_range (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.scope_range", false]], "secp112r1 (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.secp112r1", false]], "secp128r1 (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.secp128r1", false]], "secp160r1 (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.secp160r1", false]], "secp192r1 (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.secp192r1", false]], "secp224r1 (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.secp224r1", false]], "secp256r1 (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.secp256r1", false]], "secp384r1 (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.secp384r1", false]], "secp521r1 (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.secp521r1", false]], "secret (ecdhresponse property)": [[78, "pyecsca.sca.target.ectester.ECDHResponse.secret", false]], "sect163r1 (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.sect163r1", false]], "sect233r1 (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.sect233r1", false]], "sect283r1 (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.sect283r1", false]], "sect409r1 (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.sect409r1", false]], "sect571r1 (curveenum attribute)": [[78, "pyecsca.sca.target.ectester.CurveEnum.sect571r1", false]], "seed (devicetarget attribute)": [[3, "pyecsca.codegen.client.DeviceTarget.seed", false]], "seed (emulatortarget attribute)": [[3, "pyecsca.codegen.client.EmulatorTarget.seed", false]], "seed (hosttarget attribute)": [[3, "pyecsca.codegen.client.HostTarget.seed", false]], "seed (impltarget attribute)": [[3, "pyecsca.codegen.client.ImplTarget.seed", false]], "select() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.select", false]], "select() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.select", false]], "select() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.select", false]], "select() (iso7816target method)": [[73, "pyecsca.sca.target.ISO7816.ISO7816Target.select", false]], "select() (leiatarget method)": [[81, "pyecsca.sca.target.leia.LEIATarget.select", false]], "select() (pcsctarget method)": [[74, "pyecsca.sca.target.PCSC.PCSCTarget.select", false]], "select_applet() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.select_applet", false]], "select_applet() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.select_applet", false]], "select_applet() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.select_applet", false]], "send() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.send", false]], "send() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.send", false]], "send() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.send", false]], "send_apdu() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.send_apdu", false]], "send_apdu() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.send_apdu", false]], "send_apdu() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.send_apdu", false]], "send_apdu() (iso7816target method)": [[73, "pyecsca.sca.target.ISO7816.ISO7816Target.send_apdu", false]], "send_apdu() (leiatarget method)": [[81, "pyecsca.sca.target.leia.LEIATarget.send_apdu", false]], "send_apdu() (pcsctarget method)": [[74, "pyecsca.sca.target.PCSC.PCSCTarget.send_apdu", false]], "send_cmd() (chipwhisperertarget method)": [[77, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.send_cmd", false]], "send_cmd() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.send_cmd", false]], "send_cmd() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.send_cmd", false]], "send_cmd() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.send_cmd", false]], "send_cmd() (simpleserialtarget method)": [[83, "pyecsca.sca.target.simpleserial.SimpleSerialTarget.send_cmd", false]], "separator (node attribute)": [[9, "pyecsca.ec.context.Node.separator", false], [62, "pyecsca.sca.re.tree.Node.separator", false]], "serialtarget (class in pyecsca.sca.target.serial)": [[82, "pyecsca.sca.target.serial.SerialTarget", false]], "set() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.set", false]], "set() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.set", false]], "set() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.set", false]], "set_buffer() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.set_buffer", false]], "set_buffer() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.set_buffer", false]], "set_buffer() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.set_buffer", false]], "set_buffer() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.set_buffer", false]], "set_buffer() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.set_buffer", false]], "set_buffer() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.set_buffer", false]], "set_channel() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.set_channel", false]], "set_channel() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.set_channel", false]], "set_channel() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.set_channel", false]], "set_channel() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.set_channel", false]], "set_channel() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.set_channel", false]], "set_channel() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.set_channel", false]], "set_frequency() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.set_frequency", false]], "set_frequency() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.set_frequency", false]], "set_frequency() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.set_frequency", false]], "set_frequency() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.set_frequency", false]], "set_frequency() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.set_frequency", false]], "set_frequency() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.set_frequency", false]], "set_leakage_model() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.set_leakage_model", false]], "set_params() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.set_params", false]], "set_params() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.set_params", false]], "set_params() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.set_params", false]], "set_params() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.set_params", false]], "set_params() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.set_params", false]], "set_privkey() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.set_privkey", false]], "set_privkey() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.set_privkey", false]], "set_privkey() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.set_privkey", false]], "set_privkey() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.set_privkey", false]], "set_privkey() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.set_privkey", false]], "set_pubkey() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.set_pubkey", false]], "set_pubkey() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.set_pubkey", false]], "set_pubkey() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.set_pubkey", false]], "set_pubkey() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.set_pubkey", false]], "set_pubkey() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.set_pubkey", false]], "set_trigger() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.set_trigger", false]], "set_trigger() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.set_trigger", false]], "set_trigger() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.set_trigger", false]], "set_trigger() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.set_trigger", false]], "set_trigger() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.set_trigger", false]], "set_trigger() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.set_trigger", false]], "set_trigger() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.set_trigger", false]], "set_trigger() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.set_trigger", false]], "set_trigger() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.set_trigger", false]], "set_trigger() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.set_trigger", false]], "set_trigger() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.set_trigger", false]], "setconfig() (in module pyecsca.misc.cfg)": [[51, "pyecsca.misc.cfg.setconfig", false]], "setdefault() (hdf5meta method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5Meta.setdefault", false]], "setresponse (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.SetResponse", false]], "setup_capture() (chipwhispererscope method)": [[66, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_capture", false]], "setup_capture() (picoscopealt method)": [[67, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_capture", false]], "setup_capture() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_capture", false]], "setup_capture() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_capture", false]], "setup_capture() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_capture", false]], "setup_capture() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_capture", false]], "setup_capture() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_capture", false]], "setup_capture() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_capture", false]], "setup_capture() (scope method)": [[65, "pyecsca.sca.scope.base.Scope.setup_capture", false]], "setup_channel() (chipwhispererscope method)": [[66, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_channel", false]], "setup_channel() (picoscopealt method)": [[67, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_channel", false]], "setup_channel() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_channel", false]], "setup_channel() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_channel", false]], "setup_channel() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_channel", false]], "setup_channel() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_channel", false]], "setup_channel() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_channel", false]], "setup_channel() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_channel", false]], "setup_channel() (scope method)": [[65, "pyecsca.sca.scope.base.Scope.setup_channel", false]], "setup_frequency() (chipwhispererscope method)": [[66, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_frequency", false]], "setup_frequency() (picoscopealt method)": [[67, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_frequency", false]], "setup_frequency() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_frequency", false]], "setup_frequency() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_frequency", false]], "setup_frequency() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_frequency", false]], "setup_frequency() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_frequency", false]], "setup_frequency() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_frequency", false]], "setup_frequency() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_frequency", false]], "setup_frequency() (scope method)": [[65, "pyecsca.sca.scope.base.Scope.setup_frequency", false]], "setup_trigger() (chipwhispererscope method)": [[66, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_trigger", false]], "setup_trigger() (picoscopealt method)": [[67, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_trigger", false]], "setup_trigger() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_trigger", false]], "setup_trigger() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_trigger", false]], "setup_trigger() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_trigger", false]], "setup_trigger() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_trigger", false]], "setup_trigger() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_trigger", false]], "setup_trigger() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_trigger", false]], "setup_trigger() (scope method)": [[65, "pyecsca.sca.scope.base.Scope.setup_trigger", false]], "sha1 (hashtype attribute)": [[8, "pyecsca.ec.configuration.HashType.SHA1", false]], "sha224 (hashtype attribute)": [[8, "pyecsca.ec.configuration.HashType.SHA224", false]], "sha256 (hashtype attribute)": [[8, "pyecsca.ec.configuration.HashType.SHA256", false]], "sha384 (hashtype attribute)": [[8, "pyecsca.ec.configuration.HashType.SHA384", false]], "sha512 (hashtype attribute)": [[8, "pyecsca.ec.configuration.HashType.SHA512", false]], "short_circuit (accumulatormultiplier attribute)": [[36, "pyecsca.ec.mult.base.AccumulatorMultiplier.short_circuit", false]], "short_circuit (bgmwmultiplier attribute)": [[38, "pyecsca.ec.mult.comb.BGMWMultiplier.short_circuit", false]], "short_circuit (binarynafmultiplier attribute)": [[41, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.short_circuit", false]], "short_circuit (combmultiplier attribute)": [[38, "pyecsca.ec.mult.comb.CombMultiplier.short_circuit", false]], "short_circuit (coronmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.CoronMultiplier.short_circuit", false]], "short_circuit (differentialladdermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.short_circuit", false]], "short_circuit (doubleandaddmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.short_circuit", false]], "short_circuit (fixedwindowltrmultiplier attribute)": [[42, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.short_circuit", false]], "short_circuit (fullprecompmultiplier attribute)": [[39, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.short_circuit", false]], "short_circuit (laddermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.LadderMultiplier.short_circuit", false]], "short_circuit (ltrmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.LTRMultiplier.short_circuit", false]], "short_circuit (rtlmultiplier attribute)": [[37, "pyecsca.ec.mult.binary.RTLMultiplier.short_circuit", false]], "short_circuit (scalarmultiplier attribute)": [[36, "pyecsca.ec.mult.base.ScalarMultiplier.short_circuit", false]], "short_circuit (simpleladdermultiplier attribute)": [[40, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.short_circuit", false]], "short_circuit (slidingwindowmultiplier attribute)": [[42, "pyecsca.ec.mult.window.SlidingWindowMultiplier.short_circuit", false]], "short_circuit (windowboothmultiplier attribute)": [[42, "pyecsca.ec.mult.window.WindowBoothMultiplier.short_circuit", false]], "short_circuit (windownafmultiplier attribute)": [[41, "pyecsca.ec.mult.naf.WindowNAFMultiplier.short_circuit", false]], "shortname (additionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.shortname", false]], "shortname (additionformula attribute)": [[15, "pyecsca.ec.formula.base.AdditionFormula.shortname", false]], "shortname (codeadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.shortname", false]], "shortname (codedifferentialadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.shortname", false]], "shortname (codedoublingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.shortname", false]], "shortname (codeformula attribute)": [[16, "pyecsca.ec.formula.code.CodeFormula.shortname", false]], "shortname (codeladderformula attribute)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.shortname", false]], "shortname (codenegationformula attribute)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.shortname", false]], "shortname (codescalingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.shortname", false]], "shortname (codetriplingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.shortname", false]], "shortname (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.shortname", false]], "shortname (differentialadditionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.shortname", false]], "shortname (differentialadditionformula attribute)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.shortname", false]], "shortname (doublingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.shortname", false]], "shortname (doublingformula attribute)": [[15, "pyecsca.ec.formula.base.DoublingFormula.shortname", false]], "shortname (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.shortname", false]], "shortname (efdformula attribute)": [[17, "pyecsca.ec.formula.efd.EFDFormula.shortname", false]], "shortname (fakeadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.shortname", false]], "shortname (fakedifferentialadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.shortname", false]], "shortname (fakedoublingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.shortname", false]], "shortname (fakeformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeFormula.shortname", false]], "shortname (fakeladderformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.shortname", false]], "shortname (fakenegationformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.shortname", false]], "shortname (fakescalingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.shortname", false]], "shortname (faketriplingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.shortname", false]], "shortname (formula attribute)": [[15, "pyecsca.ec.formula.base.Formula.shortname", false]], "shortname (formulagraph attribute)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.shortname", false]], "shortname (ladderefdformula attribute)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.shortname", false]], "shortname (ladderformula attribute)": [[15, "pyecsca.ec.formula.base.LadderFormula.shortname", false]], "shortname (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.shortname", false]], "shortname (negationefdformula attribute)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.shortname", false]], "shortname (negationformula attribute)": [[15, "pyecsca.ec.formula.base.NegationFormula.shortname", false]], "shortname (scalingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.shortname", false]], "shortname (scalingformula attribute)": [[15, "pyecsca.ec.formula.base.ScalingFormula.shortname", false]], "shortname (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.shortname", false]], "shortname (triplingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.shortname", false]], "shortname (triplingformula attribute)": [[15, "pyecsca.ec.formula.base.TriplingFormula.shortname", false]], "shortname (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.shortname", false]], "shortweierstrassmodel (class in pyecsca.ec.model)": [[34, "pyecsca.ec.model.ShortWeierstrassModel", false]], "shutdown() (taskexecutor method)": [[52, "pyecsca.misc.utils.TaskExecutor.shutdown", false]], "siblings (node property)": [[9, "pyecsca.ec.context.Node.siblings", false], [62, "pyecsca.sca.re.tree.Node.siblings", false]], "sign_data() (ecdsa_none method)": [[47, "pyecsca.ec.signature.ECDSA_NONE.sign_data", false]], "sign_data() (ecdsa_sha1 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA1.sign_data", false]], "sign_data() (ecdsa_sha224 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA224.sign_data", false]], "sign_data() (ecdsa_sha256 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA256.sign_data", false]], "sign_data() (ecdsa_sha384 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA384.sign_data", false]], "sign_data() (ecdsa_sha512 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA512.sign_data", false]], "sign_data() (signature method)": [[47, "pyecsca.ec.signature.Signature.sign_data", false]], "sign_hash() (ecdsa_none method)": [[47, "pyecsca.ec.signature.ECDSA_NONE.sign_hash", false]], "sign_hash() (ecdsa_sha1 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA1.sign_hash", false]], "sign_hash() (ecdsa_sha224 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA224.sign_hash", false]], "sign_hash() (ecdsa_sha256 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA256.sign_hash", false]], "sign_hash() (ecdsa_sha384 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA384.sign_hash", false]], "sign_hash() (ecdsa_sha512 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA512.sign_hash", false]], "sign_hash() (signature method)": [[47, "pyecsca.ec.signature.Signature.sign_hash", false]], "signature (class in pyecsca.ec.signature)": [[47, "pyecsca.ec.signature.Signature", false]], "signature (ecdsaresponse property)": [[78, "pyecsca.sca.target.ectester.ECDSAResponse.signature", false]], "signature (ecdsaverifyaction attribute)": [[47, "pyecsca.ec.signature.ECDSAVerifyAction.signature", false]], "signatureenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.SignatureEnum", false]], "signatureresult (class in pyecsca.ec.signature)": [[47, "pyecsca.ec.signature.SignatureResult", false]], "silent() (in module pyecsca.misc.utils)": [[52, "pyecsca.misc.utils.silent", false]], "simpleladdermultiplier (class in pyecsca.ec.mult.ladder)": [[40, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier", false]], "simpleserialmessage (class in pyecsca.sca.target.simpleserial)": [[83, "pyecsca.sca.target.simpleserial.SimpleSerialMessage", false]], "simpleserialtarget (class in pyecsca.sca.target.simpleserial)": [[83, "pyecsca.sca.target.simpleserial.SimpleSerialTarget", false]], "simplify() (in module pyecsca.misc.cache)": [[50, "pyecsca.misc.cache.simplify", false]], "simulate_ecdh_traces() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.simulate_ecdh_traces", false]], "simulate_scalar_mult_traces() (leakagetarget method)": [[80, "pyecsca.sca.target.leakage.LeakageTarget.simulate_scalar_mult_traces", false]], "size (node property)": [[9, "pyecsca.ec.context.Node.size", false], [62, "pyecsca.sca.re.tree.Node.size", false]], "size (tree property)": [[62, "pyecsca.sca.re.tree.Tree.size", false]], "slice (class in pyecsca.sca.attack.leakage_model)": [[57, "pyecsca.sca.attack.leakage_model.Slice", false]], "slice() (addfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.AddFliparoo.slice", false]], "slice() (addsubfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.slice", false]], "slice() (fliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.Fliparoo.slice", false]], "slice() (mulfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.MulFliparoo.slice", false]], "sliding_window_ltr() (in module pyecsca.ec.scalar)": [[46, "pyecsca.ec.scalar.sliding_window_ltr", false]], "sliding_window_rtl() (in module pyecsca.ec.scalar)": [[46, "pyecsca.ec.scalar.sliding_window_rtl", false]], "slidingwindowmultiplier (class in pyecsca.ec.mult.window)": [[42, "pyecsca.ec.mult.window.SlidingWindowMultiplier", false]], "split_traces() (dpa method)": [[56, "pyecsca.sca.attack.DPA.DPA.split_traces", false]], "sqr (configuration attribute)": [[8, "pyecsca.ec.configuration.Configuration.sqr", false]], "sqr (deviceconfiguration attribute)": [[4, "pyecsca.codegen.common.DeviceConfiguration.sqr", false]], "sqr (optype attribute)": [[43, "pyecsca.ec.op.OpType.Sqr", false]], "sqrt() (flintmod method)": [[30, "pyecsca.ec.mod.flint.FlintMod.sqrt", false]], "sqrt() (gmpmod method)": [[31, "pyecsca.ec.mod.gmp.GMPMod.sqrt", false]], "sqrt() (mod method)": [[29, "pyecsca.ec.mod.base.Mod.sqrt", false]], "sqrt() (rawmod method)": [[32, "pyecsca.ec.mod.raw.RawMod.sqrt", false]], "sqrt() (symbolicmod method)": [[33, "pyecsca.ec.mod.symbolic.SymbolicMod.sqrt", false]], "sqrt() (undefined method)": [[29, "pyecsca.ec.mod.base.Undefined.sqrt", false]], "squaring (class in pyecsca.ec.configuration)": [[8, "pyecsca.ec.configuration.Squaring", false]], "stackedtraces (class in pyecsca.sca.stacked_traces.stacked_traces)": [[71, "pyecsca.sca.stacked_traces.stacked_traces.StackedTraces", false]], "standard_deviation() (basetracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.BaseTraceManager.standard_deviation", false]], "standard_deviation() (cputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.standard_deviation", false]], "standard_deviation() (gputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.standard_deviation", false]], "standard_deviation() (in module pyecsca.sca.trace.combine)": [[86, "pyecsca.sca.trace.combine.standard_deviation", false]], "stm32f0 (platform attribute)": [[4, "pyecsca.codegen.common.Platform.STM32F0", false]], "stm32f3 (platform attribute)": [[4, "pyecsca.codegen.common.Platform.STM32F3", false]], "stop() (chipwhispererscope method)": [[66, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.stop", false]], "stop() (picoscopealt method)": [[67, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.stop", false]], "stop() (picoscopesdk method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.stop", false]], "stop() (ps3000ascope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.stop", false]], "stop() (ps3000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.stop", false]], "stop() (ps4000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.stop", false]], "stop() (ps5000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.stop", false]], "stop() (ps6000scope method)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.stop", false]], "stop() (scope method)": [[65, "pyecsca.sca.scope.base.Scope.stop", false]], "stretch() (in module pyecsca.sca.trace.edit)": [[87, "pyecsca.sca.trace.edit.stretch", false]], "student_ttest() (in module pyecsca.sca.trace.test)": [[93, "pyecsca.sca.trace.test.student_ttest", false]], "sub (optype attribute)": [[43, "pyecsca.ec.op.OpType.Sub", false]], "submit() (taskexecutor method)": [[52, "pyecsca.misc.utils.TaskExecutor.submit", false]], "submit_task() (taskexecutor method)": [[52, "pyecsca.misc.utils.TaskExecutor.submit_task", false]], "subtract() (in module pyecsca.sca.trace.combine)": [[86, "pyecsca.sca.trace.combine.subtract", false]], "success (allocatekaresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateKaResponse.success", false]], "success (allocateresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateResponse.success", false]], "success (allocatesigresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateSigResponse.success", false]], "success (cleanupresponse attribute)": [[78, "pyecsca.sca.target.ectester.CleanupResponse.success", false]], "success (clearresponse attribute)": [[78, "pyecsca.sca.target.ectester.ClearResponse.success", false]], "success (ecdhresponse attribute)": [[78, "pyecsca.sca.target.ectester.ECDHResponse.success", false]], "success (ecdsaresponse attribute)": [[78, "pyecsca.sca.target.ectester.ECDSAResponse.success", false]], "success (exportresponse attribute)": [[78, "pyecsca.sca.target.ectester.ExportResponse.success", false]], "success (generateresponse attribute)": [[78, "pyecsca.sca.target.ectester.GenerateResponse.success", false]], "success (runmoderesponse attribute)": [[78, "pyecsca.sca.target.ectester.RunModeResponse.success", false]], "success (setresponse attribute)": [[78, "pyecsca.sca.target.ectester.SetResponse.success", false]], "success (transformresponse attribute)": [[78, "pyecsca.sca.target.ectester.TransformResponse.success", false]], "sw (responseapdu attribute)": [[73, "pyecsca.sca.target.ISO7816.ResponseAPDU.sw", false]], "sw2e() (in module pyecsca.ec.transformations)": [[48, "pyecsca.ec.transformations.SW2E", false]], "sw2m() (in module pyecsca.ec.transformations)": [[48, "pyecsca.ec.transformations.SW2M", false]], "sw2te() (in module pyecsca.ec.transformations)": [[48, "pyecsca.ec.transformations.SW2TE", false]], "sw_applet_select_failed (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_APPLET_SELECT_FAILED", false]], "sw_bytes_remaining_00 (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_BYTES_REMAINING_00", false]], "sw_cla_not_supported (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_CLA_NOT_SUPPORTED", false]], "sw_command_not_allowed (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_COMMAND_NOT_ALLOWED", false]], "sw_conditions_not_satisfied (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_CONDITIONS_NOT_SATISFIED", false]], "sw_correct_length_00 (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_CORRECT_LENGTH_00", false]], "sw_data_invalid (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_DATA_INVALID", false]], "sw_file_full (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_FILE_FULL", false]], "sw_file_invalid (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_FILE_INVALID", false]], "sw_file_not_found (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_FILE_NOT_FOUND", false]], "sw_func_not_supported (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_FUNC_NOT_SUPPORTED", false]], "sw_incorrect_p1p2 (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_INCORRECT_P1P2", false]], "sw_ins_not_supported (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_INS_NOT_SUPPORTED", false]], "sw_no_error (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_NO_ERROR", false]], "sw_record_not_found (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_RECORD_NOT_FOUND", false]], "sw_security_status_not_satisfied (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_SECURITY_STATUS_NOT_SATISFIED", false]], "sw_unknown (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_UNKNOWN", false]], "sw_wrong_data (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_WRONG_DATA", false]], "sw_wrong_length (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_WRONG_LENGTH", false]], "sw_wrong_p1p2 (iso7816 attribute)": [[73, "pyecsca.sca.target.ISO7816.ISO7816.SW_WRONG_P1P2", false]], "sws (allocatekaresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateKaResponse.sws", false]], "sws (allocateresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateResponse.sws", false]], "sws (allocatesigresponse attribute)": [[78, "pyecsca.sca.target.ectester.AllocateSigResponse.sws", false]], "sws (cleanupresponse attribute)": [[78, "pyecsca.sca.target.ectester.CleanupResponse.sws", false]], "sws (clearresponse attribute)": [[78, "pyecsca.sca.target.ectester.ClearResponse.sws", false]], "sws (ecdhresponse attribute)": [[78, "pyecsca.sca.target.ectester.ECDHResponse.sws", false]], "sws (ecdsaresponse attribute)": [[78, "pyecsca.sca.target.ectester.ECDSAResponse.sws", false]], "sws (exportresponse attribute)": [[78, "pyecsca.sca.target.ectester.ExportResponse.sws", false]], "sws (generateresponse attribute)": [[78, "pyecsca.sca.target.ectester.GenerateResponse.sws", false]], "sws (runmoderesponse attribute)": [[78, "pyecsca.sca.target.ectester.RunModeResponse.sws", false]], "sws (setresponse attribute)": [[78, "pyecsca.sca.target.ectester.SetResponse.sws", false]], "sws (transformresponse attribute)": [[78, "pyecsca.sca.target.ectester.TransformResponse.sws", false]], "symbolicmod (class in pyecsca.ec.mod.symbolic)": [[33, "pyecsca.ec.mod.symbolic.SymbolicMod", false]], "sympify() (in module pyecsca.misc.cache)": [[50, "pyecsca.misc.cache.sympify", false]], "t0 (cardprotocol attribute)": [[73, "pyecsca.sca.target.ISO7816.CardProtocol.T0", false]], "t1 (cardprotocol attribute)": [[73, "pyecsca.sca.target.ISO7816.CardProtocol.T1", false]], "target (class in pyecsca.sca.target.base)": [[75, "pyecsca.sca.target.base.Target", false]], "taskexecutor (class in pyecsca.misc.utils)": [[52, "pyecsca.misc.utils.TaskExecutor", false]], "tasks (taskexecutor property)": [[52, "pyecsca.misc.utils.TaskExecutor.tasks", false]], "te2e() (in module pyecsca.ec.transformations)": [[48, "pyecsca.ec.transformations.TE2E", false]], "te2m() (in module pyecsca.ec.transformations)": [[48, "pyecsca.ec.transformations.TE2M", false]], "te2sw() (in module pyecsca.ec.transformations)": [[48, "pyecsca.ec.transformations.TE2SW", false]], "temporaryconfig (class in pyecsca.misc.cfg)": [[51, "pyecsca.misc.cfg.TemporaryConfig", false]], "threshold() (in module pyecsca.sca.trace.process)": [[91, "pyecsca.sca.trace.process.threshold", false]], "time_units (picoscopesdk attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.TIME_UNITS", false]], "time_units (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.TIME_UNITS", false]], "time_units (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.TIME_UNITS", false]], "time_units (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.TIME_UNITS", false]], "time_units (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.TIME_UNITS", false]], "time_units (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.TIME_UNITS", false]], "timebase (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.timebase", false]], "timebase (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.timebase", false]], "timebase (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.timebase", false]], "timebase (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.timebase", false]], "timebase (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.timebase", false]], "timeout (devicetarget attribute)": [[3, "pyecsca.codegen.client.DeviceTarget.timeout", false]], "timeout (hosttarget attribute)": [[3, "pyecsca.codegen.client.HostTarget.timeout", false]], "timeout (impltarget attribute)": [[3, "pyecsca.codegen.client.ImplTarget.timeout", false]], "title_space (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.title_space", false]], "to_affine() (domainparameters method)": [[44, "pyecsca.ec.params.DomainParameters.to_affine", false]], "to_affine() (ellipticcurve method)": [[11, "pyecsca.ec.curve.EllipticCurve.to_affine", false]], "to_affine() (fakepoint method)": [[19, "pyecsca.ec.formula.fake.FakePoint.to_affine", false]], "to_affine() (infinitypoint method)": [[45, "pyecsca.ec.point.InfinityPoint.to_affine", false]], "to_affine() (point method)": [[45, "pyecsca.ec.point.Point.to_affine", false]], "to_bytes() (appletbaseenum method)": [[78, "pyecsca.sca.target.ectester.AppletBaseEnum.to_bytes", false]], "to_bytes() (cardprotocol method)": [[73, "pyecsca.sca.target.ISO7816.CardProtocol.to_bytes", false]], "to_bytes() (curveenum method)": [[78, "pyecsca.sca.target.ectester.CurveEnum.to_bytes", false]], "to_bytes() (exportenum method)": [[78, "pyecsca.sca.target.ectester.ExportEnum.to_bytes", false]], "to_bytes() (formatenum method)": [[78, "pyecsca.sca.target.ectester.FormatEnum.to_bytes", false]], "to_bytes() (instructionenum method)": [[78, "pyecsca.sca.target.ectester.InstructionEnum.to_bytes", false]], "to_bytes() (keyagreementenum method)": [[78, "pyecsca.sca.target.ectester.KeyAgreementEnum.to_bytes", false]], "to_bytes() (keybuildenum method)": [[78, "pyecsca.sca.target.ectester.KeyBuildEnum.to_bytes", false]], "to_bytes() (keyclassenum method)": [[78, "pyecsca.sca.target.ectester.KeyClassEnum.to_bytes", false]], "to_bytes() (keyenum method)": [[78, "pyecsca.sca.target.ectester.KeyEnum.to_bytes", false]], "to_bytes() (keypairenum method)": [[78, "pyecsca.sca.target.ectester.KeypairEnum.to_bytes", false]], "to_bytes() (parameterenum method)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.to_bytes", false]], "to_bytes() (runmodeenum method)": [[78, "pyecsca.sca.target.ectester.RunModeEnum.to_bytes", false]], "to_bytes() (samplecoding method)": [[99, "pyecsca.sca.trace_set.inspector.SampleCoding.to_bytes", false]], "to_bytes() (signatureenum method)": [[78, "pyecsca.sca.target.ectester.SignatureEnum.to_bytes", false]], "to_bytes() (transformationenum method)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.to_bytes", false]], "to_bytes() (triggers method)": [[3, "pyecsca.codegen.client.Triggers.to_bytes", false]], "to_code() (additionefdformula method)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.to_code", false]], "to_code() (differentialadditionefdformula method)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.to_code", false]], "to_code() (doublingefdformula method)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.to_code", false]], "to_code() (efdformula method)": [[17, "pyecsca.ec.formula.efd.EFDFormula.to_code", false]], "to_code() (ladderefdformula method)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.to_code", false]], "to_code() (negationefdformula method)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.to_code", false]], "to_code() (scalingefdformula method)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.to_code", false]], "to_code() (triplingefdformula method)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.to_code", false]], "to_coords() (domainparameters method)": [[44, "pyecsca.ec.params.DomainParameters.to_coords", false]], "to_coords() (ellipticcurve method)": [[11, "pyecsca.ec.curve.EllipticCurve.to_coords", false]], "to_der() (signatureresult method)": [[47, "pyecsca.ec.signature.SignatureResult.to_DER", false]], "to_formula() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.to_formula", false]], "to_model() (fakepoint method)": [[19, "pyecsca.ec.formula.fake.FakePoint.to_model", false]], "to_model() (infinitypoint method)": [[45, "pyecsca.ec.point.InfinityPoint.to_model", false]], "to_model() (point method)": [[45, "pyecsca.ec.point.Point.to_model", false]], "to_weierstrass (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.to_weierstrass", false]], "to_weierstrass (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.to_weierstrass", false]], "to_weierstrass (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.to_weierstrass", false]], "to_weierstrass (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.to_weierstrass", false]], "to_weierstrass (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.to_weierstrass", false]], "toaffine (affinecoordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.AffineCoordinateModel.toaffine", false]], "toaffine (coordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.CoordinateModel.toaffine", false]], "token (temporaryconfig attribute)": [[51, "pyecsca.misc.cfg.TemporaryConfig.token", false]], "toom_cook (multiplication attribute)": [[8, "pyecsca.ec.configuration.Multiplication.TOOM_COOK", false]], "toom_cook (squaring attribute)": [[8, "pyecsca.ec.configuration.Squaring.TOOM_COOK", false]], "tosystem (affinecoordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.AffineCoordinateModel.tosystem", false]], "tosystem (coordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.CoordinateModel.tosystem", false]], "tpl (triggers attribute)": [[3, "pyecsca.codegen.client.Triggers.tpl", false]], "trace (class in pyecsca.sca.trace.trace)": [[94, "pyecsca.sca.trace.trace.Trace", false]], "trace (emulatortarget attribute)": [[3, "pyecsca.codegen.client.EmulatorTarget.trace", false]], "trace_offset (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.trace_offset", false]], "trace_set (combinedtrace property)": [[94, "pyecsca.sca.trace.trace.CombinedTrace.trace_set", false]], "trace_set (trace property)": [[94, "pyecsca.sca.trace.trace.Trace.trace_set", false]], "traces (cpa attribute)": [[55, "pyecsca.sca.attack.CPA.CPA.traces", false]], "traces (cputracemanager attribute)": [[70, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.traces", false]], "traces (dpa attribute)": [[56, "pyecsca.sca.attack.DPA.DPA.traces", false]], "traces_shape (gputracemanager property)": [[70, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.traces_shape", false]], "traceset (class in pyecsca.sca.trace_set.base)": [[96, "pyecsca.sca.trace_set.base.TraceSet", false]], "transform() (ectestertarget method)": [[78, "pyecsca.sca.target.ectester.ECTesterTarget.transform", false]], "transform() (ectestertargetleia method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.transform", false]], "transform() (ectestertargetpcsc method)": [[78, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.transform", false]], "transform() (in module pyecsca.sca.trace.process)": [[91, "pyecsca.sca.trace.process.transform", false]], "transform_trace() (emulatortarget method)": [[3, "pyecsca.codegen.client.EmulatorTarget.transform_trace", false]], "transformationenum (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.TransformationEnum", false]], "transformresponse (class in pyecsca.sca.target.ectester)": [[78, "pyecsca.sca.target.ectester.TransformResponse", false]], "tree (class in pyecsca.sca.re.tree)": [[62, "pyecsca.sca.re.tree.Tree", false]], "tree (re attribute)": [[59, "pyecsca.sca.re.base.RE.tree", false]], "tree (rpa attribute)": [[60, "pyecsca.sca.re.rpa.RPA.tree", false]], "trigger (devicetarget attribute)": [[3, "pyecsca.codegen.client.DeviceTarget.trigger", false]], "trigger (hosttarget attribute)": [[3, "pyecsca.codegen.client.HostTarget.trigger", false]], "trigger (impltarget attribute)": [[3, "pyecsca.codegen.client.ImplTarget.trigger", false]], "triggers (class in pyecsca.codegen.client)": [[3, "pyecsca.codegen.client.Triggers", false]], "triggers (picoscopesdk attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.TRIGGERS", false]], "triggers (ps3000ascope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.TRIGGERS", false]], "triggers (ps3000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.TRIGGERS", false]], "triggers (ps4000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.TRIGGERS", false]], "triggers (ps5000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.TRIGGERS", false]], "triggers (ps6000scope attribute)": [[68, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.TRIGGERS", false]], "trim() (in module pyecsca.sca.trace.edit)": [[87, "pyecsca.sca.trace.edit.trim", false]], "triplingefdformula (class in pyecsca.ec.formula.efd)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula", false]], "triplingformula (class in pyecsca.ec.formula.base)": [[15, "pyecsca.ec.formula.base.TriplingFormula", false]], "twistededwardsmodel (class in pyecsca.ec.model)": [[34, "pyecsca.ec.model.TwistedEdwardsModel", false]], "uncompressed (formatenum attribute)": [[78, "pyecsca.sca.target.ectester.FormatEnum.UNCOMPRESSED", false]], "undefined (class in pyecsca.ec.mod.base)": [[29, "pyecsca.ec.mod.base.Undefined", false]], "unified (additionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.AdditionEFDFormula.unified", false]], "unified (additionformula attribute)": [[15, "pyecsca.ec.formula.base.AdditionFormula.unified", false]], "unified (codeadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeAdditionFormula.unified", false]], "unified (codedifferentialadditionformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.unified", false]], "unified (codedoublingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeDoublingFormula.unified", false]], "unified (codeformula attribute)": [[16, "pyecsca.ec.formula.code.CodeFormula.unified", false]], "unified (codeladderformula attribute)": [[16, "pyecsca.ec.formula.code.CodeLadderFormula.unified", false]], "unified (codenegationformula attribute)": [[16, "pyecsca.ec.formula.code.CodeNegationFormula.unified", false]], "unified (codescalingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeScalingFormula.unified", false]], "unified (codetriplingformula attribute)": [[16, "pyecsca.ec.formula.code.CodeTriplingFormula.unified", false]], "unified (differentialadditionefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.unified", false]], "unified (differentialadditionformula attribute)": [[15, "pyecsca.ec.formula.base.DifferentialAdditionFormula.unified", false]], "unified (doublingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.DoublingEFDFormula.unified", false]], "unified (doublingformula attribute)": [[15, "pyecsca.ec.formula.base.DoublingFormula.unified", false]], "unified (efdformula attribute)": [[17, "pyecsca.ec.formula.efd.EFDFormula.unified", false]], "unified (fakeadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeAdditionFormula.unified", false]], "unified (fakedifferentialadditionformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.unified", false]], "unified (fakedoublingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeDoublingFormula.unified", false]], "unified (fakeformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeFormula.unified", false]], "unified (fakeladderformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeLadderFormula.unified", false]], "unified (fakenegationformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeNegationFormula.unified", false]], "unified (fakescalingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeScalingFormula.unified", false]], "unified (faketriplingformula attribute)": [[19, "pyecsca.ec.formula.fake.FakeTriplingFormula.unified", false]], "unified (formula attribute)": [[15, "pyecsca.ec.formula.base.Formula.unified", false]], "unified (ladderefdformula attribute)": [[17, "pyecsca.ec.formula.efd.LadderEFDFormula.unified", false]], "unified (ladderformula attribute)": [[15, "pyecsca.ec.formula.base.LadderFormula.unified", false]], "unified (negationefdformula attribute)": [[17, "pyecsca.ec.formula.efd.NegationEFDFormula.unified", false]], "unified (negationformula attribute)": [[15, "pyecsca.ec.formula.base.NegationFormula.unified", false]], "unified (scalingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.ScalingEFDFormula.unified", false]], "unified (scalingformula attribute)": [[15, "pyecsca.ec.formula.base.ScalingFormula.unified", false]], "unified (triplingefdformula attribute)": [[17, "pyecsca.ec.formula.efd.TriplingEFDFormula.unified", false]], "unified (triplingformula attribute)": [[15, "pyecsca.ec.formula.base.TriplingFormula.unified", false]], "unroll_formula() (in module pyecsca.ec.formula.unroll)": [[25, "pyecsca.ec.formula.unroll.unroll_formula", false]], "unroll_formula_expr() (in module pyecsca.ec.formula.unroll)": [[25, "pyecsca.ec.formula.unroll.unroll_formula_expr", false]], "unsatisfied_coordinate_assumption_action (ecconfig property)": [[51, "pyecsca.misc.cfg.ECConfig.unsatisfied_coordinate_assumption_action", false]], "unsatisfied_formula_assumption_action (ecconfig property)": [[51, "pyecsca.misc.cfg.ECConfig.unsatisfied_formula_assumption_action", false]], "unsatisfiedassumptionerror": [[13, "pyecsca.ec.error.UnsatisfiedAssumptionError", false]], "unsatisfiedassumptionwarning": [[13, "pyecsca.ec.error.UnsatisfiedAssumptionWarning", false]], "update() (formulagraph method)": [[21, "pyecsca.ec.formula.graph.FormulaGraph.update", false]], "update() (hdf5meta method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5Meta.update", false]], "value (opresult attribute)": [[15, "pyecsca.ec.formula.base.OpResult.value", false]], "value (pathcontext attribute)": [[9, "pyecsca.ec.context.PathContext.value", false]], "values() (enumdefine class method)": [[8, "pyecsca.ec.configuration.EnumDefine.values", false]], "values() (hashtype class method)": [[8, "pyecsca.ec.configuration.HashType.values", false]], "values() (hdf5meta method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5Meta.values", false]], "values() (inversion class method)": [[8, "pyecsca.ec.configuration.Inversion.values", false]], "values() (multiplication class method)": [[8, "pyecsca.ec.configuration.Multiplication.values", false]], "values() (platform class method)": [[4, "pyecsca.codegen.common.Platform.values", false]], "values() (randommod class method)": [[8, "pyecsca.ec.configuration.RandomMod.values", false]], "values() (reduction class method)": [[8, "pyecsca.ec.configuration.Reduction.values", false]], "values() (squaring class method)": [[8, "pyecsca.ec.configuration.Squaring.values", false]], "variables (affinecoordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.AffineCoordinateModel.variables", false]], "variables (codeop attribute)": [[43, "pyecsca.ec.op.CodeOp.variables", false]], "variables (coordinatemodel attribute)": [[10, "pyecsca.ec.coordinates.CoordinateModel.variables", false]], "variance() (basetracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.BaseTraceManager.variance", false]], "variance() (cputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.variance", false]], "variance() (gputracemanager method)": [[70, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.variance", false]], "variance() (in module pyecsca.sca.trace.combine)": [[86, "pyecsca.sca.trace.combine.variance", false]], "verify_chain() (addfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.AddFliparoo.verify_chain", false]], "verify_chain() (addsubfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.verify_chain", false]], "verify_chain() (fliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.Fliparoo.verify_chain", false]], "verify_chain() (mulfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.MulFliparoo.verify_chain", false]], "verify_data() (ecdsa_none method)": [[47, "pyecsca.ec.signature.ECDSA_NONE.verify_data", false]], "verify_data() (ecdsa_sha1 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA1.verify_data", false]], "verify_data() (ecdsa_sha224 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA224.verify_data", false]], "verify_data() (ecdsa_sha256 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA256.verify_data", false]], "verify_data() (ecdsa_sha384 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA384.verify_data", false]], "verify_data() (ecdsa_sha512 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA512.verify_data", false]], "verify_data() (signature method)": [[47, "pyecsca.ec.signature.Signature.verify_data", false]], "verify_hash() (ecdsa_none method)": [[47, "pyecsca.ec.signature.ECDSA_NONE.verify_hash", false]], "verify_hash() (ecdsa_sha1 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA1.verify_hash", false]], "verify_hash() (ecdsa_sha224 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA224.verify_hash", false]], "verify_hash() (ecdsa_sha256 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA256.verify_hash", false]], "verify_hash() (ecdsa_sha384 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA384.verify_hash", false]], "verify_hash() (ecdsa_sha512 method)": [[47, "pyecsca.ec.signature.ECDSA_SHA512.verify_hash", false]], "verify_hash() (signature method)": [[47, "pyecsca.ec.signature.Signature.verify_hash", false]], "volt (sampletype attribute)": [[65, "pyecsca.sca.scope.base.SampleType.Volt", false]], "w (parameterenum attribute)": [[78, "pyecsca.sca.target.ectester.ParameterEnum.W", false]], "walk() (node method)": [[9, "pyecsca.ec.context.Node.walk", false]], "warn() (in module pyecsca.misc.utils)": [[52, "pyecsca.misc.utils.warn", false]], "welch_ttest() (in module pyecsca.sca.trace.test)": [[93, "pyecsca.sca.trace.test.welch_ttest", false]], "width (bgmwmultiplier attribute)": [[38, "pyecsca.ec.mult.comb.BGMWMultiplier.width", false]], "width (combmultiplier attribute)": [[38, "pyecsca.ec.mult.comb.CombMultiplier.width", false]], "width (slidingwindowmultiplier attribute)": [[42, "pyecsca.ec.mult.window.SlidingWindowMultiplier.width", false]], "width (windowboothmultiplier attribute)": [[42, "pyecsca.ec.mult.window.WindowBoothMultiplier.width", false]], "width (windownafmultiplier attribute)": [[41, "pyecsca.ec.mult.naf.WindowNAFMultiplier.width", false]], "windowboothmultiplier (class in pyecsca.ec.mult.window)": [[42, "pyecsca.ec.mult.window.WindowBoothMultiplier", false]], "windownafmultiplier (class in pyecsca.ec.mult.naf)": [[41, "pyecsca.ec.mult.naf.WindowNAFMultiplier", false]], "with_samples() (combinedtrace method)": [[94, "pyecsca.sca.trace.trace.CombinedTrace.with_samples", false]], "with_samples() (trace method)": [[94, "pyecsca.sca.trace.trace.Trace.with_samples", false]], "with_traceback() (badfliparoo method)": [[20, "pyecsca.ec.formula.fliparoo.BadFliparoo.with_traceback", false]], "with_traceback() (cardconnectionexception method)": [[73, "pyecsca.sca.target.ISO7816.CardConnectionException.with_traceback", false]], "with_traceback() (chunkingexception method)": [[78, "pyecsca.sca.target.ectester.ChunkingException.with_traceback", false]], "with_traceback() (noninvertibleerror method)": [[13, "pyecsca.ec.error.NonInvertibleError.with_traceback", false]], "with_traceback() (noninvertiblewarning method)": [[13, "pyecsca.ec.error.NonInvertibleWarning.with_traceback", false]], "with_traceback() (nonresidueerror method)": [[13, "pyecsca.ec.error.NonResidueError.with_traceback", false]], "with_traceback() (nonresiduewarning method)": [[13, "pyecsca.ec.error.NonResidueWarning.with_traceback", false]], "with_traceback() (unsatisfiedassumptionerror method)": [[13, "pyecsca.ec.error.UnsatisfiedAssumptionError.with_traceback", false]], "with_traceback() (unsatisfiedassumptionwarning method)": [[13, "pyecsca.ec.error.UnsatisfiedAssumptionWarning.with_traceback", false]], "wnaf() (in module pyecsca.ec.scalar)": [[46, "pyecsca.ec.scalar.wnaf", false]], "write() (binarytarget method)": [[76, "pyecsca.sca.target.binary.BinaryTarget.write", false]], "write() (chipwhisperertarget method)": [[77, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.write", false]], "write() (chipwhisperertraceset method)": [[97, "pyecsca.sca.trace_set.chipwhisperer.ChipWhispererTraceSet.write", false]], "write() (devicetarget method)": [[3, "pyecsca.codegen.client.DeviceTarget.write", false]], "write() (hdf5traceset method)": [[98, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.write", false]], "write() (hosttarget method)": [[3, "pyecsca.codegen.client.HostTarget.write", false]], "write() (impltarget method)": [[3, "pyecsca.codegen.client.ImplTarget.write", false]], "write() (inspectortraceset method)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.write", false]], "write() (pickletraceset method)": [[100, "pyecsca.sca.trace_set.pickle.PickleTraceSet.write", false]], "write() (serialtarget method)": [[82, "pyecsca.sca.target.serial.SerialTarget.write", false]], "write() (simpleserialtarget method)": [[83, "pyecsca.sca.target.simpleserial.SimpleSerialTarget.write", false]], "write() (traceset method)": [[96, "pyecsca.sca.trace_set.base.TraceSet.write", false]], "write_bool() (parsers static method)": [[99, "pyecsca.sca.trace_set.inspector.Parsers.write_bool", false]], "write_float() (parsers static method)": [[99, "pyecsca.sca.trace_set.inspector.Parsers.write_float", false]], "write_int() (parsers static method)": [[99, "pyecsca.sca.trace_set.inspector.Parsers.write_int", false]], "write_str() (parsers static method)": [[99, "pyecsca.sca.trace_set.inspector.Parsers.write_str", false]], "x (flintmod attribute)": [[30, "pyecsca.ec.mod.flint.FlintMod.x", false]], "x (gmpmod attribute)": [[31, "pyecsca.ec.mod.gmp.GMPMod.x", false]], "x (mod attribute)": [[29, "pyecsca.ec.mod.base.Mod.x", false]], "x (rawmod attribute)": [[32, "pyecsca.ec.mod.raw.RawMod.x", false]], "x (symbolicmod attribute)": [[33, "pyecsca.ec.mod.symbolic.SymbolicMod.x", false]], "x (undefined attribute)": [[29, "pyecsca.ec.mod.base.Undefined.x", false]], "x_label (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.x_label", false]], "x_offset (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.x_offset", false]], "x_scale (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.x_scale", false]], "xmega (platform attribute)": [[4, "pyecsca.codegen.common.Platform.XMEGA", false]], "y_label (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.y_label", false]], "y_scale (inspectortraceset attribute)": [[99, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.y_scale", false]], "ysquared (curvemodel attribute)": [[34, "pyecsca.ec.model.CurveModel.ysquared", false]], "ysquared (edwardsmodel attribute)": [[34, "pyecsca.ec.model.EdwardsModel.ysquared", false]], "ysquared (montgomerymodel attribute)": [[34, "pyecsca.ec.model.MontgomeryModel.ysquared", false]], "ysquared (shortweierstrassmodel attribute)": [[34, "pyecsca.ec.model.ShortWeierstrassModel.ysquared", false]], "ysquared (twistededwardsmodel attribute)": [[34, "pyecsca.ec.model.TwistedEdwardsModel.ysquared", false]], "zero (transformationenum attribute)": [[78, "pyecsca.sca.target.ectester.TransformationEnum.ZERO", false]], "zeronoise (class in pyecsca.sca.attack.leakage_model)": [[57, "pyecsca.sca.attack.leakage_model.ZeroNoise", false]], "zvp_points() (in module pyecsca.sca.re.zvp)": [[63, "pyecsca.sca.re.zvp.zvp_points", false]]}, "objects": {"pyecsca": [[1, 0, 0, "-", "codegen"], [7, 0, 0, "-", "ec"], [49, 0, 0, "-", "misc"], [53, 0, 0, "-", "sca"]], "pyecsca.codegen": [[2, 0, 0, "-", "builder"], [3, 0, 0, "-", "client"], [4, 0, 0, "-", "common"], [5, 0, 0, "-", "render"], [6, 0, 0, "-", "templates"]], "pyecsca.codegen.client": [[3, 1, 1, "", "DeviceTarget"], [3, 1, 1, "", "EmulatorTarget"], [3, 1, 1, "", "HostTarget"], [3, 1, 1, "", "ImplTarget"], [3, 1, 1, "", "Triggers"], [3, 5, 1, "", "cmd_debug"], [3, 5, 1, "", "cmd_ecdh"], [3, 5, 1, "", "cmd_ecdsa_sign"], [3, 5, 1, "", "cmd_ecdsa_verify"], [3, 5, 1, "", "cmd_generate"], [3, 5, 1, "", "cmd_init_prng"], [3, 5, 1, "", "cmd_scalar_mult"], [3, 5, 1, "", "cmd_set_params"], [3, 5, 1, "", "cmd_set_privkey"], [3, 5, 1, "", "cmd_set_pubkey"], [3, 5, 1, "", "cmd_set_trigger"]], "pyecsca.codegen.client.DeviceTarget": [[3, 2, 1, "", "connect"], [3, 3, 1, "", "coords"], [3, 2, 1, "", "debug"], [3, 2, 1, "", "disconnect"], [3, 2, 1, "", "ecdh"], [3, 2, 1, "", "ecdsa_sign"], [3, 2, 1, "", "ecdsa_verify"], [3, 2, 1, "", "flash"], [3, 2, 1, "", "generate"], [3, 2, 1, "", "init_prng"], [3, 3, 1, "", "model"], [3, 3, 1, "", "params"], [3, 3, 1, "", "privkey"], [3, 3, 1, "", "pubkey"], [3, 2, 1, "", "quit"], [3, 2, 1, "", "read"], [3, 2, 1, "", "recv_msgs"], [3, 2, 1, "", "reset"], [3, 2, 1, "", "scalar_mult"], [3, 3, 1, "", "seed"], [3, 2, 1, "", "send_cmd"], [3, 2, 1, "", "set_params"], [3, 2, 1, "", "set_privkey"], [3, 2, 1, "", "set_pubkey"], [3, 2, 1, "", "set_trigger"], [3, 3, 1, "", "timeout"], [3, 3, 1, "", "trigger"], [3, 2, 1, "", "write"]], "pyecsca.codegen.client.DeviceTarget.flash.params": [[3, 4, 1, "", "fw_path"]], "pyecsca.codegen.client.DeviceTarget.read.params": [[3, 4, 1, "", "num"], [3, 4, 1, "", "timeout"]], "pyecsca.codegen.client.DeviceTarget.recv_msgs.params": [[3, 4, 1, "", "timeout"]], "pyecsca.codegen.client.DeviceTarget.send_cmd.params": [[3, 4, 1, "", "cmd"], [3, 4, 1, "", "timeout"]], "pyecsca.codegen.client.DeviceTarget.write.params": [[3, 4, 1, "", "data"]], "pyecsca.codegen.client.EmulatorTarget": [[3, 2, 1, "", "connect"], [3, 3, 1, "", "coords"], [3, 2, 1, "", "debug"], [3, 2, 1, "", "disconnect"], [3, 2, 1, "", "ecdh"], [3, 2, 1, "", "ecdsa_sign"], [3, 2, 1, "", "ecdsa_verify"], [3, 3, 1, "", "emulator"], [3, 2, 1, "", "generate"], [3, 2, 1, "", "init_prng"], [3, 3, 1, "", "model"], [3, 3, 1, "", "params"], [3, 3, 1, "", "privkey"], [3, 3, 1, "", "pubkey"], [3, 2, 1, "", "quit"], [3, 3, 1, "", "result"], [3, 2, 1, "", "scalar_mult"], [3, 3, 1, "", "seed"], [3, 2, 1, "", "set_params"], [3, 2, 1, "", "set_privkey"], [3, 2, 1, "", "set_pubkey"], [3, 2, 1, "", "set_trigger"], [3, 3, 1, "", "trace"], [3, 2, 1, "", "transform_trace"]], "pyecsca.codegen.client.HostTarget": [[3, 3, 1, "", "binary"], [3, 2, 1, "", "connect"], [3, 3, 1, "", "coords"], [3, 2, 1, "", "debug"], [3, 3, 1, "", "debug_output"], [3, 2, 1, "", "disconnect"], [3, 2, 1, "", "ecdh"], [3, 2, 1, "", "ecdsa_sign"], [3, 2, 1, "", "ecdsa_verify"], [3, 2, 1, "", "generate"], [3, 2, 1, "", "init_prng"], [3, 3, 1, "", "model"], [3, 3, 1, "", "params"], [3, 3, 1, "", "privkey"], [3, 3, 1, "", "process"], [3, 3, 1, "", "pubkey"], [3, 2, 1, "", "quit"], [3, 2, 1, "", "read"], [3, 2, 1, "", "recv_msgs"], [3, 2, 1, "", "scalar_mult"], [3, 3, 1, "", "seed"], [3, 2, 1, "", "send_cmd"], [3, 2, 1, "", "set_params"], [3, 2, 1, "", "set_privkey"], [3, 2, 1, "", "set_pubkey"], [3, 2, 1, "", "set_trigger"], [3, 3, 1, "", "timeout"], [3, 3, 1, "", "trigger"], [3, 2, 1, "", "write"]], "pyecsca.codegen.client.HostTarget.read.params": [[3, 4, 1, "", "num"], [3, 4, 1, "", "timeout"]], "pyecsca.codegen.client.HostTarget.recv_msgs.params": [[3, 4, 1, "", "timeout"]], "pyecsca.codegen.client.HostTarget.send_cmd.params": [[3, 4, 1, "", "cmd"], [3, 4, 1, "", "timeout"]], "pyecsca.codegen.client.HostTarget.write.params": [[3, 4, 1, "", "data"]], "pyecsca.codegen.client.ImplTarget": [[3, 2, 1, "", "connect"], [3, 3, 1, "", "coords"], [3, 2, 1, "", "debug"], [3, 2, 1, "", "disconnect"], [3, 2, 1, "", "ecdh"], [3, 2, 1, "", "ecdsa_sign"], [3, 2, 1, "", "ecdsa_verify"], [3, 2, 1, "", "generate"], [3, 2, 1, "", "init_prng"], [3, 3, 1, "", "model"], [3, 3, 1, "", "params"], [3, 3, 1, "", "privkey"], [3, 3, 1, "", "pubkey"], [3, 2, 1, "", "quit"], [3, 2, 1, "", "read"], [3, 2, 1, "", "recv_msgs"], [3, 2, 1, "", "scalar_mult"], [3, 3, 1, "", "seed"], [3, 2, 1, "", "send_cmd"], [3, 2, 1, "", "set_params"], [3, 2, 1, "", "set_privkey"], [3, 2, 1, "", "set_pubkey"], [3, 2, 1, "", "set_trigger"], [3, 3, 1, "", "timeout"], [3, 3, 1, "", "trigger"], [3, 2, 1, "", "write"]], "pyecsca.codegen.client.ImplTarget.read.params": [[3, 4, 1, "", "num"], [3, 4, 1, "", "timeout"]], "pyecsca.codegen.client.ImplTarget.recv_msgs.params": [[3, 4, 1, "", "timeout"]], "pyecsca.codegen.client.ImplTarget.send_cmd.params": [[3, 4, 1, "", "cmd"], [3, 4, 1, "", "timeout"]], "pyecsca.codegen.client.ImplTarget.write.params": [[3, 4, 1, "", "data"]], "pyecsca.codegen.client.Triggers": [[3, 3, 1, "", "add"], [3, 2, 1, "", "as_integer_ratio"], [3, 2, 1, "", "bit_count"], [3, 2, 1, "", "bit_length"], [3, 2, 1, "", "conjugate"], [3, 3, 1, "", "coord_map"], [3, 3, 1, "", "dadd"], [3, 3, 1, "", "dbl"], [3, 3, 1, "", "denominator"], [3, 3, 1, "", "ecdh"], [3, 3, 1, "", "ecdsa_sign"], [3, 3, 1, "", "ecdsa_verify"], [3, 2, 1, "", "from_bytes"], [3, 3, 1, "", "imag"], [3, 3, 1, "", "keygen"], [3, 3, 1, "", "ladd"], [3, 3, 1, "", "mult"], [3, 3, 1, "", "neg"], [3, 3, 1, "", "numerator"], [3, 3, 1, "", "random_mod"], [3, 3, 1, "", "real"], [3, 3, 1, "", "scl"], [3, 2, 1, "", "to_bytes"], [3, 3, 1, "", "tpl"]], "pyecsca.codegen.common": [[4, 1, 1, "", "DeviceConfiguration"], [4, 1, 1, "", "Platform"]], "pyecsca.codegen.common.DeviceConfiguration": [[4, 3, 1, "", "coords"], [4, 3, 1, "", "defines"], [4, 3, 1, "", "ecdh"], [4, 3, 1, "", "ecdsa"], [4, 3, 1, "", "formulas"], [4, 3, 1, "", "hash_type"], [4, 3, 1, "", "inv"], [4, 3, 1, "", "keygen"], [4, 3, 1, "", "mod_rand"], [4, 3, 1, "", "model"], [4, 3, 1, "", "mult"], [4, 3, 1, "", "platform"], [4, 3, 1, "", "red"], [4, 3, 1, "", "scalarmult"], [4, 3, 1, "", "sqr"]], "pyecsca.codegen.common.Platform": [[4, 3, 1, "", "HOST"], [4, 3, 1, "", "NANO"], [4, 3, 1, "", "STM32F0"], [4, 3, 1, "", "STM32F3"], [4, 3, 1, "", "XMEGA"], [4, 2, 1, "", "names"], [4, 2, 1, "", "values"]], "pyecsca.codegen.render": [[5, 5, 1, "", "build"], [5, 5, 1, "", "render"], [5, 5, 1, "", "render_and_build"]], "pyecsca.codegen.render.build.params": [[5, 4, 1, "", "dir"], [5, 4, 1, "", "elf_file"], [5, 4, 1, "", "hex_file"], [5, 4, 1, "", "outdir"], [5, 4, 1, "", "remove"], [5, 4, 1, "", "strip"]], "pyecsca.codegen.render.render.params": [[5, 4, 1, "", "config"]], "pyecsca.codegen.render.render_and_build.params": [[5, 4, 1, "", "config"], [5, 4, 1, "", "outdir"], [5, 4, 1, "", "remove"], [5, 4, 1, "", "strip"]], "pyecsca.ec": [[8, 0, 0, "-", "configuration"], [9, 0, 0, "-", "context"], [10, 0, 0, "-", "coordinates"], [11, 0, 0, "-", "curve"], [12, 0, 0, "-", "divpoly"], [13, 0, 0, "-", "error"], [14, 0, 0, "-", "formula"], [26, 0, 0, "-", "key_agreement"], [27, 0, 0, "-", "key_generation"], [28, 0, 0, "-", "mod"], [34, 0, 0, "-", "model"], [35, 0, 0, "-", "mult"], [43, 0, 0, "-", "op"], [44, 0, 0, "-", "params"], [45, 0, 0, "-", "point"], [46, 0, 0, "-", "scalar"], [47, 0, 0, "-", "signature"], [48, 0, 0, "-", "transformations"]], "pyecsca.ec.configuration": [[8, 1, 1, "", "Configuration"], [8, 1, 1, "", "EnumDefine"], [8, 1, 1, "", "HashType"], [8, 1, 1, "", "Inversion"], [8, 1, 1, "", "Multiplication"], [8, 1, 1, "", "RandomMod"], [8, 1, 1, "", "Reduction"], [8, 1, 1, "", "Squaring"], [8, 5, 1, "", "all_configurations"]], "pyecsca.ec.configuration.Configuration": [[8, 3, 1, "", "coords"], [8, 3, 1, "", "formulas"], [8, 3, 1, "", "hash_type"], [8, 3, 1, "", "inv"], [8, 3, 1, "", "mod_rand"], [8, 3, 1, "", "model"], [8, 3, 1, "", "mult"], [8, 3, 1, "", "red"], [8, 3, 1, "", "scalarmult"], [8, 3, 1, "", "sqr"]], "pyecsca.ec.configuration.EnumDefine": [[8, 2, 1, "", "names"], [8, 2, 1, "", "values"]], "pyecsca.ec.configuration.HashType": [[8, 3, 1, "", "NONE"], [8, 3, 1, "", "SHA1"], [8, 3, 1, "", "SHA224"], [8, 3, 1, "", "SHA256"], [8, 3, 1, "", "SHA384"], [8, 3, 1, "", "SHA512"], [8, 2, 1, "", "names"], [8, 2, 1, "", "values"]], "pyecsca.ec.configuration.Inversion": [[8, 3, 1, "", "EULER"], [8, 3, 1, "", "GCD"], [8, 2, 1, "", "names"], [8, 2, 1, "", "values"]], "pyecsca.ec.configuration.Multiplication": [[8, 3, 1, "", "BASE"], [8, 3, 1, "", "COMBA"], [8, 3, 1, "", "KARATSUBA"], [8, 3, 1, "", "TOOM_COOK"], [8, 2, 1, "", "names"], [8, 2, 1, "", "values"]], "pyecsca.ec.configuration.RandomMod": [[8, 3, 1, "", "REDUCE"], [8, 3, 1, "", "SAMPLE"], [8, 2, 1, "", "names"], [8, 2, 1, "", "values"]], "pyecsca.ec.configuration.Reduction": [[8, 3, 1, "", "BARRETT"], [8, 3, 1, "", "BASE"], [8, 3, 1, "", "MONTGOMERY"], [8, 2, 1, "", "names"], [8, 2, 1, "", "values"]], "pyecsca.ec.configuration.Squaring": [[8, 3, 1, "", "BASE"], [8, 3, 1, "", "COMBA"], [8, 3, 1, "", "KARATSUBA"], [8, 3, 1, "", "TOOM_COOK"], [8, 2, 1, "", "names"], [8, 2, 1, "", "values"]], "pyecsca.ec.configuration.all_configurations.params": [[8, 4, 1, "", "kwargs"]], "pyecsca.ec.context": [[9, 1, 1, "", "Action"], [9, 1, 1, "", "Context"], [9, 1, 1, "", "DefaultContext"], [9, 1, 1, "", "Node"], [9, 1, 1, "", "PathContext"], [9, 1, 1, "", "ResultAction"], [9, 5, 1, "", "local"]], "pyecsca.ec.context.Action": [[9, 3, 1, "", "inside"]], "pyecsca.ec.context.Context": [[9, 2, 1, "", "enter_action"], [9, 2, 1, "", "exit_action"]], "pyecsca.ec.context.Context.enter_action.params": [[9, 4, 1, "", "action"]], "pyecsca.ec.context.Context.exit_action.params": [[9, 4, 1, "", "action"]], "pyecsca.ec.context.DefaultContext": [[9, 3, 1, "", "actions"], [9, 3, 1, "", "current"], [9, 2, 1, "", "enter_action"], [9, 2, 1, "", "exit_action"]], "pyecsca.ec.context.DefaultContext.enter_action.params": [[9, 4, 1, "", "action"]], "pyecsca.ec.context.DefaultContext.exit_action.params": [[9, 4, 1, "", "action"]], "pyecsca.ec.context.Node": [[9, 3, 1, "", "action"], [9, 6, 1, "", "ancestors"], [9, 6, 1, "", "anchestors"], [9, 6, 1, "", "children"], [9, 6, 1, "", "depth"], [9, 6, 1, "", "descendants"], [9, 2, 1, "", "get_by_index"], [9, 2, 1, "", "get_by_key"], [9, 6, 1, "", "height"], [9, 6, 1, "", "is_leaf"], [9, 6, 1, "", "is_root"], [9, 2, 1, "", "iter_path_reverse"], [9, 6, 1, "", "leaves"], [9, 6, 1, "", "parent"], [9, 6, 1, "", "path"], [9, 2, 1, "", "render"], [9, 6, 1, "", "root"], [9, 3, 1, "", "separator"], [9, 6, 1, "", "siblings"], [9, 6, 1, "", "size"], [9, 2, 1, "", "walk"]], "pyecsca.ec.context.Node.get_by_index.params": [[9, 4, 1, "", "path"]], "pyecsca.ec.context.Node.get_by_key.params": [[9, 4, 1, "", "path"]], "pyecsca.ec.context.Node.walk.params": [[9, 4, 1, "", "callback"]], "pyecsca.ec.context.PathContext": [[9, 3, 1, "", "current"], [9, 3, 1, "", "current_depth"], [9, 2, 1, "", "enter_action"], [9, 2, 1, "", "exit_action"], [9, 3, 1, "", "path"], [9, 3, 1, "", "value"]], "pyecsca.ec.context.PathContext.enter_action.params": [[9, 4, 1, "", "action"]], "pyecsca.ec.context.PathContext.exit_action.params": [[9, 4, 1, "", "action"]], "pyecsca.ec.context.PathContext.params": [[9, 4, 1, "", "path"]], "pyecsca.ec.context.ResultAction": [[9, 2, 1, "", "exit"], [9, 3, 1, "", "inside"], [9, 6, 1, "", "result"]], "pyecsca.ec.context.local.params": [[9, 4, 1, "", "ctx"]], "pyecsca.ec.coordinates": [[10, 1, 1, "", "AffineCoordinateModel"], [10, 1, 1, "", "CoordinateModel"]], "pyecsca.ec.coordinates.AffineCoordinateModel": [[10, 3, 1, "", "assumptions"], [10, 3, 1, "", "curve_model"], [10, 3, 1, "", "formulas"], [10, 3, 1, "", "full_name"], [10, 3, 1, "", "homogweights"], [10, 3, 1, "", "name"], [10, 3, 1, "", "neutral"], [10, 3, 1, "", "parameters"], [10, 3, 1, "", "satisfying"], [10, 3, 1, "", "toaffine"], [10, 3, 1, "", "tosystem"], [10, 3, 1, "", "variables"]], "pyecsca.ec.coordinates.CoordinateModel": [[10, 3, 1, "", "assumptions"], [10, 3, 1, "", "curve_model"], [10, 3, 1, "", "formulas"], [10, 3, 1, "", "full_name"], [10, 3, 1, "", "homogweights"], [10, 3, 1, "", "name"], [10, 3, 1, "", "neutral"], [10, 3, 1, "", "parameters"], [10, 3, 1, "", "satisfying"], [10, 3, 1, "", "toaffine"], [10, 3, 1, "", "tosystem"], [10, 3, 1, "", "variables"]], "pyecsca.ec.curve": [[11, 1, 1, "", "EllipticCurve"]], "pyecsca.ec.curve.EllipticCurve": [[11, 2, 1, "", "affine_add"], [11, 2, 1, "", "affine_double"], [11, 2, 1, "", "affine_lift_x"], [11, 2, 1, "", "affine_multiply"], [11, 2, 1, "", "affine_negate"], [11, 6, 1, "", "affine_neutral"], [11, 2, 1, "", "affine_random"], [11, 3, 1, "", "coordinate_model"], [11, 2, 1, "", "decode_point"], [11, 2, 1, "", "is_neutral"], [11, 2, 1, "", "is_on_curve"], [11, 3, 1, "", "model"], [11, 3, 1, "", "neutral"], [11, 6, 1, "", "neutral_is_affine"], [11, 3, 1, "", "parameters"], [11, 3, 1, "", "prime"], [11, 2, 1, "", "to_affine"], [11, 2, 1, "", "to_coords"]], "pyecsca.ec.curve.EllipticCurve.affine_add.params": [[11, 4, 1, "", "one"], [11, 4, 1, "", "other"]], "pyecsca.ec.curve.EllipticCurve.affine_double.params": [[11, 4, 1, "", "one"]], "pyecsca.ec.curve.EllipticCurve.affine_lift_x.params": [[11, 4, 1, "", "x"]], "pyecsca.ec.curve.EllipticCurve.affine_multiply.params": [[11, 4, 1, "", "point"], [11, 4, 1, "", "scalar"]], "pyecsca.ec.curve.EllipticCurve.affine_negate.params": [[11, 4, 1, "", "one"]], "pyecsca.ec.curve.EllipticCurve.decode_point.params": [[11, 4, 1, "", "encoded"]], "pyecsca.ec.curve.EllipticCurve.is_neutral.params": [[11, 4, 1, "", "point"]], "pyecsca.ec.curve.EllipticCurve.is_on_curve.params": [[11, 4, 1, "", "point"]], "pyecsca.ec.curve.EllipticCurve.to_coords.params": [[11, 4, 1, "", "coordinate_model"]], "pyecsca.ec.divpoly": [[12, 5, 1, "", "a_invariants"], [12, 5, 1, "", "b_invariants"], [12, 5, 1, "", "divpoly"], [12, 5, 1, "", "mult_by_n"]], "pyecsca.ec.divpoly.a_invariants.params": [[12, 4, 1, "", "curve"]], "pyecsca.ec.divpoly.b_invariants.params": [[12, 4, 1, "", "curve"]], "pyecsca.ec.divpoly.divpoly.params": [[12, 4, 1, "", "curve"], [12, 4, 1, "", "n"], [12, 4, 1, "", "two_torsion_multiplicity"]], "pyecsca.ec.divpoly.mult_by_n.params": [[12, 4, 1, "", "curve"], [12, 4, 1, "", "n"], [12, 4, 1, "", "use_pari"], [12, 4, 1, "", "x_only"]], "pyecsca.ec.error": [[13, 7, 1, "", "NonInvertibleError"], [13, 7, 1, "", "NonInvertibleWarning"], [13, 7, 1, "", "NonResidueError"], [13, 7, 1, "", "NonResidueWarning"], [13, 7, 1, "", "UnsatisfiedAssumptionError"], [13, 7, 1, "", "UnsatisfiedAssumptionWarning"]], "pyecsca.ec.error.NonInvertibleError": [[13, 2, 1, "", "add_note"], [13, 3, 1, "", "args"], [13, 2, 1, "", "with_traceback"]], "pyecsca.ec.error.NonInvertibleWarning": [[13, 2, 1, "", "add_note"], [13, 3, 1, "", "args"], [13, 2, 1, "", "with_traceback"]], "pyecsca.ec.error.NonResidueError": [[13, 2, 1, "", "add_note"], [13, 3, 1, "", "args"], [13, 2, 1, "", "with_traceback"]], "pyecsca.ec.error.NonResidueWarning": [[13, 2, 1, "", "add_note"], [13, 3, 1, "", "args"], [13, 2, 1, "", "with_traceback"]], "pyecsca.ec.error.UnsatisfiedAssumptionError": [[13, 2, 1, "", "add_note"], [13, 3, 1, "", "args"], [13, 2, 1, "", "with_traceback"]], "pyecsca.ec.error.UnsatisfiedAssumptionWarning": [[13, 2, 1, "", "add_note"], [13, 3, 1, "", "args"], [13, 2, 1, "", "with_traceback"]], "pyecsca.ec.formula": [[15, 0, 0, "-", "base"], [16, 0, 0, "-", "code"], [17, 0, 0, "-", "efd"], [18, 0, 0, "-", "expand"], [19, 0, 0, "-", "fake"], [20, 0, 0, "-", "fliparoo"], [21, 0, 0, "-", "graph"], [22, 0, 0, "-", "metrics"], [23, 0, 0, "-", "partitions"], [24, 0, 0, "-", "switch_sign"], [25, 0, 0, "-", "unroll"]], "pyecsca.ec.formula.base": [[15, 1, 1, "", "AdditionFormula"], [15, 1, 1, "", "DifferentialAdditionFormula"], [15, 1, 1, "", "DoublingFormula"], [15, 1, 1, "", "Formula"], [15, 1, 1, "", "FormulaAction"], [15, 1, 1, "", "LadderFormula"], [15, 1, 1, "", "NegationFormula"], [15, 1, 1, "", "OpResult"], [15, 1, 1, "", "ScalingFormula"], [15, 1, 1, "", "TriplingFormula"]], "pyecsca.ec.formula.base.AdditionFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.DifferentialAdditionFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.DoublingFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.Formula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.FormulaAction": [[15, 2, 1, "", "add_operation"], [15, 2, 1, "", "add_result"], [15, 2, 1, "", "exit"], [15, 3, 1, "", "formula"], [15, 3, 1, "", "input_points"], [15, 3, 1, "", "inputs"], [15, 3, 1, "", "inside"], [15, 3, 1, "", "intermediates"], [15, 3, 1, "", "op_results"], [15, 3, 1, "", "output_points"], [15, 3, 1, "", "outputs"], [15, 6, 1, "", "result"]], "pyecsca.ec.formula.base.LadderFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.NegationFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.OpResult": [[15, 3, 1, "", "name"], [15, 3, 1, "", "op"], [15, 3, 1, "", "parents"], [15, 3, 1, "", "value"]], "pyecsca.ec.formula.base.ScalingFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.TriplingFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.code": [[16, 1, 1, "", "CodeAdditionFormula"], [16, 1, 1, "", "CodeDifferentialAdditionFormula"], [16, 1, 1, "", "CodeDoublingFormula"], [16, 1, 1, "", "CodeFormula"], [16, 1, 1, "", "CodeLadderFormula"], [16, 1, 1, "", "CodeNegationFormula"], [16, 1, 1, "", "CodeScalingFormula"], [16, 1, 1, "", "CodeTriplingFormula"]], "pyecsca.ec.formula.code.CodeAdditionFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeDoublingFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeLadderFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeNegationFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeScalingFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeTriplingFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd": [[17, 1, 1, "", "AdditionEFDFormula"], [17, 1, 1, "", "DifferentialAdditionEFDFormula"], [17, 1, 1, "", "DoublingEFDFormula"], [17, 1, 1, "", "EFDFormula"], [17, 1, 1, "", "LadderEFDFormula"], [17, 1, 1, "", "NegationEFDFormula"], [17, 1, 1, "", "ScalingEFDFormula"], [17, 1, 1, "", "TriplingEFDFormula"]], "pyecsca.ec.formula.efd.AdditionEFDFormula": [[17, 3, 1, "", "assumptions"], [17, 6, 1, "", "assumptions_str"], [17, 3, 1, "", "code"], [17, 3, 1, "", "coordinate_model"], [17, 6, 1, "", "input_index"], [17, 6, 1, "", "inputs"], [17, 3, 1, "", "meta"], [17, 3, 1, "", "name"], [17, 6, 1, "", "num_addsubs"], [17, 6, 1, "", "num_divisions"], [17, 3, 1, "", "num_inputs"], [17, 6, 1, "", "num_inversions"], [17, 6, 1, "", "num_multiplications"], [17, 6, 1, "", "num_operations"], [17, 3, 1, "", "num_outputs"], [17, 6, 1, "", "num_powers"], [17, 6, 1, "", "num_squarings"], [17, 6, 1, "", "output_index"], [17, 6, 1, "", "outputs"], [17, 3, 1, "", "parameters"], [17, 3, 1, "", "shortname"], [17, 2, 1, "", "to_code"], [17, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula": [[17, 3, 1, "", "assumptions"], [17, 6, 1, "", "assumptions_str"], [17, 3, 1, "", "code"], [17, 3, 1, "", "coordinate_model"], [17, 6, 1, "", "input_index"], [17, 6, 1, "", "inputs"], [17, 3, 1, "", "meta"], [17, 3, 1, "", "name"], [17, 6, 1, "", "num_addsubs"], [17, 6, 1, "", "num_divisions"], [17, 3, 1, "", "num_inputs"], [17, 6, 1, "", "num_inversions"], [17, 6, 1, "", "num_multiplications"], [17, 6, 1, "", "num_operations"], [17, 3, 1, "", "num_outputs"], [17, 6, 1, "", "num_powers"], [17, 6, 1, "", "num_squarings"], [17, 6, 1, "", "output_index"], [17, 6, 1, "", "outputs"], [17, 3, 1, "", "parameters"], [17, 3, 1, "", "shortname"], [17, 2, 1, "", "to_code"], [17, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd.DoublingEFDFormula": [[17, 3, 1, "", "assumptions"], [17, 6, 1, "", "assumptions_str"], [17, 3, 1, "", "code"], [17, 3, 1, "", "coordinate_model"], [17, 6, 1, "", "input_index"], [17, 6, 1, "", "inputs"], [17, 3, 1, "", "meta"], [17, 3, 1, "", "name"], [17, 6, 1, "", "num_addsubs"], [17, 6, 1, "", "num_divisions"], [17, 3, 1, "", "num_inputs"], [17, 6, 1, "", "num_inversions"], [17, 6, 1, "", "num_multiplications"], [17, 6, 1, "", "num_operations"], [17, 3, 1, "", "num_outputs"], [17, 6, 1, "", "num_powers"], [17, 6, 1, "", "num_squarings"], [17, 6, 1, "", "output_index"], [17, 6, 1, "", "outputs"], [17, 3, 1, "", "parameters"], [17, 3, 1, "", "shortname"], [17, 2, 1, "", "to_code"], [17, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd.EFDFormula": [[17, 3, 1, "", "assumptions"], [17, 6, 1, "", "assumptions_str"], [17, 3, 1, "", "code"], [17, 3, 1, "", "coordinate_model"], [17, 6, 1, "", "input_index"], [17, 6, 1, "", "inputs"], [17, 3, 1, "", "meta"], [17, 3, 1, "", "name"], [17, 6, 1, "", "num_addsubs"], [17, 6, 1, "", "num_divisions"], [17, 3, 1, "", "num_inputs"], [17, 6, 1, "", "num_inversions"], [17, 6, 1, "", "num_multiplications"], [17, 6, 1, "", "num_operations"], [17, 3, 1, "", "num_outputs"], [17, 6, 1, "", "num_powers"], [17, 6, 1, "", "num_squarings"], [17, 6, 1, "", "output_index"], [17, 6, 1, "", "outputs"], [17, 3, 1, "", "parameters"], [17, 3, 1, "", "shortname"], [17, 2, 1, "", "to_code"], [17, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd.LadderEFDFormula": [[17, 3, 1, "", "assumptions"], [17, 6, 1, "", "assumptions_str"], [17, 3, 1, "", "code"], [17, 3, 1, "", "coordinate_model"], [17, 6, 1, "", "input_index"], [17, 6, 1, "", "inputs"], [17, 3, 1, "", "meta"], [17, 3, 1, "", "name"], [17, 6, 1, "", "num_addsubs"], [17, 6, 1, "", "num_divisions"], [17, 3, 1, "", "num_inputs"], [17, 6, 1, "", "num_inversions"], [17, 6, 1, "", "num_multiplications"], [17, 6, 1, "", "num_operations"], [17, 3, 1, "", "num_outputs"], [17, 6, 1, "", "num_powers"], [17, 6, 1, "", "num_squarings"], [17, 6, 1, "", "output_index"], [17, 6, 1, "", "outputs"], [17, 3, 1, "", "parameters"], [17, 3, 1, "", "shortname"], [17, 2, 1, "", "to_code"], [17, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd.NegationEFDFormula": [[17, 3, 1, "", "assumptions"], [17, 6, 1, "", "assumptions_str"], [17, 3, 1, "", "code"], [17, 3, 1, "", "coordinate_model"], [17, 6, 1, "", "input_index"], [17, 6, 1, "", "inputs"], [17, 3, 1, "", "meta"], [17, 3, 1, "", "name"], [17, 6, 1, "", "num_addsubs"], [17, 6, 1, "", "num_divisions"], [17, 3, 1, "", "num_inputs"], [17, 6, 1, "", "num_inversions"], [17, 6, 1, "", "num_multiplications"], [17, 6, 1, "", "num_operations"], [17, 3, 1, "", "num_outputs"], [17, 6, 1, "", "num_powers"], [17, 6, 1, "", "num_squarings"], [17, 6, 1, "", "output_index"], [17, 6, 1, "", "outputs"], [17, 3, 1, "", "parameters"], [17, 3, 1, "", "shortname"], [17, 2, 1, "", "to_code"], [17, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd.ScalingEFDFormula": [[17, 3, 1, "", "assumptions"], [17, 6, 1, "", "assumptions_str"], [17, 3, 1, "", "code"], [17, 3, 1, "", "coordinate_model"], [17, 6, 1, "", "input_index"], [17, 6, 1, "", "inputs"], [17, 3, 1, "", "meta"], [17, 3, 1, "", "name"], [17, 6, 1, "", "num_addsubs"], [17, 6, 1, "", "num_divisions"], [17, 3, 1, "", "num_inputs"], [17, 6, 1, "", "num_inversions"], [17, 6, 1, "", "num_multiplications"], [17, 6, 1, "", "num_operations"], [17, 3, 1, "", "num_outputs"], [17, 6, 1, "", "num_powers"], [17, 6, 1, "", "num_squarings"], [17, 6, 1, "", "output_index"], [17, 6, 1, "", "outputs"], [17, 3, 1, "", "parameters"], [17, 3, 1, "", "shortname"], [17, 2, 1, "", "to_code"], [17, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd.TriplingEFDFormula": [[17, 3, 1, "", "assumptions"], [17, 6, 1, "", "assumptions_str"], [17, 3, 1, "", "code"], [17, 3, 1, "", "coordinate_model"], [17, 6, 1, "", "input_index"], [17, 6, 1, "", "inputs"], [17, 3, 1, "", "meta"], [17, 3, 1, "", "name"], [17, 6, 1, "", "num_addsubs"], [17, 6, 1, "", "num_divisions"], [17, 3, 1, "", "num_inputs"], [17, 6, 1, "", "num_inversions"], [17, 6, 1, "", "num_multiplications"], [17, 6, 1, "", "num_operations"], [17, 3, 1, "", "num_outputs"], [17, 6, 1, "", "num_powers"], [17, 6, 1, "", "num_squarings"], [17, 6, 1, "", "output_index"], [17, 6, 1, "", "outputs"], [17, 3, 1, "", "parameters"], [17, 3, 1, "", "shortname"], [17, 2, 1, "", "to_code"], [17, 3, 1, "", "unified"]], "pyecsca.ec.formula.expand": [[18, 5, 1, "", "expand_formula_set"]], "pyecsca.ec.formula.expand.expand_formula_set.params": [[18, 4, 1, "", "formulas"], [18, 4, 1, "", "norm"]], "pyecsca.ec.formula.fake": [[19, 1, 1, "", "FakeAdditionFormula"], [19, 1, 1, "", "FakeDifferentialAdditionFormula"], [19, 1, 1, "", "FakeDoublingFormula"], [19, 1, 1, "", "FakeFormula"], [19, 1, 1, "", "FakeLadderFormula"], [19, 1, 1, "", "FakeNegationFormula"], [19, 1, 1, "", "FakePoint"], [19, 1, 1, "", "FakeScalingFormula"], [19, 1, 1, "", "FakeTriplingFormula"]], "pyecsca.ec.formula.fake.FakeAdditionFormula": [[19, 3, 1, "", "assumptions"], [19, 6, 1, "", "assumptions_str"], [19, 3, 1, "", "code"], [19, 3, 1, "", "coordinate_model"], [19, 6, 1, "", "input_index"], [19, 6, 1, "", "inputs"], [19, 3, 1, "", "meta"], [19, 3, 1, "", "name"], [19, 6, 1, "", "num_addsubs"], [19, 6, 1, "", "num_divisions"], [19, 3, 1, "", "num_inputs"], [19, 6, 1, "", "num_inversions"], [19, 6, 1, "", "num_multiplications"], [19, 6, 1, "", "num_operations"], [19, 3, 1, "", "num_outputs"], [19, 6, 1, "", "num_powers"], [19, 6, 1, "", "num_squarings"], [19, 6, 1, "", "output_index"], [19, 6, 1, "", "outputs"], [19, 3, 1, "", "parameters"], [19, 3, 1, "", "shortname"], [19, 3, 1, "", "unified"]], "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula": [[19, 3, 1, "", "assumptions"], [19, 6, 1, "", "assumptions_str"], [19, 3, 1, "", "code"], [19, 3, 1, "", "coordinate_model"], [19, 6, 1, "", "input_index"], [19, 6, 1, "", "inputs"], [19, 3, 1, "", "meta"], [19, 3, 1, "", "name"], [19, 6, 1, "", "num_addsubs"], [19, 6, 1, "", "num_divisions"], [19, 3, 1, "", "num_inputs"], [19, 6, 1, "", "num_inversions"], [19, 6, 1, "", "num_multiplications"], [19, 6, 1, "", "num_operations"], [19, 3, 1, "", "num_outputs"], [19, 6, 1, "", "num_powers"], [19, 6, 1, "", "num_squarings"], [19, 6, 1, "", "output_index"], [19, 6, 1, "", "outputs"], [19, 3, 1, "", "parameters"], [19, 3, 1, "", "shortname"], [19, 3, 1, "", "unified"]], "pyecsca.ec.formula.fake.FakeDoublingFormula": [[19, 3, 1, "", "assumptions"], [19, 6, 1, "", "assumptions_str"], [19, 3, 1, "", "code"], [19, 3, 1, "", "coordinate_model"], [19, 6, 1, "", "input_index"], [19, 6, 1, "", "inputs"], [19, 3, 1, "", "meta"], [19, 3, 1, "", "name"], [19, 6, 1, "", "num_addsubs"], [19, 6, 1, "", "num_divisions"], [19, 3, 1, "", "num_inputs"], [19, 6, 1, "", "num_inversions"], [19, 6, 1, "", "num_multiplications"], [19, 6, 1, "", "num_operations"], [19, 3, 1, "", "num_outputs"], [19, 6, 1, "", "num_powers"], [19, 6, 1, "", "num_squarings"], [19, 6, 1, "", "output_index"], [19, 6, 1, "", "outputs"], [19, 3, 1, "", "parameters"], [19, 3, 1, "", "shortname"], [19, 3, 1, "", "unified"]], "pyecsca.ec.formula.fake.FakeFormula": [[19, 3, 1, "", "assumptions"], [19, 6, 1, "", "assumptions_str"], [19, 3, 1, "", "code"], [19, 3, 1, "", "coordinate_model"], [19, 6, 1, "", "input_index"], [19, 6, 1, "", "inputs"], [19, 3, 1, "", "meta"], [19, 3, 1, "", "name"], [19, 6, 1, "", "num_addsubs"], [19, 6, 1, "", "num_divisions"], [19, 3, 1, "", "num_inputs"], [19, 6, 1, "", "num_inversions"], [19, 6, 1, "", "num_multiplications"], [19, 6, 1, "", "num_operations"], [19, 3, 1, "", "num_outputs"], [19, 6, 1, "", "num_powers"], [19, 6, 1, "", "num_squarings"], [19, 6, 1, "", "output_index"], [19, 6, 1, "", "outputs"], [19, 3, 1, "", "parameters"], [19, 3, 1, "", "shortname"], [19, 3, 1, "", "unified"]], "pyecsca.ec.formula.fake.FakeLadderFormula": [[19, 3, 1, "", "assumptions"], [19, 6, 1, "", "assumptions_str"], [19, 3, 1, "", "code"], [19, 3, 1, "", "coordinate_model"], [19, 6, 1, "", "input_index"], [19, 6, 1, "", "inputs"], [19, 3, 1, "", "meta"], [19, 3, 1, "", "name"], [19, 6, 1, "", "num_addsubs"], [19, 6, 1, "", "num_divisions"], [19, 3, 1, "", "num_inputs"], [19, 6, 1, "", "num_inversions"], [19, 6, 1, "", "num_multiplications"], [19, 6, 1, "", "num_operations"], [19, 3, 1, "", "num_outputs"], [19, 6, 1, "", "num_powers"], [19, 6, 1, "", "num_squarings"], [19, 6, 1, "", "output_index"], [19, 6, 1, "", "outputs"], [19, 3, 1, "", "parameters"], [19, 3, 1, "", "shortname"], [19, 3, 1, "", "unified"]], "pyecsca.ec.formula.fake.FakeNegationFormula": [[19, 3, 1, "", "assumptions"], [19, 6, 1, "", "assumptions_str"], [19, 3, 1, "", "code"], [19, 3, 1, "", "coordinate_model"], [19, 6, 1, "", "input_index"], [19, 6, 1, "", "inputs"], [19, 3, 1, "", "meta"], [19, 3, 1, "", "name"], [19, 6, 1, "", "num_addsubs"], [19, 6, 1, "", "num_divisions"], [19, 3, 1, "", "num_inputs"], [19, 6, 1, "", "num_inversions"], [19, 6, 1, "", "num_multiplications"], [19, 6, 1, "", "num_operations"], [19, 3, 1, "", "num_outputs"], [19, 6, 1, "", "num_powers"], [19, 6, 1, "", "num_squarings"], [19, 6, 1, "", "output_index"], [19, 6, 1, "", "outputs"], [19, 3, 1, "", "parameters"], [19, 3, 1, "", "shortname"], [19, 3, 1, "", "unified"]], "pyecsca.ec.formula.fake.FakePoint": [[19, 3, 1, "", "coordinate_model"], [19, 3, 1, "", "coords"], [19, 2, 1, "", "equals"], [19, 2, 1, "", "equals_affine"], [19, 2, 1, "", "equals_scaled"], [19, 3, 1, "", "field"], [19, 2, 1, "", "to_affine"], [19, 2, 1, "", "to_model"]], "pyecsca.ec.formula.fake.FakePoint.equals_scaled.params": [[19, 4, 1, "", "other"]], "pyecsca.ec.formula.fake.FakeScalingFormula": [[19, 3, 1, "", "assumptions"], [19, 6, 1, "", "assumptions_str"], [19, 3, 1, "", "code"], [19, 3, 1, "", "coordinate_model"], [19, 6, 1, "", "input_index"], [19, 6, 1, "", "inputs"], [19, 3, 1, "", "meta"], [19, 3, 1, "", "name"], [19, 6, 1, "", "num_addsubs"], [19, 6, 1, "", "num_divisions"], [19, 3, 1, "", "num_inputs"], [19, 6, 1, "", "num_inversions"], [19, 6, 1, "", "num_multiplications"], [19, 6, 1, "", "num_operations"], [19, 3, 1, "", "num_outputs"], [19, 6, 1, "", "num_powers"], [19, 6, 1, "", "num_squarings"], [19, 6, 1, "", "output_index"], [19, 6, 1, "", "outputs"], [19, 3, 1, "", "parameters"], [19, 3, 1, "", "shortname"], [19, 3, 1, "", "unified"]], "pyecsca.ec.formula.fake.FakeTriplingFormula": [[19, 3, 1, "", "assumptions"], [19, 6, 1, "", "assumptions_str"], [19, 3, 1, "", "code"], [19, 3, 1, "", "coordinate_model"], [19, 6, 1, "", "input_index"], [19, 6, 1, "", "inputs"], [19, 3, 1, "", "meta"], [19, 3, 1, "", "name"], [19, 6, 1, "", "num_addsubs"], [19, 6, 1, "", "num_divisions"], [19, 3, 1, "", "num_inputs"], [19, 6, 1, "", "num_inversions"], [19, 6, 1, "", "num_multiplications"], [19, 6, 1, "", "num_operations"], [19, 3, 1, "", "num_outputs"], [19, 6, 1, "", "num_powers"], [19, 6, 1, "", "num_squarings"], [19, 6, 1, "", "output_index"], [19, 6, 1, "", "outputs"], [19, 3, 1, "", "parameters"], [19, 3, 1, "", "shortname"], [19, 3, 1, "", "unified"]], "pyecsca.ec.formula.fliparoo": [[20, 1, 1, "", "AddFliparoo"], [20, 1, 1, "", "AddSubFliparoo"], [20, 7, 1, "", "BadFliparoo"], [20, 1, 1, "", "Fliparoo"], [20, 1, 1, "", "MulFliparoo"], [20, 5, 1, "", "generate_fliparood_formulas"], [20, 5, 1, "", "recursive_fliparoo"]], "pyecsca.ec.formula.fliparoo.AddFliparoo": [[20, 2, 1, "", "deepcopy"], [20, 6, 1, "", "first"], [20, 3, 1, "", "graph"], [20, 2, 1, "", "input_nodes"], [20, 6, 1, "", "last"], [20, 3, 1, "", "nodes"], [20, 3, 1, "", "operator"], [20, 2, 1, "", "previous"], [20, 2, 1, "", "slice"], [20, 2, 1, "", "verify_chain"]], "pyecsca.ec.formula.fliparoo.AddSubFliparoo": [[20, 2, 1, "", "deepcopy"], [20, 6, 1, "", "first"], [20, 3, 1, "", "graph"], [20, 2, 1, "", "input_nodes"], [20, 6, 1, "", "last"], [20, 3, 1, "", "nodes"], [20, 3, 1, "", "operator"], [20, 2, 1, "", "previous"], [20, 2, 1, "", "slice"], [20, 2, 1, "", "verify_chain"]], "pyecsca.ec.formula.fliparoo.BadFliparoo": [[20, 2, 1, "", "add_note"], [20, 3, 1, "", "args"], [20, 2, 1, "", "with_traceback"]], "pyecsca.ec.formula.fliparoo.Fliparoo": [[20, 2, 1, "", "deepcopy"], [20, 6, 1, "", "first"], [20, 3, 1, "", "graph"], [20, 2, 1, "", "input_nodes"], [20, 6, 1, "", "last"], [20, 3, 1, "", "nodes"], [20, 3, 1, "", "operator"], [20, 2, 1, "", "previous"], [20, 2, 1, "", "slice"], [20, 2, 1, "", "verify_chain"]], "pyecsca.ec.formula.fliparoo.MulFliparoo": [[20, 2, 1, "", "deepcopy"], [20, 6, 1, "", "first"], [20, 3, 1, "", "graph"], [20, 2, 1, "", "input_nodes"], [20, 6, 1, "", "last"], [20, 3, 1, "", "nodes"], [20, 3, 1, "", "operator"], [20, 2, 1, "", "previous"], [20, 2, 1, "", "slice"], [20, 2, 1, "", "verify_chain"]], "pyecsca.ec.formula.graph": [[21, 1, 1, "", "ConstantNode"], [21, 1, 1, "", "FormulaGraph"], [21, 1, 1, "", "InputNode"], [21, 1, 1, "", "Node"]], "pyecsca.ec.formula.graph.ConstantNode": [[21, 3, 1, "", "color"], [21, 6, 1, "", "is_add"], [21, 6, 1, "", "is_div"], [21, 6, 1, "", "is_id"], [21, 6, 1, "", "is_inv"], [21, 6, 1, "", "is_mul"], [21, 6, 1, "", "is_neg"], [21, 6, 1, "", "is_pow"], [21, 6, 1, "", "is_sqr"], [21, 6, 1, "", "is_sub"], [21, 6, 1, "", "label"], [21, 2, 1, "", "reconnect_outgoing_nodes"], [21, 6, 1, "", "result"]], "pyecsca.ec.formula.graph.FormulaGraph": [[21, 2, 1, "", "add_node"], [21, 3, 1, "", "assumptions"], [21, 3, 1, "", "coordinate_model"], [21, 2, 1, "", "deepcopy"], [21, 2, 1, "", "draw"], [21, 2, 1, "", "find_all_paths"], [21, 3, 1, "", "input_nodes"], [21, 2, 1, "", "levels"], [21, 3, 1, "", "name"], [21, 2, 1, "", "networkx_graph"], [21, 2, 1, "", "node_index"], [21, 3, 1, "", "nodes"], [21, 3, 1, "", "output_names"], [21, 2, 1, "", "output_nodes"], [21, 3, 1, "", "parameters"], [21, 2, 1, "", "planar_positions"], [21, 2, 1, "", "print"], [21, 2, 1, "", "reindex"], [21, 2, 1, "", "remove_node"], [21, 2, 1, "", "reorder"], [21, 3, 1, "", "roots"], [21, 3, 1, "", "shortname"], [21, 2, 1, "", "to_formula"], [21, 2, 1, "", "update"]], "pyecsca.ec.formula.graph.InputNode": [[21, 3, 1, "", "color"], [21, 6, 1, "", "is_add"], [21, 6, 1, "", "is_div"], [21, 6, 1, "", "is_id"], [21, 6, 1, "", "is_inv"], [21, 6, 1, "", "is_mul"], [21, 6, 1, "", "is_neg"], [21, 6, 1, "", "is_pow"], [21, 6, 1, "", "is_sqr"], [21, 6, 1, "", "is_sub"], [21, 6, 1, "", "label"], [21, 2, 1, "", "reconnect_outgoing_nodes"], [21, 6, 1, "", "result"]], "pyecsca.ec.formula.graph.Node": [[21, 6, 1, "", "is_add"], [21, 6, 1, "", "is_div"], [21, 6, 1, "", "is_id"], [21, 6, 1, "", "is_inv"], [21, 6, 1, "", "is_mul"], [21, 6, 1, "", "is_neg"], [21, 6, 1, "", "is_pow"], [21, 6, 1, "", "is_sqr"], [21, 6, 1, "", "is_sub"], [21, 6, 1, "", "label"], [21, 2, 1, "", "reconnect_outgoing_nodes"], [21, 6, 1, "", "result"]], "pyecsca.ec.formula.metrics": [[22, 5, 1, "", "formula_ivs"], [22, 5, 1, "", "formula_similarity"], [22, 5, 1, "", "formula_similarity_abs"], [22, 5, 1, "", "formula_similarity_fuzz"], [22, 5, 1, "", "ivs_norm"]], "pyecsca.ec.formula.metrics.formula_similarity.params": [[22, 4, 1, "", "one"], [22, 4, 1, "", "other"]], "pyecsca.ec.formula.metrics.formula_similarity_abs.params": [[22, 4, 1, "", "one"], [22, 4, 1, "", "other"]], "pyecsca.ec.formula.metrics.formula_similarity_fuzz.params": [[22, 4, 1, "", "one"], [22, 4, 1, "", "other"]], "pyecsca.ec.formula.partitions": [[23, 5, 1, "", "expand_all_muls"], [23, 5, 1, "", "expand_all_nopower2_muls"], [23, 5, 1, "", "generate_partitioned_formulas"], [23, 5, 1, "", "reduce_all_adds"]], "pyecsca.ec.formula.switch_sign": [[24, 5, 1, "", "generate_switched_formulas"]], "pyecsca.ec.formula.unroll": [[25, 5, 1, "", "unroll_formula"], [25, 5, 1, "", "unroll_formula_expr"]], "pyecsca.ec.formula.unroll.unroll_formula.params": [[25, 4, 1, "", "formula"]], "pyecsca.ec.formula.unroll.unroll_formula_expr.params": [[25, 4, 1, "", "formula"]], "pyecsca.ec.key_agreement": [[26, 1, 1, "", "ECDHAction"], [26, 1, 1, "", "ECDH_NONE"], [26, 1, 1, "", "ECDH_SHA1"], [26, 1, 1, "", "ECDH_SHA224"], [26, 1, 1, "", "ECDH_SHA256"], [26, 1, 1, "", "ECDH_SHA384"], [26, 1, 1, "", "ECDH_SHA512"], [26, 1, 1, "", "KeyAgreement"]], "pyecsca.ec.key_agreement.ECDHAction": [[26, 2, 1, "", "exit"], [26, 3, 1, "", "hash_algo"], [26, 3, 1, "", "inside"], [26, 3, 1, "", "params"], [26, 3, 1, "", "privkey"], [26, 3, 1, "", "pubkey"], [26, 6, 1, "", "result"]], "pyecsca.ec.key_agreement.ECDH_NONE": [[26, 3, 1, "", "hash_algo"], [26, 3, 1, "", "mult"], [26, 3, 1, "", "params"], [26, 2, 1, "", "perform"], [26, 2, 1, "", "perform_raw"], [26, 3, 1, "", "privkey"], [26, 3, 1, "", "pubkey"]], "pyecsca.ec.key_agreement.ECDH_SHA1": [[26, 3, 1, "", "hash_algo"], [26, 3, 1, "", "mult"], [26, 3, 1, "", "params"], [26, 2, 1, "", "perform"], [26, 2, 1, "", "perform_raw"], [26, 3, 1, "", "privkey"], [26, 3, 1, "", "pubkey"]], "pyecsca.ec.key_agreement.ECDH_SHA224": [[26, 3, 1, "", "hash_algo"], [26, 3, 1, "", "mult"], [26, 3, 1, "", "params"], [26, 2, 1, "", "perform"], [26, 2, 1, "", "perform_raw"], [26, 3, 1, "", "privkey"], [26, 3, 1, "", "pubkey"]], "pyecsca.ec.key_agreement.ECDH_SHA256": [[26, 3, 1, "", "hash_algo"], [26, 3, 1, "", "mult"], [26, 3, 1, "", "params"], [26, 2, 1, "", "perform"], [26, 2, 1, "", "perform_raw"], [26, 3, 1, "", "privkey"], [26, 3, 1, "", "pubkey"]], "pyecsca.ec.key_agreement.ECDH_SHA384": [[26, 3, 1, "", "hash_algo"], [26, 3, 1, "", "mult"], [26, 3, 1, "", "params"], [26, 2, 1, "", "perform"], [26, 2, 1, "", "perform_raw"], [26, 3, 1, "", "privkey"], [26, 3, 1, "", "pubkey"]], "pyecsca.ec.key_agreement.ECDH_SHA512": [[26, 3, 1, "", "hash_algo"], [26, 3, 1, "", "mult"], [26, 3, 1, "", "params"], [26, 2, 1, "", "perform"], [26, 2, 1, "", "perform_raw"], [26, 3, 1, "", "privkey"], [26, 3, 1, "", "pubkey"]], "pyecsca.ec.key_agreement.KeyAgreement": [[26, 3, 1, "", "hash_algo"], [26, 3, 1, "", "mult"], [26, 3, 1, "", "params"], [26, 2, 1, "", "perform"], [26, 2, 1, "", "perform_raw"], [26, 3, 1, "", "privkey"], [26, 3, 1, "", "pubkey"]], "pyecsca.ec.key_generation": [[27, 1, 1, "", "KeyGeneration"], [27, 1, 1, "", "KeygenAction"]], "pyecsca.ec.key_generation.KeyGeneration": [[27, 3, 1, "", "affine"], [27, 2, 1, "", "generate"], [27, 3, 1, "", "mult"], [27, 3, 1, "", "params"]], "pyecsca.ec.key_generation.KeyGeneration.params": [[27, 4, 1, "", "affine"], [27, 4, 1, "", "mult"], [27, 4, 1, "", "params"]], "pyecsca.ec.key_generation.KeygenAction": [[27, 2, 1, "", "exit"], [27, 3, 1, "", "inside"], [27, 3, 1, "", "params"], [27, 6, 1, "", "result"]], "pyecsca.ec.mod": [[29, 0, 0, "-", "base"], [30, 0, 0, "-", "flint"], [31, 0, 0, "-", "gmp"], [32, 0, 0, "-", "raw"], [33, 0, 0, "-", "symbolic"]], "pyecsca.ec.mod.base": [[29, 1, 1, "", "Mod"], [29, 1, 1, "", "RandomModAction"], [29, 1, 1, "", "Undefined"], [29, 5, 1, "", "extgcd"], [29, 5, 1, "", "gcd"], [29, 5, 1, "", "jacobi"], [29, 5, 1, "", "miller_rabin"], [29, 5, 1, "", "mod"]], "pyecsca.ec.mod.base.Mod": [[29, 2, 1, "", "bit_length"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "is_residue"], [29, 3, 1, "", "n"], [29, 2, 1, "", "random"], [29, 2, 1, "", "sqrt"], [29, 3, 1, "", "x"]], "pyecsca.ec.mod.base.Mod.random.params": [[29, 4, 1, "", "n"]], "pyecsca.ec.mod.base.RandomModAction": [[29, 2, 1, "", "exit"], [29, 3, 1, "", "inside"], [29, 3, 1, "", "order"], [29, 6, 1, "", "result"]], "pyecsca.ec.mod.base.Undefined": [[29, 2, 1, "", "bit_length"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "is_residue"], [29, 3, 1, "", "n"], [29, 2, 1, "", "random"], [29, 2, 1, "", "sqrt"], [29, 3, 1, "", "x"]], "pyecsca.ec.mod.base.Undefined.random.params": [[29, 4, 1, "", "n"]], "pyecsca.ec.mod.base.mod.params": [[29, 4, 1, "", "n"], [29, 4, 1, "", "x"]], "pyecsca.ec.mod.flint": [[30, 1, 1, "", "FlintMod"]], "pyecsca.ec.mod.flint.FlintMod": [[30, 2, 1, "", "bit_length"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "is_residue"], [30, 6, 1, "", "n"], [30, 2, 1, "", "random"], [30, 2, 1, "", "sqrt"], [30, 3, 1, "", "x"]], "pyecsca.ec.mod.flint.FlintMod.random.params": [[30, 4, 1, "", "n"]], "pyecsca.ec.mod.gmp": [[31, 1, 1, "", "GMPMod"]], "pyecsca.ec.mod.gmp.GMPMod": [[31, 2, 1, "", "bit_length"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "is_residue"], [31, 3, 1, "", "n"], [31, 2, 1, "", "random"], [31, 2, 1, "", "sqrt"], [31, 3, 1, "", "x"]], "pyecsca.ec.mod.gmp.GMPMod.random.params": [[31, 4, 1, "", "n"]], "pyecsca.ec.mod.raw": [[32, 1, 1, "", "RawMod"]], "pyecsca.ec.mod.raw.RawMod": [[32, 2, 1, "", "bit_length"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "is_residue"], [32, 3, 1, "", "n"], [32, 2, 1, "", "random"], [32, 2, 1, "", "sqrt"], [32, 3, 1, "", "x"]], "pyecsca.ec.mod.raw.RawMod.random.params": [[32, 4, 1, "", "n"]], "pyecsca.ec.mod.symbolic": [[33, 1, 1, "", "SymbolicMod"]], "pyecsca.ec.mod.symbolic.SymbolicMod": [[33, 2, 1, "", "bit_length"], [33, 2, 1, "", "inverse"], [33, 2, 1, "", "is_residue"], [33, 3, 1, "", "n"], [33, 2, 1, "", "random"], [33, 2, 1, "", "sqrt"], [33, 3, 1, "", "x"]], "pyecsca.ec.mod.symbolic.SymbolicMod.random.params": [[33, 4, 1, "", "n"]], "pyecsca.ec.model": [[34, 1, 1, "", "CurveModel"], [34, 1, 1, "", "EdwardsModel"], [34, 1, 1, "", "MontgomeryModel"], [34, 1, 1, "", "ShortWeierstrassModel"], [34, 1, 1, "", "TwistedEdwardsModel"]], "pyecsca.ec.model.CurveModel": [[34, 3, 1, "", "base_addition"], [34, 3, 1, "", "base_doubling"], [34, 3, 1, "", "base_negation"], [34, 3, 1, "", "base_neutral"], [34, 3, 1, "", "coordinate_names"], [34, 3, 1, "", "coordinates"], [34, 3, 1, "", "equation"], [34, 3, 1, "", "from_weierstrass"], [34, 3, 1, "", "full_weierstrass"], [34, 3, 1, "", "name"], [34, 3, 1, "", "parameter_names"], [34, 3, 1, "", "shortname"], [34, 3, 1, "", "to_weierstrass"], [34, 3, 1, "", "ysquared"]], "pyecsca.ec.model.EdwardsModel": [[34, 3, 1, "", "base_addition"], [34, 3, 1, "", "base_doubling"], [34, 3, 1, "", "base_negation"], [34, 3, 1, "", "base_neutral"], [34, 3, 1, "", "coordinate_names"], [34, 3, 1, "", "coordinates"], [34, 3, 1, "", "equation"], [34, 3, 1, "", "from_weierstrass"], [34, 3, 1, "", "full_weierstrass"], [34, 3, 1, "", "name"], [34, 3, 1, "", "parameter_names"], [34, 3, 1, "", "shortname"], [34, 3, 1, "", "to_weierstrass"], [34, 3, 1, "", "ysquared"]], "pyecsca.ec.model.MontgomeryModel": [[34, 3, 1, "", "base_addition"], [34, 3, 1, "", "base_doubling"], [34, 3, 1, "", "base_negation"], [34, 3, 1, "", "base_neutral"], [34, 3, 1, "", "coordinate_names"], [34, 3, 1, "", "coordinates"], [34, 3, 1, "", "equation"], [34, 3, 1, "", "from_weierstrass"], [34, 3, 1, "", "full_weierstrass"], [34, 3, 1, "", "name"], [34, 3, 1, "", "parameter_names"], [34, 3, 1, "", "shortname"], [34, 3, 1, "", "to_weierstrass"], [34, 3, 1, "", "ysquared"]], "pyecsca.ec.model.ShortWeierstrassModel": [[34, 3, 1, "", "base_addition"], [34, 3, 1, "", "base_doubling"], [34, 3, 1, "", "base_negation"], [34, 3, 1, "", "base_neutral"], [34, 3, 1, "", "coordinate_names"], [34, 3, 1, "", "coordinates"], [34, 3, 1, "", "equation"], [34, 3, 1, "", "from_weierstrass"], [34, 3, 1, "", "full_weierstrass"], [34, 3, 1, "", "name"], [34, 3, 1, "", "parameter_names"], [34, 3, 1, "", "shortname"], [34, 3, 1, "", "to_weierstrass"], [34, 3, 1, "", "ysquared"]], "pyecsca.ec.model.TwistedEdwardsModel": [[34, 3, 1, "", "base_addition"], [34, 3, 1, "", "base_doubling"], [34, 3, 1, "", "base_negation"], [34, 3, 1, "", "base_neutral"], [34, 3, 1, "", "coordinate_names"], [34, 3, 1, "", "coordinates"], [34, 3, 1, "", "equation"], [34, 3, 1, "", "from_weierstrass"], [34, 3, 1, "", "full_weierstrass"], [34, 3, 1, "", "name"], [34, 3, 1, "", "parameter_names"], [34, 3, 1, "", "shortname"], [34, 3, 1, "", "to_weierstrass"], [34, 3, 1, "", "ysquared"]], "pyecsca.ec.mult": [[36, 0, 0, "-", "base"], [37, 0, 0, "-", "binary"], [38, 0, 0, "-", "comb"], [39, 0, 0, "-", "fixed"], [40, 0, 0, "-", "ladder"], [41, 0, 0, "-", "naf"], [42, 0, 0, "-", "window"]], "pyecsca.ec.mult.base": [[36, 1, 1, "", "AccumulationOrder"], [36, 1, 1, "", "AccumulatorMultiplier"], [36, 1, 1, "", "PrecomputationAction"], [36, 1, 1, "", "ProcessingDirection"], [36, 1, 1, "", "ScalarMultiplicationAction"], [36, 1, 1, "", "ScalarMultiplier"]], "pyecsca.ec.mult.base.AccumulationOrder": [[36, 3, 1, "", "PeqPR"], [36, 3, 1, "", "PeqRP"]], "pyecsca.ec.mult.base.AccumulatorMultiplier": [[36, 3, 1, "", "accumulation_order"], [36, 3, 1, "", "formulas"], [36, 2, 1, "", "init"], [36, 2, 1, "", "multiply"], [36, 3, 1, "", "optionals"], [36, 3, 1, "", "requires"], [36, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.base.AccumulatorMultiplier.init.params": [[36, 4, 1, "", "params"], [36, 4, 1, "", "point"]], "pyecsca.ec.mult.base.AccumulatorMultiplier.multiply.params": [[36, 4, 1, "", "scalar"]], "pyecsca.ec.mult.base.AccumulatorMultiplier.params": [[36, 4, 1, "", "accumulation_order"]], "pyecsca.ec.mult.base.PrecomputationAction": [[36, 3, 1, "", "inside"], [36, 3, 1, "", "params"], [36, 3, 1, "", "point"]], "pyecsca.ec.mult.base.ProcessingDirection": [[36, 3, 1, "", "LTR"], [36, 3, 1, "", "RTL"]], "pyecsca.ec.mult.base.ScalarMultiplicationAction": [[36, 2, 1, "", "exit"], [36, 3, 1, "", "inside"], [36, 3, 1, "", "point"], [36, 6, 1, "", "result"], [36, 3, 1, "", "scalar"]], "pyecsca.ec.mult.base.ScalarMultiplier": [[36, 3, 1, "", "formulas"], [36, 2, 1, "", "init"], [36, 2, 1, "", "multiply"], [36, 3, 1, "", "optionals"], [36, 3, 1, "", "requires"], [36, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.base.ScalarMultiplier.init.params": [[36, 4, 1, "", "params"], [36, 4, 1, "", "point"]], "pyecsca.ec.mult.base.ScalarMultiplier.multiply.params": [[36, 4, 1, "", "scalar"]], "pyecsca.ec.mult.base.ScalarMultiplier.params": [[36, 4, 1, "", "formulas"], [36, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary": [[37, 1, 1, "", "CoronMultiplier"], [37, 1, 1, "", "DoubleAndAddMultiplier"], [37, 1, 1, "", "LTRMultiplier"], [37, 1, 1, "", "RTLMultiplier"]], "pyecsca.ec.mult.binary.CoronMultiplier": [[37, 3, 1, "", "formulas"], [37, 2, 1, "", "init"], [37, 2, 1, "", "multiply"], [37, 3, 1, "", "optionals"], [37, 3, 1, "", "requires"], [37, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.CoronMultiplier.init.params": [[37, 4, 1, "", "params"], [37, 4, 1, "", "point"]], "pyecsca.ec.mult.binary.CoronMultiplier.multiply.params": [[37, 4, 1, "", "scalar"]], "pyecsca.ec.mult.binary.CoronMultiplier.params": [[37, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.DoubleAndAddMultiplier": [[37, 3, 1, "", "accumulation_order"], [37, 3, 1, "", "always"], [37, 3, 1, "", "complete"], [37, 3, 1, "", "direction"], [37, 3, 1, "", "formulas"], [37, 2, 1, "", "init"], [37, 2, 1, "", "multiply"], [37, 3, 1, "", "optionals"], [37, 3, 1, "", "requires"], [37, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.init.params": [[37, 4, 1, "", "params"], [37, 4, 1, "", "point"]], "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.multiply.params": [[37, 4, 1, "", "scalar"]], "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.params": [[37, 4, 1, "", "accumulation_order"], [37, 4, 1, "", "always"], [37, 4, 1, "", "complete"], [37, 4, 1, "", "direction"], [37, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.LTRMultiplier": [[37, 3, 1, "", "accumulation_order"], [37, 3, 1, "", "always"], [37, 3, 1, "", "complete"], [37, 3, 1, "", "direction"], [37, 3, 1, "", "formulas"], [37, 2, 1, "", "init"], [37, 2, 1, "", "multiply"], [37, 3, 1, "", "optionals"], [37, 3, 1, "", "requires"], [37, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.LTRMultiplier.init.params": [[37, 4, 1, "", "params"], [37, 4, 1, "", "point"]], "pyecsca.ec.mult.binary.LTRMultiplier.multiply.params": [[37, 4, 1, "", "scalar"]], "pyecsca.ec.mult.binary.LTRMultiplier.params": [[37, 4, 1, "", "accumulation_order"], [37, 4, 1, "", "always"], [37, 4, 1, "", "complete"], [37, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.RTLMultiplier": [[37, 3, 1, "", "accumulation_order"], [37, 3, 1, "", "always"], [37, 3, 1, "", "complete"], [37, 3, 1, "", "direction"], [37, 3, 1, "", "formulas"], [37, 2, 1, "", "init"], [37, 2, 1, "", "multiply"], [37, 3, 1, "", "optionals"], [37, 3, 1, "", "requires"], [37, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.RTLMultiplier.init.params": [[37, 4, 1, "", "params"], [37, 4, 1, "", "point"]], "pyecsca.ec.mult.binary.RTLMultiplier.multiply.params": [[37, 4, 1, "", "scalar"]], "pyecsca.ec.mult.binary.RTLMultiplier.params": [[37, 4, 1, "", "accumulation_order"], [37, 4, 1, "", "always"], [37, 4, 1, "", "complete"], [37, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.comb": [[38, 1, 1, "", "BGMWMultiplier"], [38, 1, 1, "", "CombMultiplier"]], "pyecsca.ec.mult.comb.BGMWMultiplier": [[38, 3, 1, "", "accumulation_order"], [38, 3, 1, "", "direction"], [38, 3, 1, "", "formulas"], [38, 2, 1, "", "init"], [38, 2, 1, "", "multiply"], [38, 3, 1, "", "optionals"], [38, 3, 1, "", "requires"], [38, 3, 1, "", "short_circuit"], [38, 3, 1, "", "width"]], "pyecsca.ec.mult.comb.BGMWMultiplier.init.params": [[38, 4, 1, "", "params"], [38, 4, 1, "", "point"]], "pyecsca.ec.mult.comb.BGMWMultiplier.multiply.params": [[38, 4, 1, "", "scalar"]], "pyecsca.ec.mult.comb.BGMWMultiplier.params": [[38, 4, 1, "", "accumulation_order"], [38, 4, 1, "", "direction"], [38, 4, 1, "", "width"]], "pyecsca.ec.mult.comb.CombMultiplier": [[38, 3, 1, "", "accumulation_order"], [38, 3, 1, "", "formulas"], [38, 2, 1, "", "init"], [38, 2, 1, "", "multiply"], [38, 3, 1, "", "optionals"], [38, 3, 1, "", "requires"], [38, 3, 1, "", "short_circuit"], [38, 3, 1, "", "width"]], "pyecsca.ec.mult.comb.CombMultiplier.init.params": [[38, 4, 1, "", "params"], [38, 4, 1, "", "point"]], "pyecsca.ec.mult.comb.CombMultiplier.multiply.params": [[38, 4, 1, "", "scalar"]], "pyecsca.ec.mult.comb.CombMultiplier.params": [[38, 4, 1, "", "accumulation_order"], [38, 4, 1, "", "width"]], "pyecsca.ec.mult.fixed": [[39, 1, 1, "", "FullPrecompMultiplier"]], "pyecsca.ec.mult.fixed.FullPrecompMultiplier": [[39, 3, 1, "", "accumulation_order"], [39, 3, 1, "", "always"], [39, 3, 1, "", "complete"], [39, 3, 1, "", "direction"], [39, 3, 1, "", "formulas"], [39, 2, 1, "", "init"], [39, 2, 1, "", "multiply"], [39, 3, 1, "", "optionals"], [39, 3, 1, "", "requires"], [39, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.fixed.FullPrecompMultiplier.init.params": [[39, 4, 1, "", "params"], [39, 4, 1, "", "point"]], "pyecsca.ec.mult.fixed.FullPrecompMultiplier.multiply.params": [[39, 4, 1, "", "scalar"]], "pyecsca.ec.mult.fixed.FullPrecompMultiplier.params": [[39, 4, 1, "", "accumulation_order"], [39, 4, 1, "", "always"], [39, 4, 1, "", "complete"], [39, 4, 1, "", "direction"]], "pyecsca.ec.mult.ladder": [[40, 1, 1, "", "DifferentialLadderMultiplier"], [40, 1, 1, "", "LadderMultiplier"], [40, 1, 1, "", "SimpleLadderMultiplier"]], "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier": [[40, 3, 1, "", "complete"], [40, 3, 1, "", "formulas"], [40, 2, 1, "", "init"], [40, 2, 1, "", "multiply"], [40, 3, 1, "", "optionals"], [40, 3, 1, "", "requires"], [40, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.init.params": [[40, 4, 1, "", "params"], [40, 4, 1, "", "point"]], "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.multiply.params": [[40, 4, 1, "", "scalar"]], "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.params": [[40, 4, 1, "", "complete"], [40, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.ladder.LadderMultiplier": [[40, 3, 1, "", "complete"], [40, 3, 1, "", "formulas"], [40, 2, 1, "", "init"], [40, 2, 1, "", "multiply"], [40, 3, 1, "", "optionals"], [40, 3, 1, "", "requires"], [40, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.ladder.LadderMultiplier.init.params": [[40, 4, 1, "", "params"], [40, 4, 1, "", "point"]], "pyecsca.ec.mult.ladder.LadderMultiplier.multiply.params": [[40, 4, 1, "", "scalar"]], "pyecsca.ec.mult.ladder.LadderMultiplier.params": [[40, 4, 1, "", "complete"], [40, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.ladder.SimpleLadderMultiplier": [[40, 3, 1, "", "complete"], [40, 3, 1, "", "formulas"], [40, 2, 1, "", "init"], [40, 2, 1, "", "multiply"], [40, 3, 1, "", "optionals"], [40, 3, 1, "", "requires"], [40, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.init.params": [[40, 4, 1, "", "params"], [40, 4, 1, "", "point"]], "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.multiply.params": [[40, 4, 1, "", "scalar"]], "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.params": [[40, 4, 1, "", "complete"], [40, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.naf": [[41, 1, 1, "", "BinaryNAFMultiplier"], [41, 1, 1, "", "WindowNAFMultiplier"]], "pyecsca.ec.mult.naf.BinaryNAFMultiplier": [[41, 3, 1, "", "accumulation_order"], [41, 3, 1, "", "direction"], [41, 3, 1, "", "formulas"], [41, 2, 1, "", "init"], [41, 2, 1, "", "multiply"], [41, 3, 1, "", "optionals"], [41, 3, 1, "", "requires"], [41, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.naf.BinaryNAFMultiplier.init.params": [[41, 4, 1, "", "params"], [41, 4, 1, "", "point"]], "pyecsca.ec.mult.naf.BinaryNAFMultiplier.multiply.params": [[41, 4, 1, "", "scalar"]], "pyecsca.ec.mult.naf.BinaryNAFMultiplier.params": [[41, 4, 1, "", "accumulation_order"], [41, 4, 1, "", "direction"], [41, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.naf.WindowNAFMultiplier": [[41, 3, 1, "", "accumulation_order"], [41, 3, 1, "", "formulas"], [41, 2, 1, "", "init"], [41, 2, 1, "", "multiply"], [41, 3, 1, "", "optionals"], [41, 3, 1, "", "precompute_negation"], [41, 3, 1, "", "requires"], [41, 3, 1, "", "short_circuit"], [41, 3, 1, "", "width"]], "pyecsca.ec.mult.naf.WindowNAFMultiplier.init.params": [[41, 4, 1, "", "params"], [41, 4, 1, "", "point"]], "pyecsca.ec.mult.naf.WindowNAFMultiplier.multiply.params": [[41, 4, 1, "", "scalar"]], "pyecsca.ec.mult.naf.WindowNAFMultiplier.params": [[41, 4, 1, "", "accumulation_order"], [41, 4, 1, "", "precompute_negation"], [41, 4, 1, "", "short_circuit"], [41, 4, 1, "", "width"]], "pyecsca.ec.mult.window": [[42, 1, 1, "", "FixedWindowLTRMultiplier"], [42, 1, 1, "", "SlidingWindowMultiplier"], [42, 1, 1, "", "WindowBoothMultiplier"]], "pyecsca.ec.mult.window.FixedWindowLTRMultiplier": [[42, 3, 1, "", "accumulation_order"], [42, 3, 1, "", "formulas"], [42, 2, 1, "", "init"], [42, 3, 1, "", "m"], [42, 2, 1, "", "multiply"], [42, 3, 1, "", "optionals"], [42, 3, 1, "", "requires"], [42, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.init.params": [[42, 4, 1, "", "params"], [42, 4, 1, "", "point"]], "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.multiply.params": [[42, 4, 1, "", "scalar"]], "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.params": [[42, 4, 1, "", "accumulation_order"], [42, 4, 1, "", "m"]], "pyecsca.ec.mult.window.SlidingWindowMultiplier": [[42, 3, 1, "", "accumulation_order"], [42, 3, 1, "", "formulas"], [42, 2, 1, "", "init"], [42, 2, 1, "", "multiply"], [42, 3, 1, "", "optionals"], [42, 3, 1, "", "recoding_direction"], [42, 3, 1, "", "requires"], [42, 3, 1, "", "short_circuit"], [42, 3, 1, "", "width"]], "pyecsca.ec.mult.window.SlidingWindowMultiplier.init.params": [[42, 4, 1, "", "params"], [42, 4, 1, "", "point"]], "pyecsca.ec.mult.window.SlidingWindowMultiplier.multiply.params": [[42, 4, 1, "", "scalar"]], "pyecsca.ec.mult.window.SlidingWindowMultiplier.params": [[42, 4, 1, "", "accumulation_order"], [42, 4, 1, "", "recoding_direction"], [42, 4, 1, "", "width"]], "pyecsca.ec.mult.window.WindowBoothMultiplier": [[42, 3, 1, "", "accumulation_order"], [42, 3, 1, "", "formulas"], [42, 2, 1, "", "init"], [42, 2, 1, "", "multiply"], [42, 3, 1, "", "optionals"], [42, 3, 1, "", "precompute_negation"], [42, 3, 1, "", "requires"], [42, 3, 1, "", "short_circuit"], [42, 3, 1, "", "width"]], "pyecsca.ec.mult.window.WindowBoothMultiplier.init.params": [[42, 4, 1, "", "params"], [42, 4, 1, "", "point"]], "pyecsca.ec.mult.window.WindowBoothMultiplier.multiply.params": [[42, 4, 1, "", "scalar"]], "pyecsca.ec.mult.window.WindowBoothMultiplier.params": [[42, 4, 1, "", "accumulation_order"], [42, 4, 1, "", "precompute_negation"], [42, 4, 1, "", "short_circuit"], [42, 4, 1, "", "width"]], "pyecsca.ec.op": [[43, 1, 1, "", "CodeOp"], [43, 1, 1, "", "OpType"]], "pyecsca.ec.op.CodeOp": [[43, 3, 1, "", "code"], [43, 3, 1, "", "compiled"], [43, 3, 1, "", "constants"], [43, 3, 1, "", "operator"], [43, 3, 1, "", "parameters"], [43, 6, 1, "", "parents"], [43, 3, 1, "", "result"], [43, 3, 1, "", "variables"]], "pyecsca.ec.op.OpType": [[43, 3, 1, "", "Add"], [43, 3, 1, "", "Div"], [43, 3, 1, "", "Id"], [43, 3, 1, "", "Inv"], [43, 3, 1, "", "Mult"], [43, 3, 1, "", "Neg"], [43, 3, 1, "", "Pow"], [43, 3, 1, "", "Sqr"], [43, 3, 1, "", "Sub"]], "pyecsca.ec.params": [[44, 1, 1, "", "DomainParameterCategory"], [44, 1, 1, "", "DomainParameters"], [44, 5, 1, "", "get_category"], [44, 5, 1, "", "get_params"], [44, 5, 1, "", "load_category"], [44, 5, 1, "", "load_params"], [44, 5, 1, "", "load_params_ecgen"], [44, 5, 1, "", "load_params_ectester"]], "pyecsca.ec.params.DomainParameterCategory": [[44, 3, 1, "", "curves"], [44, 3, 1, "", "description"], [44, 3, 1, "", "name"]], "pyecsca.ec.params.DomainParameters": [[44, 3, 1, "", "category"], [44, 3, 1, "", "cofactor"], [44, 3, 1, "", "curve"], [44, 3, 1, "", "generator"], [44, 3, 1, "", "name"], [44, 3, 1, "", "order"], [44, 2, 1, "", "to_affine"], [44, 2, 1, "", "to_coords"]], "pyecsca.ec.params.DomainParameters.to_coords.params": [[44, 4, 1, "", "coordinate_model"]], "pyecsca.ec.params.get_category.params": [[44, 4, 1, "", "category"], [44, 4, 1, "", "coords"], [44, 4, 1, "", "infty"]], "pyecsca.ec.params.get_params.params": [[44, 4, 1, "", "category"], [44, 4, 1, "", "coords"], [44, 4, 1, "", "infty"], [44, 4, 1, "", "name"]], "pyecsca.ec.params.load_category.params": [[44, 4, 1, "", "coords"], [44, 4, 1, "", "file"], [44, 4, 1, "", "infty"]], "pyecsca.ec.params.load_params.params": [[44, 4, 1, "", "coords"], [44, 4, 1, "", "file"], [44, 4, 1, "", "infty"]], "pyecsca.ec.params.load_params_ecgen.params": [[44, 4, 1, "", "coords"], [44, 4, 1, "", "file"], [44, 4, 1, "", "infty"]], "pyecsca.ec.params.load_params_ectester.params": [[44, 4, 1, "", "coords"], [44, 4, 1, "", "file"], [44, 4, 1, "", "infty"]], "pyecsca.ec.point": [[45, 1, 1, "", "CoordinateMappingAction"], [45, 1, 1, "", "InfinityPoint"], [45, 1, 1, "", "Point"]], "pyecsca.ec.point.CoordinateMappingAction": [[45, 2, 1, "", "exit"], [45, 3, 1, "", "inside"], [45, 3, 1, "", "model_from"], [45, 3, 1, "", "model_to"], [45, 3, 1, "", "point"], [45, 6, 1, "", "result"]], "pyecsca.ec.point.InfinityPoint": [[45, 3, 1, "", "coordinate_model"], [45, 3, 1, "", "coords"], [45, 2, 1, "", "equals"], [45, 2, 1, "", "equals_affine"], [45, 2, 1, "", "equals_scaled"], [45, 3, 1, "", "field"], [45, 2, 1, "", "to_affine"], [45, 2, 1, "", "to_model"]], "pyecsca.ec.point.InfinityPoint.equals_scaled.params": [[45, 4, 1, "", "other"]], "pyecsca.ec.point.Point": [[45, 3, 1, "", "coordinate_model"], [45, 3, 1, "", "coords"], [45, 2, 1, "", "equals"], [45, 2, 1, "", "equals_affine"], [45, 2, 1, "", "equals_scaled"], [45, 3, 1, "", "field"], [45, 2, 1, "", "to_affine"], [45, 2, 1, "", "to_model"]], "pyecsca.ec.point.Point.equals_scaled.params": [[45, 4, 1, "", "other"]], "pyecsca.ec.scalar": [[46, 5, 1, "", "booth"], [46, 5, 1, "", "booth_window"], [46, 5, 1, "", "booth_word"], [46, 5, 1, "", "convert_base"], [46, 5, 1, "", "naf"], [46, 5, 1, "", "sliding_window_ltr"], [46, 5, 1, "", "sliding_window_rtl"], [46, 5, 1, "", "wnaf"]], "pyecsca.ec.scalar.booth.params": [[46, 4, 1, "", "k"]], "pyecsca.ec.scalar.booth_window.params": [[46, 4, 1, "", "blen"], [46, 4, 1, "", "k"], [46, 4, 1, "", "w"]], "pyecsca.ec.scalar.booth_word.params": [[46, 4, 1, "", "digit"], [46, 4, 1, "", "w"]], "pyecsca.ec.scalar.convert_base.params": [[46, 4, 1, "", "base"], [46, 4, 1, "", "i"]], "pyecsca.ec.scalar.naf.params": [[46, 4, 1, "", "k"]], "pyecsca.ec.scalar.sliding_window_ltr.params": [[46, 4, 1, "", "i"], [46, 4, 1, "", "w"]], "pyecsca.ec.scalar.sliding_window_rtl.params": [[46, 4, 1, "", "i"], [46, 4, 1, "", "w"]], "pyecsca.ec.scalar.wnaf.params": [[46, 4, 1, "", "k"], [46, 4, 1, "", "w"]], "pyecsca.ec.signature": [[47, 1, 1, "", "ECDSAAction"], [47, 1, 1, "", "ECDSASignAction"], [47, 1, 1, "", "ECDSAVerifyAction"], [47, 1, 1, "", "ECDSA_NONE"], [47, 1, 1, "", "ECDSA_SHA1"], [47, 1, 1, "", "ECDSA_SHA224"], [47, 1, 1, "", "ECDSA_SHA256"], [47, 1, 1, "", "ECDSA_SHA384"], [47, 1, 1, "", "ECDSA_SHA512"], [47, 1, 1, "", "Signature"], [47, 1, 1, "", "SignatureResult"]], "pyecsca.ec.signature.ECDSAAction": [[47, 3, 1, "", "hash_algo"], [47, 3, 1, "", "inside"], [47, 3, 1, "", "msg"], [47, 3, 1, "", "params"]], "pyecsca.ec.signature.ECDSASignAction": [[47, 3, 1, "", "hash_algo"], [47, 3, 1, "", "inside"], [47, 3, 1, "", "msg"], [47, 3, 1, "", "params"], [47, 3, 1, "", "privkey"]], "pyecsca.ec.signature.ECDSAVerifyAction": [[47, 3, 1, "", "hash_algo"], [47, 3, 1, "", "inside"], [47, 3, 1, "", "msg"], [47, 3, 1, "", "params"], [47, 3, 1, "", "pubkey"], [47, 3, 1, "", "signature"]], "pyecsca.ec.signature.ECDSA_NONE": [[47, 3, 1, "", "add"], [47, 6, 1, "", "can_sign"], [47, 6, 1, "", "can_verify"], [47, 3, 1, "", "hash_algo"], [47, 3, 1, "", "mult"], [47, 3, 1, "", "params"], [47, 3, 1, "", "privkey"], [47, 3, 1, "", "pubkey"], [47, 2, 1, "", "sign_data"], [47, 2, 1, "", "sign_hash"], [47, 2, 1, "", "verify_data"], [47, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.ECDSA_SHA1": [[47, 3, 1, "", "add"], [47, 6, 1, "", "can_sign"], [47, 6, 1, "", "can_verify"], [47, 3, 1, "", "hash_algo"], [47, 3, 1, "", "mult"], [47, 3, 1, "", "params"], [47, 3, 1, "", "privkey"], [47, 3, 1, "", "pubkey"], [47, 2, 1, "", "sign_data"], [47, 2, 1, "", "sign_hash"], [47, 2, 1, "", "verify_data"], [47, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.ECDSA_SHA224": [[47, 3, 1, "", "add"], [47, 6, 1, "", "can_sign"], [47, 6, 1, "", "can_verify"], [47, 3, 1, "", "hash_algo"], [47, 3, 1, "", "mult"], [47, 3, 1, "", "params"], [47, 3, 1, "", "privkey"], [47, 3, 1, "", "pubkey"], [47, 2, 1, "", "sign_data"], [47, 2, 1, "", "sign_hash"], [47, 2, 1, "", "verify_data"], [47, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.ECDSA_SHA256": [[47, 3, 1, "", "add"], [47, 6, 1, "", "can_sign"], [47, 6, 1, "", "can_verify"], [47, 3, 1, "", "hash_algo"], [47, 3, 1, "", "mult"], [47, 3, 1, "", "params"], [47, 3, 1, "", "privkey"], [47, 3, 1, "", "pubkey"], [47, 2, 1, "", "sign_data"], [47, 2, 1, "", "sign_hash"], [47, 2, 1, "", "verify_data"], [47, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.ECDSA_SHA384": [[47, 3, 1, "", "add"], [47, 6, 1, "", "can_sign"], [47, 6, 1, "", "can_verify"], [47, 3, 1, "", "hash_algo"], [47, 3, 1, "", "mult"], [47, 3, 1, "", "params"], [47, 3, 1, "", "privkey"], [47, 3, 1, "", "pubkey"], [47, 2, 1, "", "sign_data"], [47, 2, 1, "", "sign_hash"], [47, 2, 1, "", "verify_data"], [47, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.ECDSA_SHA512": [[47, 3, 1, "", "add"], [47, 6, 1, "", "can_sign"], [47, 6, 1, "", "can_verify"], [47, 3, 1, "", "hash_algo"], [47, 3, 1, "", "mult"], [47, 3, 1, "", "params"], [47, 3, 1, "", "privkey"], [47, 3, 1, "", "pubkey"], [47, 2, 1, "", "sign_data"], [47, 2, 1, "", "sign_hash"], [47, 2, 1, "", "verify_data"], [47, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.Signature": [[47, 3, 1, "", "add"], [47, 6, 1, "", "can_sign"], [47, 6, 1, "", "can_verify"], [47, 3, 1, "", "hash_algo"], [47, 3, 1, "", "mult"], [47, 3, 1, "", "params"], [47, 3, 1, "", "privkey"], [47, 3, 1, "", "pubkey"], [47, 2, 1, "", "sign_data"], [47, 2, 1, "", "sign_hash"], [47, 2, 1, "", "verify_data"], [47, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.SignatureResult": [[47, 2, 1, "", "from_DER"], [47, 3, 1, "", "r"], [47, 3, 1, "", "s"], [47, 2, 1, "", "to_DER"]], "pyecsca.ec.transformations": [[48, 5, 1, "", "M2E"], [48, 5, 1, "", "M2SW"], [48, 5, 1, "", "M2TE"], [48, 5, 1, "", "SW2E"], [48, 5, 1, "", "SW2M"], [48, 5, 1, "", "SW2TE"], [48, 5, 1, "", "TE2E"], [48, 5, 1, "", "TE2M"], [48, 5, 1, "", "TE2SW"]], "pyecsca.ec.transformations.M2E.params": [[48, 4, 1, "", "params"]], "pyecsca.ec.transformations.M2SW.params": [[48, 4, 1, "", "params"]], "pyecsca.ec.transformations.M2TE.params": [[48, 4, 1, "", "params"]], "pyecsca.ec.transformations.SW2E.params": [[48, 4, 1, "", "params"]], "pyecsca.ec.transformations.SW2M.params": [[48, 4, 1, "", "params"]], "pyecsca.ec.transformations.SW2TE.params": [[48, 4, 1, "", "params"]], "pyecsca.ec.transformations.TE2E.params": [[48, 4, 1, "", "params"]], "pyecsca.ec.transformations.TE2M.params": [[48, 4, 1, "", "params"]], "pyecsca.ec.transformations.TE2SW.params": [[48, 4, 1, "", "params"]], "pyecsca.misc": [[50, 0, 0, "-", "cache"], [51, 0, 0, "-", "cfg"], [52, 0, 0, "-", "utils"]], "pyecsca.misc.cache": [[50, 5, 1, "", "simplify"], [50, 5, 1, "", "sympify"]], "pyecsca.misc.cfg": [[51, 1, 1, "", "Config"], [51, 1, 1, "", "ECConfig"], [51, 1, 1, "", "LoggingConfig"], [51, 1, 1, "", "TemporaryConfig"], [51, 5, 1, "", "getconfig"], [51, 5, 1, "", "resetconfig"], [51, 5, 1, "", "setconfig"]], "pyecsca.misc.cfg.Config": [[51, 3, 1, "", "ec"], [51, 3, 1, "", "log"]], "pyecsca.misc.cfg.ECConfig": [[51, 6, 1, "", "mod_implementation"], [51, 6, 1, "", "no_inverse_action"], [51, 6, 1, "", "non_residue_action"], [51, 6, 1, "", "unsatisfied_coordinate_assumption_action"], [51, 6, 1, "", "unsatisfied_formula_assumption_action"]], "pyecsca.misc.cfg.LoggingConfig": [[51, 3, 1, "", "enabled"]], "pyecsca.misc.cfg.TemporaryConfig": [[51, 3, 1, "", "token"]], "pyecsca.misc.cfg.resetconfig.params": [[51, 4, 1, "", "token"]], "pyecsca.misc.cfg.setconfig.params": [[51, 4, 1, "", "cfg"]], "pyecsca.misc.utils": [[52, 1, 1, "", "TaskExecutor"], [52, 5, 1, "", "in_notebook"], [52, 5, 1, "", "log"], [52, 5, 1, "", "peval"], [52, 5, 1, "", "pexec"], [52, 5, 1, "", "silent"], [52, 5, 1, "", "warn"]], "pyecsca.misc.utils.TaskExecutor": [[52, 2, 1, "", "as_completed"], [52, 3, 1, "", "futures"], [52, 3, 1, "", "keys"], [52, 2, 1, "", "map"], [52, 2, 1, "", "shutdown"], [52, 2, 1, "", "submit"], [52, 2, 1, "", "submit_task"], [52, 6, 1, "", "tasks"]], "pyecsca.sca": [[54, 0, 0, "-", "attack"], [58, 0, 0, "-", "re"], [64, 0, 0, "-", "scope"], [69, 0, 0, "-", "stacked_traces"], [72, 0, 0, "-", "target"], [84, 0, 0, "-", "trace"], [95, 0, 0, "-", "trace_set"]], "pyecsca.sca.attack": [[55, 0, 0, "-", "CPA"], [56, 0, 0, "-", "DPA"], [57, 0, 0, "-", "leakage_model"]], "pyecsca.sca.attack.CPA": [[55, 1, 1, "", "CPA"]], "pyecsca.sca.attack.CPA.CPA": [[55, 2, 1, "", "compute_correlation_trace"], [55, 2, 1, "", "compute_intermediate_value"], [55, 3, 1, "", "correlations"], [55, 3, 1, "", "leakage_model"], [55, 3, 1, "", "mult"], [55, 3, 1, "", "params"], [55, 2, 1, "", "perform"], [55, 2, 1, "", "plot_correlations"], [55, 3, 1, "", "points"], [55, 2, 1, "", "recover_bit"], [55, 3, 1, "", "traces"]], "pyecsca.sca.attack.CPA.CPA.params": [[55, 4, 1, "", "mult"], [55, 4, 1, "", "params"], [55, 4, 1, "", "points"], [55, 4, 1, "", "traces"]], "pyecsca.sca.attack.DPA": [[56, 1, 1, "", "DPA"]], "pyecsca.sca.attack.DPA.DPA": [[56, 2, 1, "", "calculate_difference_of_means"], [56, 2, 1, "", "compute_split_point"], [56, 3, 1, "", "doms"], [56, 3, 1, "", "mult"], [56, 3, 1, "", "params"], [56, 2, 1, "", "perform"], [56, 2, 1, "", "plot_difference_of_means"], [56, 3, 1, "", "points"], [56, 2, 1, "", "recover_bit"], [56, 2, 1, "", "split_traces"], [56, 3, 1, "", "traces"]], "pyecsca.sca.attack.DPA.DPA.params": [[56, 4, 1, "", "mult"], [56, 4, 1, "", "params"], [56, 4, 1, "", "points"], [56, 4, 1, "", "traces"]], "pyecsca.sca.attack.leakage_model": [[57, 1, 1, "", "Bit"], [57, 1, 1, "", "BitLength"], [57, 1, 1, "", "HammingDistance"], [57, 1, 1, "", "HammingWeight"], [57, 1, 1, "", "Identity"], [57, 1, 1, "", "LeakageModel"], [57, 1, 1, "", "Noise"], [57, 1, 1, "", "NormalNoice"], [57, 1, 1, "", "Slice"], [57, 1, 1, "", "ZeroNoise"]], "pyecsca.sca.attack.leakage_model.Bit": [[57, 3, 1, "", "num_args"]], "pyecsca.sca.attack.leakage_model.BitLength": [[57, 3, 1, "", "num_args"]], "pyecsca.sca.attack.leakage_model.HammingDistance": [[57, 3, 1, "", "num_args"]], "pyecsca.sca.attack.leakage_model.HammingWeight": [[57, 3, 1, "", "num_args"]], "pyecsca.sca.attack.leakage_model.Identity": [[57, 3, 1, "", "num_args"]], "pyecsca.sca.attack.leakage_model.LeakageModel": [[57, 3, 1, "", "num_args"]], "pyecsca.sca.attack.leakage_model.Slice": [[57, 3, 1, "", "num_args"]], "pyecsca.sca.re": [[59, 0, 0, "-", "base"], [60, 0, 0, "-", "rpa"], [61, 0, 0, "-", "structural"], [62, 0, 0, "-", "tree"], [63, 0, 0, "-", "zvp"]], "pyecsca.sca.re.base": [[59, 1, 1, "", "RE"]], "pyecsca.sca.re.base.RE": [[59, 2, 1, "", "build_tree"], [59, 3, 1, "", "configs"], [59, 2, 1, "", "run"], [59, 3, 1, "", "tree"]], "pyecsca.sca.re.rpa": [[60, 1, 1, "", "MultipleContext"], [60, 1, 1, "", "RPA"], [60, 5, 1, "", "rpa_distinguish"], [60, 5, 1, "", "rpa_input_point"], [60, 5, 1, "", "rpa_point_0y"], [60, 5, 1, "", "rpa_point_x0"]], "pyecsca.sca.re.rpa.MultipleContext": [[60, 3, 1, "", "base"], [60, 2, 1, "", "enter_action"], [60, 2, 1, "", "exit_action"], [60, 3, 1, "", "formulas"], [60, 3, 1, "", "inside"], [60, 3, 1, "", "parents"], [60, 3, 1, "", "points"]], "pyecsca.sca.re.rpa.MultipleContext.enter_action.params": [[60, 4, 1, "", "action"]], "pyecsca.sca.re.rpa.MultipleContext.exit_action.params": [[60, 4, 1, "", "action"]], "pyecsca.sca.re.rpa.RPA": [[60, 3, 1, "", "P0"], [60, 2, 1, "", "build_tree"], [60, 3, 1, "", "configs"], [60, 3, 1, "", "params"], [60, 2, 1, "", "run"], [60, 3, 1, "", "scalars"], [60, 3, 1, "", "tree"]], "pyecsca.sca.re.rpa.RPA.build_tree.params": [[60, 4, 1, "", "bound"], [60, 4, 1, "", "params"], [60, 4, 1, "", "tries"], [60, 4, 1, "", "use_init"], [60, 4, 1, "", "use_multiply"]], "pyecsca.sca.re.rpa.RPA.run.params": [[60, 4, 1, "", "majority"], [60, 4, 1, "", "oracle"]], "pyecsca.sca.re.rpa.rpa_distinguish.params": [[60, 4, 1, "", "bound"], [60, 4, 1, "", "majority"], [60, 4, 1, "", "multipliers"], [60, 4, 1, "", "oracle"], [60, 4, 1, "", "params"], [60, 4, 1, "", "tries"], [60, 4, 1, "", "use_init"], [60, 4, 1, "", "use_multiply"]], "pyecsca.sca.re.tree": [[62, 1, 1, "", "Map"], [62, 1, 1, "", "Node"], [62, 1, 1, "", "Tree"]], "pyecsca.sca.re.tree.Map": [[62, 3, 1, "", "cfg_map"], [62, 6, 1, "", "cfgs"], [62, 3, 1, "", "codomain"], [62, 2, 1, "", "deduplicate"], [62, 2, 1, "", "describe"], [62, 3, 1, "", "domain"], [62, 2, 1, "", "from_io_maps"], [62, 2, 1, "", "from_sets"], [62, 3, 1, "", "mapping"], [62, 2, 1, "", "merge"]], "pyecsca.sca.re.tree.Node": [[62, 6, 1, "", "ancestors"], [62, 6, 1, "", "anchestors"], [62, 3, 1, "", "cfgs"], [62, 6, 1, "", "children"], [62, 6, 1, "", "depth"], [62, 6, 1, "", "descendants"], [62, 3, 1, "", "dmap_index"], [62, 3, 1, "", "dmap_input"], [62, 6, 1, "", "height"], [62, 6, 1, "", "is_leaf"], [62, 6, 1, "", "is_root"], [62, 2, 1, "", "iter_path_reverse"], [62, 6, 1, "", "leaves"], [62, 6, 1, "", "parent"], [62, 6, 1, "", "path"], [62, 3, 1, "", "response"], [62, 6, 1, "", "root"], [62, 3, 1, "", "separator"], [62, 6, 1, "", "siblings"], [62, 6, 1, "", "size"]], "pyecsca.sca.re.tree.Tree": [[62, 2, 1, "", "build"], [62, 2, 1, "", "describe"], [62, 2, 1, "", "expand"], [62, 6, 1, "", "height"], [62, 6, 1, "", "leaves"], [62, 3, 1, "", "maps"], [62, 6, 1, "", "precise"], [62, 2, 1, "", "render"], [62, 2, 1, "", "render_basic"], [62, 3, 1, "", "root"], [62, 6, 1, "", "size"]], "pyecsca.sca.re.zvp": [[63, 5, 1, "", "compute_factor_set"], [63, 5, 1, "", "map_to_affine"], [63, 5, 1, "", "zvp_points"]], "pyecsca.sca.re.zvp.compute_factor_set.params": [[63, 4, 1, "", "affine"], [63, 4, 1, "", "filter_nonhomo"], [63, 4, 1, "", "formula"], [63, 4, 1, "", "xonly"]], "pyecsca.sca.re.zvp.map_to_affine.params": [[63, 4, 1, "", "formula"], [63, 4, 1, "", "polys"]], "pyecsca.sca.re.zvp.zvp_points.params": [[63, 4, 1, "", "curve"], [63, 4, 1, "", "k"], [63, 4, 1, "", "n"], [63, 4, 1, "", "poly"]], "pyecsca.sca.scope": [[65, 0, 0, "-", "base"], [66, 0, 0, "-", "chipwhisperer"], [67, 0, 0, "-", "picoscope_alt"], [68, 0, 0, "-", "picoscope_sdk"]], "pyecsca.sca.scope.base": [[65, 1, 1, "", "SampleType"], [65, 1, 1, "", "Scope"]], "pyecsca.sca.scope.base.SampleType": [[65, 3, 1, "", "Raw"], [65, 3, 1, "", "Volt"]], "pyecsca.sca.scope.base.Scope": [[65, 2, 1, "", "arm"], [65, 2, 1, "", "capture"], [65, 6, 1, "", "channels"], [65, 2, 1, "", "close"], [65, 2, 1, "", "open"], [65, 2, 1, "", "retrieve"], [65, 2, 1, "", "setup_capture"], [65, 2, 1, "", "setup_channel"], [65, 2, 1, "", "setup_frequency"], [65, 2, 1, "", "setup_trigger"], [65, 2, 1, "", "stop"]], "pyecsca.sca.scope.base.Scope.capture.params": [[65, 4, 1, "", "timeout"]], "pyecsca.sca.scope.base.Scope.retrieve.params": [[65, 4, 1, "", "channel"], [65, 4, 1, "", "dtype"], [65, 4, 1, "", "type"]], "pyecsca.sca.scope.base.Scope.setup_capture.params": [[65, 4, 1, "", "channel"], [65, 4, 1, "", "enable"]], "pyecsca.sca.scope.base.Scope.setup_channel.params": [[65, 4, 1, "", "channel"], [65, 4, 1, "", "coupling"], [65, 4, 1, "", "enable"], [65, 4, 1, "", "offset"], [65, 4, 1, "", "range"]], "pyecsca.sca.scope.base.Scope.setup_frequency.params": [[65, 4, 1, "", "frequency"], [65, 4, 1, "", "posttrig"], [65, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.base.Scope.setup_trigger.params": [[65, 4, 1, "", "channel"], [65, 4, 1, "", "delay"], [65, 4, 1, "", "direction"], [65, 4, 1, "", "enable"], [65, 4, 1, "", "threshold"], [65, 4, 1, "", "timeout"]], "pyecsca.sca.scope.chipwhisperer": [[66, 1, 1, "", "ChipWhispererScope"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope": [[66, 2, 1, "", "arm"], [66, 2, 1, "", "capture"], [66, 6, 1, "", "channels"], [66, 2, 1, "", "close"], [66, 2, 1, "", "open"], [66, 2, 1, "", "retrieve"], [66, 2, 1, "", "setup_capture"], [66, 2, 1, "", "setup_channel"], [66, 2, 1, "", "setup_frequency"], [66, 2, 1, "", "setup_trigger"], [66, 2, 1, "", "stop"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.capture.params": [[66, 4, 1, "", "timeout"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.retrieve.params": [[66, 4, 1, "", "channel"], [66, 4, 1, "", "dtype"], [66, 4, 1, "", "type"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_capture.params": [[66, 4, 1, "", "channel"], [66, 4, 1, "", "enable"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_channel.params": [[66, 4, 1, "", "channel"], [66, 4, 1, "", "coupling"], [66, 4, 1, "", "enable"], [66, 4, 1, "", "offset"], [66, 4, 1, "", "range"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_frequency.params": [[66, 4, 1, "", "frequency"], [66, 4, 1, "", "posttrig"], [66, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_trigger.params": [[66, 4, 1, "", "channel"], [66, 4, 1, "", "delay"], [66, 4, 1, "", "direction"], [66, 4, 1, "", "enable"], [66, 4, 1, "", "threshold"], [66, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_alt": [[67, 1, 1, "", "PicoScopeAlt"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt": [[67, 2, 1, "", "arm"], [67, 2, 1, "", "capture"], [67, 6, 1, "", "channels"], [67, 2, 1, "", "close"], [67, 2, 1, "", "open"], [67, 2, 1, "", "retrieve"], [67, 2, 1, "", "setup_capture"], [67, 2, 1, "", "setup_channel"], [67, 2, 1, "", "setup_frequency"], [67, 2, 1, "", "setup_trigger"], [67, 2, 1, "", "stop"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.capture.params": [[67, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.params": [[67, 4, 1, "", "ps"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.retrieve.params": [[67, 4, 1, "", "channel"], [67, 4, 1, "", "dtype"], [67, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_capture.params": [[67, 4, 1, "", "channel"], [67, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_channel.params": [[67, 4, 1, "", "channel"], [67, 4, 1, "", "coupling"], [67, 4, 1, "", "enable"], [67, 4, 1, "", "offset"], [67, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_frequency.params": [[67, 4, 1, "", "frequency"], [67, 4, 1, "", "posttrig"], [67, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_trigger.params": [[67, 4, 1, "", "channel"], [67, 4, 1, "", "delay"], [67, 4, 1, "", "direction"], [67, 4, 1, "", "enable"], [67, 4, 1, "", "threshold"], [67, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk": [[68, 1, 1, "", "PS3000Scope"], [68, 1, 1, "", "PS3000aScope"], [68, 1, 1, "", "PS4000Scope"], [68, 1, 1, "", "PS5000Scope"], [68, 1, 1, "", "PS6000Scope"], [68, 1, 1, "", "PicoScopeSdk"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope": [[68, 3, 1, "", "CHANNELS"], [68, 3, 1, "", "COUPLING"], [68, 3, 1, "", "MAX_ADC_VALUE"], [68, 3, 1, "", "MIN_ADC_VALUE"], [68, 3, 1, "", "MODULE"], [68, 3, 1, "", "PREFIX"], [68, 3, 1, "", "RANGES"], [68, 3, 1, "", "TIME_UNITS"], [68, 3, 1, "", "TRIGGERS"], [68, 2, 1, "", "arm"], [68, 3, 1, "", "buffers"], [68, 2, 1, "", "capture"], [68, 6, 1, "", "channels"], [68, 2, 1, "", "close"], [68, 3, 1, "", "frequency"], [68, 2, 1, "", "get_variant"], [68, 3, 1, "", "handle"], [68, 2, 1, "", "open"], [68, 3, 1, "", "posttrig"], [68, 3, 1, "", "pretrig"], [68, 3, 1, "", "ranges"], [68, 2, 1, "", "retrieve"], [68, 3, 1, "", "samples"], [68, 2, 1, "", "set_buffer"], [68, 2, 1, "", "set_channel"], [68, 2, 1, "", "set_frequency"], [68, 2, 1, "", "set_trigger"], [68, 2, 1, "", "setup_capture"], [68, 2, 1, "", "setup_channel"], [68, 2, 1, "", "setup_frequency"], [68, 2, 1, "", "setup_trigger"], [68, 2, 1, "", "stop"], [68, 3, 1, "", "timebase"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.capture.params": [[68, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.retrieve.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "dtype"], [68, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_capture.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_channel.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "coupling"], [68, 4, 1, "", "enable"], [68, 4, 1, "", "offset"], [68, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_frequency.params": [[68, 4, 1, "", "frequency"], [68, 4, 1, "", "posttrig"], [68, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_trigger.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "delay"], [68, 4, 1, "", "direction"], [68, 4, 1, "", "enable"], [68, 4, 1, "", "threshold"], [68, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope": [[68, 3, 1, "", "CHANNELS"], [68, 3, 1, "", "COUPLING"], [68, 3, 1, "", "MAX_ADC_VALUE"], [68, 3, 1, "", "MIN_ADC_VALUE"], [68, 3, 1, "", "MODULE"], [68, 3, 1, "", "PREFIX"], [68, 3, 1, "", "RANGES"], [68, 3, 1, "", "TIME_UNITS"], [68, 3, 1, "", "TRIGGERS"], [68, 2, 1, "", "arm"], [68, 3, 1, "", "buffers"], [68, 2, 1, "", "capture"], [68, 6, 1, "", "channels"], [68, 2, 1, "", "close"], [68, 3, 1, "", "frequency"], [68, 2, 1, "", "get_variant"], [68, 3, 1, "", "handle"], [68, 2, 1, "", "open"], [68, 3, 1, "", "posttrig"], [68, 3, 1, "", "pretrig"], [68, 3, 1, "", "ranges"], [68, 2, 1, "", "retrieve"], [68, 3, 1, "", "samples"], [68, 2, 1, "", "set_buffer"], [68, 2, 1, "", "set_channel"], [68, 2, 1, "", "set_frequency"], [68, 2, 1, "", "set_trigger"], [68, 2, 1, "", "setup_capture"], [68, 2, 1, "", "setup_channel"], [68, 2, 1, "", "setup_frequency"], [68, 2, 1, "", "setup_trigger"], [68, 2, 1, "", "stop"], [68, 3, 1, "", "timebase"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.capture.params": [[68, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.retrieve.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "dtype"], [68, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_capture.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_channel.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "coupling"], [68, 4, 1, "", "enable"], [68, 4, 1, "", "offset"], [68, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_frequency.params": [[68, 4, 1, "", "frequency"], [68, 4, 1, "", "posttrig"], [68, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_trigger.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "delay"], [68, 4, 1, "", "direction"], [68, 4, 1, "", "enable"], [68, 4, 1, "", "threshold"], [68, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope": [[68, 3, 1, "", "CHANNELS"], [68, 3, 1, "", "COUPLING"], [68, 3, 1, "", "MAX_ADC_VALUE"], [68, 3, 1, "", "MIN_ADC_VALUE"], [68, 3, 1, "", "MODULE"], [68, 3, 1, "", "PREFIX"], [68, 3, 1, "", "RANGES"], [68, 3, 1, "", "TIME_UNITS"], [68, 3, 1, "", "TRIGGERS"], [68, 2, 1, "", "arm"], [68, 3, 1, "", "buffers"], [68, 2, 1, "", "capture"], [68, 6, 1, "", "channels"], [68, 2, 1, "", "close"], [68, 3, 1, "", "frequency"], [68, 2, 1, "", "get_variant"], [68, 3, 1, "", "handle"], [68, 2, 1, "", "open"], [68, 3, 1, "", "posttrig"], [68, 3, 1, "", "pretrig"], [68, 3, 1, "", "ranges"], [68, 2, 1, "", "retrieve"], [68, 3, 1, "", "samples"], [68, 2, 1, "", "set_buffer"], [68, 2, 1, "", "set_channel"], [68, 2, 1, "", "set_frequency"], [68, 2, 1, "", "set_trigger"], [68, 2, 1, "", "setup_capture"], [68, 2, 1, "", "setup_channel"], [68, 2, 1, "", "setup_frequency"], [68, 2, 1, "", "setup_trigger"], [68, 2, 1, "", "stop"], [68, 3, 1, "", "timebase"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.capture.params": [[68, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.retrieve.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "dtype"], [68, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_capture.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_channel.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "coupling"], [68, 4, 1, "", "enable"], [68, 4, 1, "", "offset"], [68, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_frequency.params": [[68, 4, 1, "", "frequency"], [68, 4, 1, "", "posttrig"], [68, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_trigger.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "delay"], [68, 4, 1, "", "direction"], [68, 4, 1, "", "enable"], [68, 4, 1, "", "threshold"], [68, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope": [[68, 3, 1, "", "CHANNELS"], [68, 3, 1, "", "COUPLING"], [68, 3, 1, "", "MAX_ADC_VALUE"], [68, 3, 1, "", "MIN_ADC_VALUE"], [68, 3, 1, "", "MODULE"], [68, 3, 1, "", "PREFIX"], [68, 3, 1, "", "RANGES"], [68, 3, 1, "", "TIME_UNITS"], [68, 3, 1, "", "TRIGGERS"], [68, 2, 1, "", "arm"], [68, 3, 1, "", "buffers"], [68, 2, 1, "", "capture"], [68, 6, 1, "", "channels"], [68, 2, 1, "", "close"], [68, 3, 1, "", "frequency"], [68, 2, 1, "", "get_variant"], [68, 3, 1, "", "handle"], [68, 2, 1, "", "open"], [68, 3, 1, "", "posttrig"], [68, 3, 1, "", "pretrig"], [68, 3, 1, "", "ranges"], [68, 2, 1, "", "retrieve"], [68, 3, 1, "", "samples"], [68, 2, 1, "", "set_buffer"], [68, 2, 1, "", "set_channel"], [68, 2, 1, "", "set_frequency"], [68, 2, 1, "", "set_trigger"], [68, 2, 1, "", "setup_capture"], [68, 2, 1, "", "setup_channel"], [68, 2, 1, "", "setup_frequency"], [68, 2, 1, "", "setup_trigger"], [68, 2, 1, "", "stop"], [68, 3, 1, "", "timebase"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.capture.params": [[68, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.retrieve.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "dtype"], [68, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_capture.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_channel.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "coupling"], [68, 4, 1, "", "enable"], [68, 4, 1, "", "offset"], [68, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_frequency.params": [[68, 4, 1, "", "frequency"], [68, 4, 1, "", "posttrig"], [68, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_trigger.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "delay"], [68, 4, 1, "", "direction"], [68, 4, 1, "", "enable"], [68, 4, 1, "", "threshold"], [68, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope": [[68, 3, 1, "", "CHANNELS"], [68, 3, 1, "", "COUPLING"], [68, 3, 1, "", "MAX_ADC_VALUE"], [68, 3, 1, "", "MIN_ADC_VALUE"], [68, 3, 1, "", "MODULE"], [68, 3, 1, "", "PREFIX"], [68, 3, 1, "", "RANGES"], [68, 3, 1, "", "TIME_UNITS"], [68, 3, 1, "", "TRIGGERS"], [68, 2, 1, "", "arm"], [68, 3, 1, "", "buffers"], [68, 2, 1, "", "capture"], [68, 6, 1, "", "channels"], [68, 2, 1, "", "close"], [68, 3, 1, "", "frequency"], [68, 2, 1, "", "get_variant"], [68, 3, 1, "", "handle"], [68, 2, 1, "", "open"], [68, 3, 1, "", "posttrig"], [68, 3, 1, "", "pretrig"], [68, 3, 1, "", "ranges"], [68, 2, 1, "", "retrieve"], [68, 3, 1, "", "samples"], [68, 2, 1, "", "set_buffer"], [68, 2, 1, "", "set_channel"], [68, 2, 1, "", "set_frequency"], [68, 2, 1, "", "set_trigger"], [68, 2, 1, "", "setup_capture"], [68, 2, 1, "", "setup_channel"], [68, 2, 1, "", "setup_frequency"], [68, 2, 1, "", "setup_trigger"], [68, 2, 1, "", "stop"], [68, 3, 1, "", "timebase"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.capture.params": [[68, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.retrieve.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "dtype"], [68, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_capture.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_channel.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "coupling"], [68, 4, 1, "", "enable"], [68, 4, 1, "", "offset"], [68, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_frequency.params": [[68, 4, 1, "", "frequency"], [68, 4, 1, "", "posttrig"], [68, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_trigger.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "delay"], [68, 4, 1, "", "direction"], [68, 4, 1, "", "enable"], [68, 4, 1, "", "threshold"], [68, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk": [[68, 3, 1, "", "CHANNELS"], [68, 3, 1, "", "COUPLING"], [68, 3, 1, "", "MAX_ADC_VALUE"], [68, 3, 1, "", "MIN_ADC_VALUE"], [68, 3, 1, "", "MODULE"], [68, 3, 1, "", "PREFIX"], [68, 3, 1, "", "RANGES"], [68, 3, 1, "", "TIME_UNITS"], [68, 3, 1, "", "TRIGGERS"], [68, 2, 1, "", "arm"], [68, 2, 1, "", "capture"], [68, 6, 1, "", "channels"], [68, 2, 1, "", "close"], [68, 2, 1, "", "get_variant"], [68, 2, 1, "", "open"], [68, 2, 1, "", "retrieve"], [68, 2, 1, "", "set_buffer"], [68, 2, 1, "", "set_channel"], [68, 2, 1, "", "set_frequency"], [68, 2, 1, "", "set_trigger"], [68, 2, 1, "", "setup_capture"], [68, 2, 1, "", "setup_channel"], [68, 2, 1, "", "setup_frequency"], [68, 2, 1, "", "setup_trigger"], [68, 2, 1, "", "stop"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.capture.params": [[68, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.retrieve.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "dtype"], [68, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_capture.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_channel.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "coupling"], [68, 4, 1, "", "enable"], [68, 4, 1, "", "offset"], [68, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_frequency.params": [[68, 4, 1, "", "frequency"], [68, 4, 1, "", "posttrig"], [68, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_trigger.params": [[68, 4, 1, "", "channel"], [68, 4, 1, "", "delay"], [68, 4, 1, "", "direction"], [68, 4, 1, "", "enable"], [68, 4, 1, "", "threshold"], [68, 4, 1, "", "timeout"]], "pyecsca.sca.stacked_traces": [[70, 0, 0, "-", "combine"], [71, 0, 0, "-", "stacked_traces"]], "pyecsca.sca.stacked_traces.combine": [[70, 1, 1, "", "BaseTraceManager"], [70, 1, 1, "", "CPUTraceManager"], [70, 1, 1, "", "GPUTraceManager"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager": [[70, 2, 1, "", "add"], [70, 2, 1, "", "average"], [70, 2, 1, "", "average_and_variance"], [70, 2, 1, "", "conditional_average"], [70, 2, 1, "", "standard_deviation"], [70, 2, 1, "", "variance"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager.add.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager.average.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager.average_and_variance.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager.conditional_average.params": [[70, 4, 1, "", "condition"], [70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager.standard_deviation.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager.variance.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager": [[70, 2, 1, "", "add"], [70, 2, 1, "", "average"], [70, 2, 1, "", "average_and_variance"], [70, 2, 1, "", "conditional_average"], [70, 2, 1, "", "pearson_corr"], [70, 2, 1, "", "standard_deviation"], [70, 3, 1, "", "traces"], [70, 2, 1, "", "variance"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.add.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.average.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.average_and_variance.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.conditional_average.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.pearson_corr.params": [[70, 4, 1, "", "intermediate_values"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.standard_deviation.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.variance.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager": [[70, 2, 1, "", "add"], [70, 2, 1, "", "average"], [70, 2, 1, "", "average_and_variance"], [70, 2, 1, "", "chunk_size_from_ratio"], [70, 2, 1, "", "conditional_average"], [70, 2, 1, "", "pearson_corr"], [70, 2, 1, "", "run"], [70, 2, 1, "", "standard_deviation"], [70, 6, 1, "", "traces_shape"], [70, 2, 1, "", "variance"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.add.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.average.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.average_and_variance.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.conditional_average.params": [[70, 4, 1, "", "condition"], [70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.params": [[70, 4, 1, "", "chunk"], [70, 4, 1, "", "chunk_memory_ratio"], [70, 4, 1, "", "chunk_size"], [70, 4, 1, "", "stream_count"], [70, 4, 1, "", "tpb"], [70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.standard_deviation.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.variance.params": [[70, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.stacked_traces": [[71, 1, 1, "", "StackedTraces"]], "pyecsca.sca.stacked_traces.stacked_traces.StackedTraces": [[71, 2, 1, "", "fromarray"], [71, 2, 1, "", "fromtraceset"], [71, 3, 1, "", "meta"], [71, 3, 1, "", "samples"]], "pyecsca.sca.target": [[73, 0, 0, "-", "ISO7816"], [74, 0, 0, "-", "PCSC"], [75, 0, 0, "-", "base"], [76, 0, 0, "-", "binary"], [77, 0, 0, "-", "chipwhisperer"], [78, 0, 0, "-", "ectester"], [79, 0, 0, "-", "flash"], [80, 0, 0, "-", "leakage"], [81, 0, 0, "-", "leia"], [82, 0, 0, "-", "serial"], [83, 0, 0, "-", "simpleserial"]], "pyecsca.sca.target.ISO7816": [[73, 7, 1, "", "CardConnectionException"], [73, 1, 1, "", "CardProtocol"], [73, 1, 1, "", "CommandAPDU"], [73, 1, 1, "", "ISO7816"], [73, 1, 1, "", "ISO7816Target"], [73, 1, 1, "", "ResponseAPDU"]], "pyecsca.sca.target.ISO7816.CardConnectionException": [[73, 2, 1, "", "add_note"], [73, 3, 1, "", "args"], [73, 2, 1, "", "with_traceback"]], "pyecsca.sca.target.ISO7816.CardProtocol": [[73, 3, 1, "", "T0"], [73, 3, 1, "", "T1"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ISO7816.CommandAPDU": [[73, 3, 1, "", "cls"], [73, 3, 1, "", "data"], [73, 3, 1, "", "ins"], [73, 3, 1, "", "ne"], [73, 3, 1, "", "p1"], [73, 3, 1, "", "p2"]], "pyecsca.sca.target.ISO7816.ISO7816": [[73, 3, 1, "", "SW_APPLET_SELECT_FAILED"], [73, 3, 1, "", "SW_BYTES_REMAINING_00"], [73, 3, 1, "", "SW_CLA_NOT_SUPPORTED"], [73, 3, 1, "", "SW_COMMAND_NOT_ALLOWED"], [73, 3, 1, "", "SW_CONDITIONS_NOT_SATISFIED"], [73, 3, 1, "", "SW_CORRECT_LENGTH_00"], [73, 3, 1, "", "SW_DATA_INVALID"], [73, 3, 1, "", "SW_FILE_FULL"], [73, 3, 1, "", "SW_FILE_INVALID"], [73, 3, 1, "", "SW_FILE_NOT_FOUND"], [73, 3, 1, "", "SW_FUNC_NOT_SUPPORTED"], [73, 3, 1, "", "SW_INCORRECT_P1P2"], [73, 3, 1, "", "SW_INS_NOT_SUPPORTED"], [73, 3, 1, "", "SW_NO_ERROR"], [73, 3, 1, "", "SW_RECORD_NOT_FOUND"], [73, 3, 1, "", "SW_SECURITY_STATUS_NOT_SATISFIED"], [73, 3, 1, "", "SW_UNKNOWN"], [73, 3, 1, "", "SW_WRONG_DATA"], [73, 3, 1, "", "SW_WRONG_LENGTH"], [73, 3, 1, "", "SW_WRONG_P1P2"]], "pyecsca.sca.target.ISO7816.ISO7816Target": [[73, 6, 1, "", "atr"], [73, 2, 1, "", "connect"], [73, 2, 1, "", "disconnect"], [73, 2, 1, "", "select"], [73, 2, 1, "", "send_apdu"]], "pyecsca.sca.target.ISO7816.ISO7816Target.connect.params": [[73, 4, 1, "", "protocol"]], "pyecsca.sca.target.ISO7816.ISO7816Target.select.params": [[73, 4, 1, "", "aid"]], "pyecsca.sca.target.ISO7816.ISO7816Target.send_apdu.params": [[73, 4, 1, "", "apdu"]], "pyecsca.sca.target.ISO7816.ResponseAPDU": [[73, 3, 1, "", "data"], [73, 3, 1, "", "sw"]], "pyecsca.sca.target.PCSC": [[74, 1, 1, "", "PCSCTarget"]], "pyecsca.sca.target.PCSC.PCSCTarget": [[74, 6, 1, "", "atr"], [74, 2, 1, "", "connect"], [74, 2, 1, "", "disconnect"], [74, 2, 1, "", "select"], [74, 2, 1, "", "send_apdu"]], "pyecsca.sca.target.PCSC.PCSCTarget.connect.params": [[74, 4, 1, "", "protocol"]], "pyecsca.sca.target.PCSC.PCSCTarget.select.params": [[74, 4, 1, "", "aid"]], "pyecsca.sca.target.PCSC.PCSCTarget.send_apdu.params": [[74, 4, 1, "", "apdu"]], "pyecsca.sca.target.base": [[75, 1, 1, "", "Target"]], "pyecsca.sca.target.base.Target": [[75, 2, 1, "", "connect"], [75, 2, 1, "", "disconnect"]], "pyecsca.sca.target.binary": [[76, 1, 1, "", "BinaryTarget"]], "pyecsca.sca.target.binary.BinaryTarget": [[76, 3, 1, "", "binary"], [76, 2, 1, "", "connect"], [76, 3, 1, "", "debug_output"], [76, 2, 1, "", "disconnect"], [76, 3, 1, "", "process"], [76, 2, 1, "", "read"], [76, 2, 1, "", "write"]], "pyecsca.sca.target.binary.BinaryTarget.read.params": [[76, 4, 1, "", "num"], [76, 4, 1, "", "timeout"]], "pyecsca.sca.target.binary.BinaryTarget.write.params": [[76, 4, 1, "", "data"]], "pyecsca.sca.target.chipwhisperer": [[77, 1, 1, "", "ChipWhispererTarget"]], "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget": [[77, 2, 1, "", "connect"], [77, 2, 1, "", "disconnect"], [77, 2, 1, "", "flash"], [77, 2, 1, "", "read"], [77, 2, 1, "", "recv_msgs"], [77, 2, 1, "", "reset"], [77, 2, 1, "", "send_cmd"], [77, 2, 1, "", "write"]], "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.flash.params": [[77, 4, 1, "", "fw_path"]], "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.read.params": [[77, 4, 1, "", "num"], [77, 4, 1, "", "timeout"]], "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.recv_msgs.params": [[77, 4, 1, "", "timeout"]], "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.send_cmd.params": [[77, 4, 1, "", "cmd"], [77, 4, 1, "", "timeout"]], "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.write.params": [[77, 4, 1, "", "data"]], "pyecsca.sca.target.ectester": [[78, 1, 1, "", "AllocateKaResponse"], [78, 1, 1, "", "AllocateResponse"], [78, 1, 1, "", "AllocateSigResponse"], [78, 1, 1, "", "AppletBaseEnum"], [78, 7, 1, "", "ChunkingException"], [78, 1, 1, "", "CleanupResponse"], [78, 1, 1, "", "ClearResponse"], [78, 1, 1, "", "CurveEnum"], [78, 1, 1, "", "ECDHResponse"], [78, 1, 1, "", "ECDSAResponse"], [78, 1, 1, "", "ECTesterTarget"], [78, 1, 1, "", "ECTesterTargetLEIA"], [78, 1, 1, "", "ECTesterTargetPCSC"], [78, 1, 1, "", "ExportEnum"], [78, 1, 1, "", "ExportResponse"], [78, 1, 1, "", "FormatEnum"], [78, 1, 1, "", "GenerateResponse"], [78, 1, 1, "", "InstructionEnum"], [78, 1, 1, "", "KeyAgreementEnum"], [78, 1, 1, "", "KeyBuildEnum"], [78, 1, 1, "", "KeyClassEnum"], [78, 1, 1, "", "KeyEnum"], [78, 1, 1, "", "KeypairEnum"], [78, 1, 1, "", "ParameterEnum"], [78, 1, 1, "", "RunModeEnum"], [78, 1, 1, "", "RunModeResponse"], [78, 1, 1, "", "SetResponse"], [78, 1, 1, "", "SignatureEnum"], [78, 1, 1, "", "TransformResponse"], [78, 1, 1, "", "TransformationEnum"]], "pyecsca.sca.target.ectester.AllocateKaResponse": [[78, 3, 1, "", "error"], [78, 3, 1, "", "params"], [78, 3, 1, "", "resp"], [78, 3, 1, "", "success"], [78, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.AllocateResponse": [[78, 3, 1, "", "error"], [78, 3, 1, "", "params"], [78, 3, 1, "", "resp"], [78, 3, 1, "", "success"], [78, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.AllocateSigResponse": [[78, 3, 1, "", "error"], [78, 3, 1, "", "params"], [78, 3, 1, "", "resp"], [78, 3, 1, "", "success"], [78, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.AppletBaseEnum": [[78, 3, 1, "", "BASE_221"], [78, 3, 1, "", "BASE_222"], [78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "denominator"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.ChunkingException": [[78, 2, 1, "", "add_note"], [78, 3, 1, "", "args"], [78, 2, 1, "", "with_traceback"]], "pyecsca.sca.target.ectester.CleanupResponse": [[78, 3, 1, "", "error"], [78, 3, 1, "", "params"], [78, 3, 1, "", "resp"], [78, 3, 1, "", "success"], [78, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.ClearResponse": [[78, 3, 1, "", "error"], [78, 3, 1, "", "params"], [78, 3, 1, "", "resp"], [78, 3, 1, "", "success"], [78, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.CurveEnum": [[78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "default"], [78, 3, 1, "", "denominator"], [78, 3, 1, "", "external"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 3, 1, "", "secp112r1"], [78, 3, 1, "", "secp128r1"], [78, 3, 1, "", "secp160r1"], [78, 3, 1, "", "secp192r1"], [78, 3, 1, "", "secp224r1"], [78, 3, 1, "", "secp256r1"], [78, 3, 1, "", "secp384r1"], [78, 3, 1, "", "secp521r1"], [78, 3, 1, "", "sect163r1"], [78, 3, 1, "", "sect233r1"], [78, 3, 1, "", "sect283r1"], [78, 3, 1, "", "sect409r1"], [78, 3, 1, "", "sect571r1"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.ECDHResponse": [[78, 3, 1, "", "error"], [78, 3, 1, "", "params"], [78, 3, 1, "", "resp"], [78, 6, 1, "", "secret"], [78, 3, 1, "", "success"], [78, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.ECDSAResponse": [[78, 3, 1, "", "error"], [78, 3, 1, "", "params"], [78, 3, 1, "", "resp"], [78, 6, 1, "", "signature"], [78, 3, 1, "", "success"], [78, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.ECTesterTarget": [[78, 3, 1, "", "AID_CURRENT_VERSION"], [78, 3, 1, "", "AID_PREFIX"], [78, 3, 1, "", "AID_SUFFIX_221"], [78, 3, 1, "", "AID_SUFFIX_222"], [78, 3, 1, "", "AID_SUFFIX_304"], [78, 3, 1, "", "CLA_ECTESTER"], [78, 2, 1, "", "allocate"], [78, 2, 1, "", "allocate_ka"], [78, 2, 1, "", "allocate_sig"], [78, 6, 1, "", "atr"], [78, 3, 1, "", "chunking"], [78, 2, 1, "", "cleanup"], [78, 2, 1, "", "clear"], [78, 2, 1, "", "connect"], [78, 2, 1, "", "disconnect"], [78, 2, 1, "", "ecdh"], [78, 2, 1, "", "ecdh_direct"], [78, 2, 1, "", "ecdsa"], [78, 2, 1, "", "ecdsa_sign"], [78, 2, 1, "", "ecdsa_verify"], [78, 2, 1, "", "encode_parameters"], [78, 2, 1, "", "export"], [78, 2, 1, "", "generate"], [78, 2, 1, "", "info"], [78, 2, 1, "", "run_mode"], [78, 2, 1, "", "select"], [78, 2, 1, "", "select_applet"], [78, 2, 1, "", "send"], [78, 2, 1, "", "send_apdu"], [78, 2, 1, "", "set"], [78, 2, 1, "", "transform"]], "pyecsca.sca.target.ectester.ECTesterTarget.allocate.params": [[78, 4, 1, "", "builder"], [78, 4, 1, "", "key_class"], [78, 4, 1, "", "key_length"], [78, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTarget.allocate_ka.params": [[78, 4, 1, "", "ka_type"]], "pyecsca.sca.target.ectester.ECTesterTarget.allocate_sig.params": [[78, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTarget.clear.params": [[78, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTarget.connect.params": [[78, 4, 1, "", "protocol"]], "pyecsca.sca.target.ectester.ECTesterTarget.ecdh.params": [[78, 4, 1, "", "export"], [78, 4, 1, "", "ka_type"], [78, 4, 1, "", "privkey"], [78, 4, 1, "", "pubkey"], [78, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTarget.ecdh_direct.params": [[78, 4, 1, "", "export"], [78, 4, 1, "", "ka_type"], [78, 4, 1, "", "privkey"], [78, 4, 1, "", "pubkey"], [78, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTarget.ecdsa.params": [[78, 4, 1, "", "data"], [78, 4, 1, "", "export"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTarget.ecdsa_sign.params": [[78, 4, 1, "", "data"], [78, 4, 1, "", "export"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTarget.ecdsa_verify.params": [[78, 4, 1, "", "data"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "sig"], [78, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTarget.export.params": [[78, 4, 1, "", "key"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "params"]], "pyecsca.sca.target.ectester.ECTesterTarget.generate.params": [[78, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTarget.select.params": [[78, 4, 1, "", "aid"]], "pyecsca.sca.target.ectester.ECTesterTarget.select_applet.params": [[78, 4, 1, "", "count_back"], [78, 4, 1, "", "latest_version"]], "pyecsca.sca.target.ectester.ECTesterTarget.send_apdu.params": [[78, 4, 1, "", "apdu"]], "pyecsca.sca.target.ectester.ECTesterTarget.set.params": [[78, 4, 1, "", "curve"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "params"], [78, 4, 1, "", "values"]], "pyecsca.sca.target.ectester.ECTesterTarget.transform.params": [[78, 4, 1, "", "key"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "params"], [78, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA": [[78, 3, 1, "", "AID_CURRENT_VERSION"], [78, 3, 1, "", "AID_PREFIX"], [78, 3, 1, "", "AID_SUFFIX_221"], [78, 3, 1, "", "AID_SUFFIX_222"], [78, 3, 1, "", "AID_SUFFIX_304"], [78, 3, 1, "", "CLA_ECTESTER"], [78, 2, 1, "", "allocate"], [78, 2, 1, "", "allocate_ka"], [78, 2, 1, "", "allocate_sig"], [78, 6, 1, "", "atr"], [78, 6, 1, "", "card_present"], [78, 3, 1, "", "chunking"], [78, 2, 1, "", "cleanup"], [78, 2, 1, "", "clear"], [78, 2, 1, "", "connect"], [78, 2, 1, "", "disconnect"], [78, 2, 1, "", "ecdh"], [78, 2, 1, "", "ecdh_direct"], [78, 2, 1, "", "ecdsa"], [78, 2, 1, "", "ecdsa_sign"], [78, 2, 1, "", "ecdsa_verify"], [78, 2, 1, "", "encode_parameters"], [78, 2, 1, "", "export"], [78, 2, 1, "", "generate"], [78, 2, 1, "", "info"], [78, 2, 1, "", "run_mode"], [78, 2, 1, "", "select"], [78, 2, 1, "", "select_applet"], [78, 2, 1, "", "send"], [78, 2, 1, "", "send_apdu"], [78, 2, 1, "", "set"], [78, 2, 1, "", "transform"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.allocate.params": [[78, 4, 1, "", "builder"], [78, 4, 1, "", "key_class"], [78, 4, 1, "", "key_length"], [78, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.allocate_ka.params": [[78, 4, 1, "", "ka_type"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.allocate_sig.params": [[78, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.clear.params": [[78, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.connect.params": [[78, 4, 1, "", "protocol"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdh.params": [[78, 4, 1, "", "export"], [78, 4, 1, "", "ka_type"], [78, 4, 1, "", "privkey"], [78, 4, 1, "", "pubkey"], [78, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdh_direct.params": [[78, 4, 1, "", "export"], [78, 4, 1, "", "ka_type"], [78, 4, 1, "", "privkey"], [78, 4, 1, "", "pubkey"], [78, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdsa.params": [[78, 4, 1, "", "data"], [78, 4, 1, "", "export"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdsa_sign.params": [[78, 4, 1, "", "data"], [78, 4, 1, "", "export"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdsa_verify.params": [[78, 4, 1, "", "data"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "sig"], [78, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.export.params": [[78, 4, 1, "", "key"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "params"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.generate.params": [[78, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.select.params": [[78, 4, 1, "", "aid"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.select_applet.params": [[78, 4, 1, "", "count_back"], [78, 4, 1, "", "latest_version"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.send_apdu.params": [[78, 4, 1, "", "apdu"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.set.params": [[78, 4, 1, "", "curve"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "params"], [78, 4, 1, "", "values"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.transform.params": [[78, 4, 1, "", "key"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "params"], [78, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC": [[78, 3, 1, "", "AID_CURRENT_VERSION"], [78, 3, 1, "", "AID_PREFIX"], [78, 3, 1, "", "AID_SUFFIX_221"], [78, 3, 1, "", "AID_SUFFIX_222"], [78, 3, 1, "", "AID_SUFFIX_304"], [78, 3, 1, "", "CLA_ECTESTER"], [78, 2, 1, "", "allocate"], [78, 2, 1, "", "allocate_ka"], [78, 2, 1, "", "allocate_sig"], [78, 6, 1, "", "atr"], [78, 3, 1, "", "chunking"], [78, 2, 1, "", "cleanup"], [78, 2, 1, "", "clear"], [78, 2, 1, "", "connect"], [78, 2, 1, "", "disconnect"], [78, 2, 1, "", "ecdh"], [78, 2, 1, "", "ecdh_direct"], [78, 2, 1, "", "ecdsa"], [78, 2, 1, "", "ecdsa_sign"], [78, 2, 1, "", "ecdsa_verify"], [78, 2, 1, "", "encode_parameters"], [78, 2, 1, "", "export"], [78, 2, 1, "", "generate"], [78, 2, 1, "", "info"], [78, 2, 1, "", "run_mode"], [78, 2, 1, "", "select"], [78, 2, 1, "", "select_applet"], [78, 2, 1, "", "send"], [78, 2, 1, "", "send_apdu"], [78, 2, 1, "", "set"], [78, 2, 1, "", "transform"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.allocate.params": [[78, 4, 1, "", "builder"], [78, 4, 1, "", "key_class"], [78, 4, 1, "", "key_length"], [78, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.allocate_ka.params": [[78, 4, 1, "", "ka_type"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.allocate_sig.params": [[78, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.clear.params": [[78, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.connect.params": [[78, 4, 1, "", "protocol"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdh.params": [[78, 4, 1, "", "export"], [78, 4, 1, "", "ka_type"], [78, 4, 1, "", "privkey"], [78, 4, 1, "", "pubkey"], [78, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdh_direct.params": [[78, 4, 1, "", "export"], [78, 4, 1, "", "ka_type"], [78, 4, 1, "", "privkey"], [78, 4, 1, "", "pubkey"], [78, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdsa.params": [[78, 4, 1, "", "data"], [78, 4, 1, "", "export"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdsa_sign.params": [[78, 4, 1, "", "data"], [78, 4, 1, "", "export"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdsa_verify.params": [[78, 4, 1, "", "data"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "sig"], [78, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.export.params": [[78, 4, 1, "", "key"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "params"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.generate.params": [[78, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.select.params": [[78, 4, 1, "", "aid"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.select_applet.params": [[78, 4, 1, "", "count_back"], [78, 4, 1, "", "latest_version"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.send_apdu.params": [[78, 4, 1, "", "apdu"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.set.params": [[78, 4, 1, "", "curve"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "params"], [78, 4, 1, "", "values"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.transform.params": [[78, 4, 1, "", "key"], [78, 4, 1, "", "keypair"], [78, 4, 1, "", "params"], [78, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ExportEnum": [[78, 3, 1, "", "EXPORT_FALSE"], [78, 3, 1, "", "EXPORT_TRUE"], [78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "denominator"], [78, 2, 1, "", "from_bool"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.ExportResponse": [[78, 3, 1, "", "error"], [78, 2, 1, "", "get_index"], [78, 2, 1, "", "get_param"], [78, 3, 1, "", "key"], [78, 3, 1, "", "keypair"], [78, 3, 1, "", "parameters"], [78, 3, 1, "", "params"], [78, 3, 1, "", "resp"], [78, 3, 1, "", "success"], [78, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.FormatEnum": [[78, 3, 1, "", "COMPRESSED"], [78, 3, 1, "", "HYBRID"], [78, 3, 1, "", "UNCOMPRESSED"], [78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "denominator"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.GenerateResponse": [[78, 3, 1, "", "error"], [78, 3, 1, "", "params"], [78, 3, 1, "", "resp"], [78, 3, 1, "", "success"], [78, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.InstructionEnum": [[78, 3, 1, "", "INS_ALLOCATE"], [78, 3, 1, "", "INS_ALLOCATE_KA"], [78, 3, 1, "", "INS_ALLOCATE_SIG"], [78, 3, 1, "", "INS_BUFFER"], [78, 3, 1, "", "INS_CLEANUP"], [78, 3, 1, "", "INS_CLEAR"], [78, 3, 1, "", "INS_ECDH"], [78, 3, 1, "", "INS_ECDH_DIRECT"], [78, 3, 1, "", "INS_ECDSA"], [78, 3, 1, "", "INS_ECDSA_SIGN"], [78, 3, 1, "", "INS_ECDSA_VERIFY"], [78, 3, 1, "", "INS_EXPORT"], [78, 3, 1, "", "INS_GENERATE"], [78, 3, 1, "", "INS_GET_INFO"], [78, 3, 1, "", "INS_PERFORM"], [78, 3, 1, "", "INS_SET"], [78, 3, 1, "", "INS_SET_DRY_RUN_MODE"], [78, 3, 1, "", "INS_TRANSFORM"], [78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "denominator"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.KeyAgreementEnum": [[78, 3, 1, "", "ALG_EC_PACE_GM"], [78, 3, 1, "", "ALG_EC_SVDP_DH"], [78, 3, 1, "", "ALG_EC_SVDP_DHC"], [78, 3, 1, "", "ALG_EC_SVDP_DHC_KDF"], [78, 3, 1, "", "ALG_EC_SVDP_DHC_PLAIN"], [78, 3, 1, "", "ALG_EC_SVDP_DH_KDF"], [78, 3, 1, "", "ALG_EC_SVDP_DH_PLAIN"], [78, 3, 1, "", "ALG_EC_SVDP_DH_PLAIN_XY"], [78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "denominator"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.KeyBuildEnum": [[78, 3, 1, "", "BUILD_KEYBUILDER"], [78, 3, 1, "", "BUILD_KEYPAIR"], [78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "denominator"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.KeyClassEnum": [[78, 3, 1, "", "ALG_EC_F2M"], [78, 3, 1, "", "ALG_EC_FP"], [78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "denominator"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.KeyEnum": [[78, 3, 1, "", "BOTH"], [78, 3, 1, "", "PRIVATE"], [78, 3, 1, "", "PUBLIC"], [78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "denominator"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.KeypairEnum": [[78, 3, 1, "", "KEYPAIR_BOTH"], [78, 3, 1, "", "KEYPAIR_LOCAL"], [78, 3, 1, "", "KEYPAIR_REMOTE"], [78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "denominator"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.ParameterEnum": [[78, 3, 1, "", "A"], [78, 3, 1, "", "ALL"], [78, 3, 1, "", "B"], [78, 3, 1, "", "DOMAIN_F2M"], [78, 3, 1, "", "DOMAIN_FP"], [78, 3, 1, "", "F2M"], [78, 3, 1, "", "FP"], [78, 3, 1, "", "G"], [78, 3, 1, "", "K"], [78, 3, 1, "", "KEYPAIR"], [78, 3, 1, "", "NONE"], [78, 3, 1, "", "R"], [78, 3, 1, "", "S"], [78, 3, 1, "", "W"], [78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "denominator"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.RunModeEnum": [[78, 3, 1, "", "MODE_DRY_RUN"], [78, 3, 1, "", "MODE_NORMAL"], [78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "denominator"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.RunModeResponse": [[78, 3, 1, "", "error"], [78, 3, 1, "", "params"], [78, 3, 1, "", "resp"], [78, 3, 1, "", "success"], [78, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.SetResponse": [[78, 3, 1, "", "error"], [78, 3, 1, "", "params"], [78, 3, 1, "", "resp"], [78, 3, 1, "", "success"], [78, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.SignatureEnum": [[78, 3, 1, "", "ALG_ECDSA_SHA"], [78, 3, 1, "", "ALG_ECDSA_SHA_224"], [78, 3, 1, "", "ALG_ECDSA_SHA_256"], [78, 3, 1, "", "ALG_ECDSA_SHA_384"], [78, 3, 1, "", "ALG_ECDSA_SHA_512"], [78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "denominator"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.TransformResponse": [[78, 3, 1, "", "error"], [78, 3, 1, "", "params"], [78, 3, 1, "", "resp"], [78, 3, 1, "", "success"], [78, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.TransformationEnum": [[78, 3, 1, "", "COMPRESS"], [78, 3, 1, "", "COMPRESS_HYBRID"], [78, 3, 1, "", "FIXED"], [78, 3, 1, "", "FULLRANDOM"], [78, 3, 1, "", "INCREMENT"], [78, 3, 1, "", "INFINITY"], [78, 3, 1, "", "MASK_04"], [78, 3, 1, "", "MAX"], [78, 3, 1, "", "NONE"], [78, 3, 1, "", "ONE"], [78, 3, 1, "", "ONEBYTERANDOM"], [78, 3, 1, "", "ZERO"], [78, 2, 1, "", "as_integer_ratio"], [78, 2, 1, "", "bit_count"], [78, 2, 1, "", "bit_length"], [78, 2, 1, "", "conjugate"], [78, 3, 1, "", "denominator"], [78, 2, 1, "", "from_bytes"], [78, 3, 1, "", "imag"], [78, 3, 1, "", "numerator"], [78, 3, 1, "", "real"], [78, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.flash": [[79, 1, 1, "", "Flashable"]], "pyecsca.sca.target.flash.Flashable": [[79, 2, 1, "", "flash"]], "pyecsca.sca.target.flash.Flashable.flash.params": [[79, 4, 1, "", "fw_path"]], "pyecsca.sca.target.leakage": [[80, 1, 1, "", "LeakageTarget"]], "pyecsca.sca.target.leakage.LeakageTarget": [[80, 2, 1, "", "connect"], [80, 3, 1, "", "coords"], [80, 2, 1, "", "debug"], [80, 2, 1, "", "disconnect"], [80, 2, 1, "", "ecdh"], [80, 2, 1, "", "ecdsa_sign"], [80, 2, 1, "", "ecdsa_verify"], [80, 2, 1, "", "generate"], [80, 2, 1, "", "get_trace"], [80, 3, 1, "", "leakage_model"], [80, 3, 1, "", "model"], [80, 3, 1, "", "mult"], [80, 3, 1, "", "params"], [80, 3, 1, "", "privkey"], [80, 3, 1, "", "pubkey"], [80, 2, 1, "", "quit"], [80, 2, 1, "", "scalar_mult"], [80, 2, 1, "", "set_leakage_model"], [80, 2, 1, "", "set_params"], [80, 2, 1, "", "set_privkey"], [80, 2, 1, "", "set_pubkey"], [80, 2, 1, "", "set_trigger"], [80, 2, 1, "", "simulate_ecdh_traces"], [80, 2, 1, "", "simulate_scalar_mult_traces"]], "pyecsca.sca.target.leia": [[81, 1, 1, "", "LEIATarget"]], "pyecsca.sca.target.leia.LEIATarget": [[81, 6, 1, "", "atr"], [81, 6, 1, "", "card_present"], [81, 2, 1, "", "connect"], [81, 2, 1, "", "disconnect"], [81, 2, 1, "", "select"], [81, 2, 1, "", "send_apdu"]], "pyecsca.sca.target.leia.LEIATarget.connect.params": [[81, 4, 1, "", "protocol"]], "pyecsca.sca.target.leia.LEIATarget.select.params": [[81, 4, 1, "", "aid"]], "pyecsca.sca.target.leia.LEIATarget.send_apdu.params": [[81, 4, 1, "", "apdu"]], "pyecsca.sca.target.serial": [[82, 1, 1, "", "SerialTarget"]], "pyecsca.sca.target.serial.SerialTarget": [[82, 2, 1, "", "connect"], [82, 2, 1, "", "disconnect"], [82, 2, 1, "", "read"], [82, 2, 1, "", "write"]], "pyecsca.sca.target.serial.SerialTarget.read.params": [[82, 4, 1, "", "num"], [82, 4, 1, "", "timeout"]], "pyecsca.sca.target.serial.SerialTarget.write.params": [[82, 4, 1, "", "data"]], "pyecsca.sca.target.simpleserial": [[83, 1, 1, "", "SimpleSerialMessage"], [83, 1, 1, "", "SimpleSerialTarget"]], "pyecsca.sca.target.simpleserial.SimpleSerialMessage": [[83, 3, 1, "", "char"], [83, 3, 1, "", "data"], [83, 2, 1, "", "from_raw"]], "pyecsca.sca.target.simpleserial.SimpleSerialTarget": [[83, 2, 1, "", "connect"], [83, 2, 1, "", "disconnect"], [83, 2, 1, "", "read"], [83, 2, 1, "", "recv_msgs"], [83, 2, 1, "", "send_cmd"], [83, 2, 1, "", "write"]], "pyecsca.sca.target.simpleserial.SimpleSerialTarget.read.params": [[83, 4, 1, "", "num"], [83, 4, 1, "", "timeout"]], "pyecsca.sca.target.simpleserial.SimpleSerialTarget.recv_msgs.params": [[83, 4, 1, "", "timeout"]], "pyecsca.sca.target.simpleserial.SimpleSerialTarget.send_cmd.params": [[83, 4, 1, "", "cmd"], [83, 4, 1, "", "timeout"]], "pyecsca.sca.target.simpleserial.SimpleSerialTarget.write.params": [[83, 4, 1, "", "data"]], "pyecsca.sca.trace": [[85, 0, 0, "-", "align"], [86, 0, 0, "-", "combine"], [87, 0, 0, "-", "edit"], [88, 0, 0, "-", "filter"], [89, 0, 0, "-", "match"], [90, 0, 0, "-", "plot"], [91, 0, 0, "-", "process"], [92, 0, 0, "-", "sampling"], [93, 0, 0, "-", "test"], [94, 0, 0, "-", "trace"]], "pyecsca.sca.trace.align": [[85, 5, 1, "", "align_correlation"], [85, 5, 1, "", "align_dtw"], [85, 5, 1, "", "align_dtw_scale"], [85, 5, 1, "", "align_offset"], [85, 5, 1, "", "align_peaks"], [85, 5, 1, "", "align_sad"]], "pyecsca.sca.trace.align.align_correlation.params": [[85, 4, 1, "", "max_offset"], [85, 4, 1, "", "min_correlation"], [85, 4, 1, "", "reference"], [85, 4, 1, "", "reference_length"], [85, 4, 1, "", "reference_offset"], [85, 4, 1, "", "traces"]], "pyecsca.sca.trace.align.align_dtw.params": [[85, 4, 1, "", "fast"], [85, 4, 1, "", "radius"], [85, 4, 1, "", "reference"], [85, 4, 1, "", "traces"]], "pyecsca.sca.trace.align.align_dtw_scale.params": [[85, 4, 1, "", "fast"], [85, 4, 1, "", "radius"], [85, 4, 1, "", "reference"], [85, 4, 1, "", "traces"]], "pyecsca.sca.trace.align.align_offset.params": [[85, 4, 1, "", "dist_func"], [85, 4, 1, "", "max_dist"], [85, 4, 1, "", "max_offset"], [85, 4, 1, "", "reference"], [85, 4, 1, "", "reference_length"], [85, 4, 1, "", "reference_offset"], [85, 4, 1, "", "traces"]], "pyecsca.sca.trace.align.align_peaks.params": [[85, 4, 1, "", "max_offset"], [85, 4, 1, "", "reference"], [85, 4, 1, "", "reference_length"], [85, 4, 1, "", "reference_offset"], [85, 4, 1, "", "traces"]], "pyecsca.sca.trace.align.align_sad.params": [[85, 4, 1, "", "max_offset"], [85, 4, 1, "", "reference"], [85, 4, 1, "", "reference_length"], [85, 4, 1, "", "reference_offset"], [85, 4, 1, "", "traces"]], "pyecsca.sca.trace.combine": [[86, 5, 1, "", "add"], [86, 5, 1, "", "average"], [86, 5, 1, "", "average_and_variance"], [86, 5, 1, "", "conditional_average"], [86, 5, 1, "", "standard_deviation"], [86, 5, 1, "", "subtract"], [86, 5, 1, "", "variance"]], "pyecsca.sca.trace.combine.add.params": [[86, 4, 1, "", "traces"]], "pyecsca.sca.trace.combine.average.params": [[86, 4, 1, "", "traces"]], "pyecsca.sca.trace.combine.average_and_variance.params": [[86, 4, 1, "", "traces"]], "pyecsca.sca.trace.combine.conditional_average.params": [[86, 4, 1, "", "condition"], [86, 4, 1, "", "traces"]], "pyecsca.sca.trace.combine.standard_deviation.params": [[86, 4, 1, "", "traces"]], "pyecsca.sca.trace.combine.subtract.params": [[86, 4, 1, "", "one"], [86, 4, 1, "", "other"]], "pyecsca.sca.trace.combine.variance.params": [[86, 4, 1, "", "traces"]], "pyecsca.sca.trace.edit": [[87, 5, 1, "", "pad"], [87, 5, 1, "", "reverse"], [87, 5, 1, "", "stretch"], [87, 5, 1, "", "trim"]], "pyecsca.sca.trace.edit.pad.params": [[87, 4, 1, "", "lengths"], [87, 4, 1, "", "trace"], [87, 4, 1, "", "values"]], "pyecsca.sca.trace.edit.reverse.params": [[87, 4, 1, "", "trace"]], "pyecsca.sca.trace.edit.stretch.params": [[87, 4, 1, "", "length"], [87, 4, 1, "", "trace"]], "pyecsca.sca.trace.edit.trim.params": [[87, 4, 1, "", "end"], [87, 4, 1, "", "start"], [87, 4, 1, "", "trace"]], "pyecsca.sca.trace.filter": [[88, 5, 1, "", "filter_bandpass"], [88, 5, 1, "", "filter_bandstop"], [88, 5, 1, "", "filter_highpass"], [88, 5, 1, "", "filter_lowpass"]], "pyecsca.sca.trace.filter.filter_bandpass.params": [[88, 4, 1, "", "high"], [88, 4, 1, "", "low"], [88, 4, 1, "", "sampling_frequency"], [88, 4, 1, "", "trace"]], "pyecsca.sca.trace.filter.filter_bandstop.params": [[88, 4, 1, "", "high"], [88, 4, 1, "", "low"], [88, 4, 1, "", "sampling_frequency"], [88, 4, 1, "", "trace"]], "pyecsca.sca.trace.filter.filter_highpass.params": [[88, 4, 1, "", "cutoff"], [88, 4, 1, "", "sampling_frequency"], [88, 4, 1, "", "trace"]], "pyecsca.sca.trace.filter.filter_lowpass.params": [[88, 4, 1, "", "cutoff"], [88, 4, 1, "", "sampling_frequency"], [88, 4, 1, "", "trace"]], "pyecsca.sca.trace.match": [[89, 5, 1, "", "match_part"], [89, 5, 1, "", "match_pattern"]], "pyecsca.sca.trace.match.match_part.params": [[89, 4, 1, "", "length"], [89, 4, 1, "", "offset"], [89, 4, 1, "", "threshold"], [89, 4, 1, "", "trace"]], "pyecsca.sca.trace.match.match_pattern.params": [[89, 4, 1, "", "pattern"], [89, 4, 1, "", "threshold"], [89, 4, 1, "", "trace"]], "pyecsca.sca.trace.plot": [[90, 5, 1, "", "plot_trace"], [90, 5, 1, "", "plot_traces"], [90, 5, 1, "", "save_figure"], [90, 5, 1, "", "save_figure_png"], [90, 5, 1, "", "save_figure_svg"]], "pyecsca.sca.trace.process": [[91, 5, 1, "", "absolute"], [91, 5, 1, "", "invert"], [91, 5, 1, "", "normalize"], [91, 5, 1, "", "normalize_wl"], [91, 5, 1, "", "offset"], [91, 5, 1, "", "recenter"], [91, 5, 1, "", "rolling_mean"], [91, 5, 1, "", "threshold"], [91, 5, 1, "", "transform"]], "pyecsca.sca.trace.process.absolute.params": [[91, 4, 1, "", "trace"]], "pyecsca.sca.trace.process.invert.params": [[91, 4, 1, "", "trace"]], "pyecsca.sca.trace.process.normalize.params": [[91, 4, 1, "", "trace"]], "pyecsca.sca.trace.process.normalize_wl.params": [[91, 4, 1, "", "trace"]], "pyecsca.sca.trace.process.offset.params": [[91, 4, 1, "", "offset"], [91, 4, 1, "", "trace"]], "pyecsca.sca.trace.process.recenter.params": [[91, 4, 1, "", "trace"]], "pyecsca.sca.trace.process.rolling_mean.params": [[91, 4, 1, "", "trace"], [91, 4, 1, "", "window"]], "pyecsca.sca.trace.process.threshold.params": [[91, 4, 1, "", "trace"], [91, 4, 1, "", "value"]], "pyecsca.sca.trace.process.transform.params": [[91, 4, 1, "", "max_value"], [91, 4, 1, "", "min_value"], [91, 4, 1, "", "trace"]], "pyecsca.sca.trace.sampling": [[92, 5, 1, "", "downsample_average"], [92, 5, 1, "", "downsample_decimate"], [92, 5, 1, "", "downsample_max"], [92, 5, 1, "", "downsample_min"], [92, 5, 1, "", "downsample_pick"]], "pyecsca.sca.trace.sampling.downsample_average.params": [[92, 4, 1, "", "factor"], [92, 4, 1, "", "trace"]], "pyecsca.sca.trace.sampling.downsample_decimate.params": [[92, 4, 1, "", "factor"], [92, 4, 1, "", "trace"]], "pyecsca.sca.trace.sampling.downsample_max.params": [[92, 4, 1, "", "factor"], [92, 4, 1, "", "trace"]], "pyecsca.sca.trace.sampling.downsample_min.params": [[92, 4, 1, "", "factor"], [92, 4, 1, "", "trace"]], "pyecsca.sca.trace.sampling.downsample_pick.params": [[92, 4, 1, "", "factor"], [92, 4, 1, "", "offset"], [92, 4, 1, "", "trace"]], "pyecsca.sca.trace.test": [[93, 5, 1, "", "ks_test"], [93, 5, 1, "", "student_ttest"], [93, 5, 1, "", "welch_ttest"]], "pyecsca.sca.trace.test.ks_test.params": [[93, 4, 1, "", "first_set"], [93, 4, 1, "", "second_set"]], "pyecsca.sca.trace.test.student_ttest.params": [[93, 4, 1, "", "first_set"], [93, 4, 1, "", "second_set"]], "pyecsca.sca.trace.test.welch_ttest.params": [[93, 4, 1, "", "dof"], [93, 4, 1, "", "first_set"], [93, 4, 1, "", "p_value"], [93, 4, 1, "", "second_set"]], "pyecsca.sca.trace.trace": [[94, 1, 1, "", "CombinedTrace"], [94, 1, 1, "", "Trace"]], "pyecsca.sca.trace.trace.CombinedTrace": [[94, 2, 1, "", "astype"], [94, 3, 1, "", "meta"], [94, 3, 1, "", "samples"], [94, 6, 1, "", "trace_set"], [94, 2, 1, "", "with_samples"]], "pyecsca.sca.trace.trace.CombinedTrace.astype.params": [[94, 4, 1, "", "dtype"]], "pyecsca.sca.trace.trace.CombinedTrace.params": [[94, 4, 1, "", "meta"], [94, 4, 1, "", "samples"], [94, 4, 1, "", "trace_set"]], "pyecsca.sca.trace.trace.CombinedTrace.with_samples.params": [[94, 4, 1, "", "samples"]], "pyecsca.sca.trace.trace.Trace": [[94, 2, 1, "", "astype"], [94, 3, 1, "", "meta"], [94, 3, 1, "", "samples"], [94, 6, 1, "", "trace_set"], [94, 2, 1, "", "with_samples"]], "pyecsca.sca.trace.trace.Trace.astype.params": [[94, 4, 1, "", "dtype"]], "pyecsca.sca.trace.trace.Trace.params": [[94, 4, 1, "", "meta"], [94, 4, 1, "", "samples"], [94, 4, 1, "", "trace_set"]], "pyecsca.sca.trace.trace.Trace.with_samples.params": [[94, 4, 1, "", "samples"]], "pyecsca.sca.trace_set": [[96, 0, 0, "-", "base"], [97, 0, 0, "-", "chipwhisperer"], [98, 0, 0, "-", "hdf5"], [99, 0, 0, "-", "inspector"], [100, 0, 0, "-", "pickle"]], "pyecsca.sca.trace_set.base": [[96, 1, 1, "", "TraceSet"]], "pyecsca.sca.trace_set.base.TraceSet": [[96, 2, 1, "", "inplace"], [96, 2, 1, "", "read"], [96, 2, 1, "", "write"]], "pyecsca.sca.trace_set.chipwhisperer": [[97, 1, 1, "", "ChipWhispererTraceSet"]], "pyecsca.sca.trace_set.chipwhisperer.ChipWhispererTraceSet": [[97, 2, 1, "", "inplace"], [97, 2, 1, "", "read"], [97, 2, 1, "", "write"]], "pyecsca.sca.trace_set.hdf5": [[98, 1, 1, "", "HDF5Meta"], [98, 1, 1, "", "HDF5TraceSet"]], "pyecsca.sca.trace_set.hdf5.HDF5Meta": [[98, 2, 1, "", "clear"], [98, 2, 1, "", "get"], [98, 2, 1, "", "items"], [98, 2, 1, "", "keys"], [98, 2, 1, "", "pop"], [98, 2, 1, "", "popitem"], [98, 2, 1, "", "setdefault"], [98, 2, 1, "", "update"], [98, 2, 1, "", "values"]], "pyecsca.sca.trace_set.hdf5.HDF5TraceSet": [[98, 2, 1, "", "append"], [98, 2, 1, "", "close"], [98, 2, 1, "", "get"], [98, 2, 1, "", "inplace"], [98, 2, 1, "", "read"], [98, 2, 1, "", "remove"], [98, 2, 1, "", "save"], [98, 2, 1, "", "write"]], "pyecsca.sca.trace_set.inspector": [[99, 1, 1, "", "InspectorTraceSet"], [99, 1, 1, "", "Parsers"], [99, 1, 1, "", "SampleCoding"]], "pyecsca.sca.trace_set.inspector.InspectorTraceSet": [[99, 3, 1, "", "data_space"], [99, 3, 1, "", "description"], [99, 3, 1, "", "external_clock"], [99, 3, 1, "", "external_clock_frequencty"], [99, 3, 1, "", "external_clock_multiplier"], [99, 3, 1, "", "external_clock_phase_shift"], [99, 3, 1, "", "external_clock_resampler_enabled"], [99, 3, 1, "", "external_clock_resampler_mask"], [99, 3, 1, "", "external_clock_threshold"], [99, 3, 1, "", "external_clock_time_base"], [99, 3, 1, "", "filter_frequency"], [99, 3, 1, "", "filter_range"], [99, 3, 1, "", "filter_type"], [99, 3, 1, "", "global_title"], [99, 2, 1, "", "inplace"], [99, 3, 1, "", "log_scale"], [99, 3, 1, "", "num_samples"], [99, 3, 1, "", "num_traces"], [99, 2, 1, "", "read"], [99, 3, 1, "", "sample_coding"], [99, 6, 1, "", "sampling_frequency"], [99, 3, 1, "", "scope_coupling"], [99, 3, 1, "", "scope_id"], [99, 3, 1, "", "scope_impedance"], [99, 3, 1, "", "scope_offset"], [99, 3, 1, "", "scope_range"], [99, 3, 1, "", "title_space"], [99, 3, 1, "", "trace_offset"], [99, 2, 1, "", "write"], [99, 3, 1, "", "x_label"], [99, 3, 1, "", "x_offset"], [99, 3, 1, "", "x_scale"], [99, 3, 1, "", "y_label"], [99, 3, 1, "", "y_scale"]], "pyecsca.sca.trace_set.inspector.InspectorTraceSet.read.params": [[99, 4, 1, "", "input"]], "pyecsca.sca.trace_set.inspector.InspectorTraceSet.write.params": [[99, 4, 1, "", "output"]], "pyecsca.sca.trace_set.inspector.Parsers": [[99, 2, 1, "", "read_bool"], [99, 2, 1, "", "read_float"], [99, 2, 1, "", "read_int"], [99, 2, 1, "", "read_str"], [99, 2, 1, "", "write_bool"], [99, 2, 1, "", "write_float"], [99, 2, 1, "", "write_int"], [99, 2, 1, "", "write_str"]], "pyecsca.sca.trace_set.inspector.SampleCoding": [[99, 3, 1, "", "Float16"], [99, 3, 1, "", "Float32"], [99, 3, 1, "", "Float8"], [99, 3, 1, "", "Int16"], [99, 3, 1, "", "Int32"], [99, 3, 1, "", "Int8"], [99, 2, 1, "", "as_integer_ratio"], [99, 2, 1, "", "bit_count"], [99, 2, 1, "", "bit_length"], [99, 2, 1, "", "conjugate"], [99, 3, 1, "", "denominator"], [99, 2, 1, "", "dtype"], [99, 2, 1, "", "from_bytes"], [99, 3, 1, "", "imag"], [99, 3, 1, "", "numerator"], [99, 3, 1, "", "real"], [99, 2, 1, "", "to_bytes"]], "pyecsca.sca.trace_set.pickle": [[100, 1, 1, "", "PickleTraceSet"]], "pyecsca.sca.trace_set.pickle.PickleTraceSet": [[100, 2, 1, "", "inplace"], [100, 2, 1, "", "read"], [100, 2, 1, "", "write"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception"}, "terms": {"": [3, 7, 9, 29, 37, 47, 52, 72, 73, 76, 77, 78, 82, 83, 93, 98, 99, 100, 101, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 119], "0": [3, 9, 11, 15, 29, 46, 60, 62, 68, 73, 76, 77, 78, 82, 83, 85, 87, 89, 91, 92, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "00": 112, "000": [104, 105], "0000": [104, 105], "0001": 110, "0090": 119, "01": 68, "0100": [104, 105], "014": 119, "01743340492248535": 3, "02": [68, 112], "033": 78, "04": 111, "05": [68, 105], "05271c9ac628351b9add9e1be69a9fa4": 110, "0b0e97ff8c3e72e7ae75eb3f5e759fe03": 110, "0b1000000000000000000000000000000000000000000000000": [112, 113], "0b1000110": 114, "0b100100": 114, "0b100101": [3, 73, 78, 99], "0b1001101": 114, "0b101001": 114, "0b101010": 114, "0b1010101010101010101010101010101010101010101010101": [112, 113], "0b1010110": 114, "0b1011101": 114, "0b1100100": 114, "0b1101": [3, 73, 78, 99], "0b110110": 114, "0b1111110": 114, "0b1111111111111111111111110000000000000000000000000": [112, 113], "0b1111111111111111111111111111111111111111111111111": [112, 113], "0cef2e52ffe86ebc6dd323912ac7d9a87": 110, "0e2f983c0f852bef381f567448f0d488": 110, "0fcd24d24e57a40547814b6766b9ea735": 110, "0x0000000000000000": 114, "0x004d4a5a9bb849f": 114, "0x0106903196d88df9": 114, "0x02a4d99f41d23210": 114, "0x0478c1f80ce2c9c6": 114, "0x05a6bb891920440f": 114, "0x082c3722016def51": 114, "0x09097ddcd4be8d55": 114, "0x09866366b3b45c2d": 114, "0x0a1eb46a6e647f0a": 114, "0x0a938c37dfb0b6d5": 114, "0x0baec43a07b54c21": 114, "0x1": 114, "0x10f2c6bded391aa9": 114, "0x14984b7551ed21a9": 114, "0x14b7b48954936d4e": 114, "0x151da8fb1f83201": 114, "0x1742befa24cd8a0d": 112, "0x17d27fd34562e3d9": 114, "0x18e95a2283692623": 114, "0x191a36b9cd81de96": 114, "0x1963bfb862cb0bf3": 114, "0x1e669fe19c865bd9": 114, "0x2": 114, "0x207e142056d62d07": 114, "0x21ab23afb5a9e2ca": 114, "0x21f43957d7e20ceb": [112, 113, 114], "0x2419e8bbc7b5f8f2": 114, "0x26fd03674f5092d2": 114, "0x27590c454edd59ca": 114, "0x276446655fc0bf9": 114, "0x278e92b83191a7da": 114, "0x28f90926ea9c6b33": 114, "0x2926be6446b98d62": 114, "0x29d157628e75e1c0": 114, "0x2b45e7f32e3701ba": 114, "0x2d0942774607106b": 114, "0x2d5b0a5bb2141317": 114, "0x2da7a97d5d899bc5": 114, "0x2e94a3e38f8b345": 114, "0x303ac583c81644e3": 114, "0x308c923cae004514": 114, "0x30da8bb7fa77277d": 114, "0x313d58c47b8ed95f": 114, "0x31fcbb278951e3b9": 114, "0x31fe9c57c570174f": 114, "0x3208ecebb633b82c": 114, "0x324ef48887401a87": 114, "0x326539376260f173": 114, "0x3385044d698640fc": 114, "0x339d01a4b0db428": 114, "0x34683229b405418d": 114, "0x3508d33c4beba5ad": 114, "0x3b6c269560abeb00": 114, "0x3ce6f35a00280102": 114, "0x3d440ee959a912d7": 114, "0x3d6925f214620e0c": 114, "0x3fca7180021f8f0f": 114, "0x409e15d65fcae55a": 114, "0x41ebc3b763f3cd1b": 114, "0x457a5b6c47db38d8": 114, "0x46069225826b51aa": 114, "0x46d725812af15870": 114, "0x4747f2f9b8628cbf": 114, "0x47c5e527113b261c": 114, "0x4833d7aa73fa6694": [112, 113, 114], "0x48e1a124f895db6d": 114, "0x48e1a125250323a4": 114, "0x48e1a125250323a7": 114, "0x4c73cbfc44f41508": 114, "0x4dd02403ca890c5a": 114, "0x4e4e557f9fc3febc": 114, "0x4fed262974c1d800": 114, "0x50cee623251b559": 114, "0x5142200263be1fe3": 114, "0x52d39a67f2401673": 114, "0x54eed6d7": [104, 105, 108], "0x550a41d65e4bcd13": 114, "0x55d07340a4572f2d": 114, "0x56ee59a6845c5e93": 114, "0x5762de777a6d9178": 114, "0x583b968bb611b284": 114, "0x586cdb9378a1389f": 114, "0x5c901b1afa0b64da": 114, "0x5d8dda19dbe804d4": 114, "0x5eeddeee7152d6fb": 114, "0x5f5c76454edf12e7": 114, "0x5fd1f7d38d4f2333": [112, 113, 114], "0x611b69881db4ce69": 114, "0x6245db54032630a6": 114, "0x625adaf0fb44ab9f": 114, "0x62fd7b4bc7c9acb4": 114, "0x64bf52041ac05b23": 114, "0x64ef4e51d4159304": 114, "0x670dc776273bf899": 114, "0x674e09d296452ee": 114, "0x676535a1eaf5c605": 114, "0x68100d42e5ffd979": 114, "0x69e3ca555190da4b": 114, "0x6b8986f706afac58": 114, "0x6bc03365b1f1cb50": 114, "0x6f1e55ac": [104, 105, 108], "0x6fe4a521a29bc1ab": 114, "0x727f88365dbd0e80": 114, "0x73f76716": [104, 105, 108], "0x7424362ac73df187": 114, "0x76713f6f470e94a0": 114, "0x7895c02b3c5205b5": 114, "0x797c1dec0d73ec64": 114, "0x79d3ceefafc44ce9": 114, "0x7ad306c73b64c1b5": 114, "0x7adaab54e7dfd564": 114, "0x7b5374e9d7997199": 114, "0x7eb120fada47765c": 114, "0x7f311cba46652247": 114, "0x80eb7ef89110c149": 114, "0x8134208d53e6f6c0": 114, "0x81500c226efa0d5a": 114, "0x8316af84264df42b": 114, "0x83e6c6f0cb8f69c4": 114, "0x847de8837e6d4477": 114, "0x847de883ab4fbf4d": 114, "0x84c75d46fc687ff1": 114, "0x8633981c83ed43a2": 114, "0x896f04a7ae302922": 114, "0x8b0a274089b53fe5": 114, "0x8b7d2baee4e47310": 114, "0x8b7d2baee4e47311": 114, "0x8b7d2baf201f2bdd": 114, "0x8bfeb90ec1177a91": 114, "0x8d79ca35a428c76f": 114, "0x8d79ca36cee026a4": 114, "0x8d79ca36cee026a7": 114, "0x8e3c9cd771e7ffd8": 114, "0x8f738fd8fc7ebed3": 114, "0x8f738fda18cd5dff": 114, "0x94d919b72f7dc6d8": 114, "0x950312812acb155f": 114, "0x95913fae9065da0f": 114, "0x97a3e2d617a2309d": 114, "0x97a3e2d712ffd715": 114, "0x97b6ea094947a76b": 114, "0x97b6ea097868b95d": 114, "0x98fe44948c3f8678": 114, "0x991ba98cbbb0fe9f": 114, "0x99235f1d975f376d": 114, "0x99235f1ed44b3956": 114, "0x99235f1ed44b3959": 114, "0x9c7e7216decb71a7": 114, "0x9c7e72175ebfe709": 114, "0x9ccda4bfae73e4f5": 114, "0x9ccda4c062b95786": 114, "0x9ccda4c062b95787": 114, "0x9d9119957f02fe3f": 114, "0x9d9119957f02fe40": 114, "0x9f39032abb23f62a": 114, "0xa00629e5c03cf913": 114, "0xa00629e6522032f7": 114, "0xa03c039ff31e37a7": 114, "0xa03c03a0072f69b2": 114, "0xa03c03a0072f69b3": 114, "0xa339e3743950389b": 114, "0xa339e3745518416": 114, "0xa339e3745518416f": 114, "0xa42c1467a1ed04f3": 114, "0xa42c14689284d3a7": 114, "0xa4a44016": [104, 105, 108], "0xa575c9f97563265d": 114, "0xa6c44a61c5323f6a": [112, 113, 114], "0xa7ff74a06811ee75": 114, "0xa7ff74a0dc8c161a": 114, "0xa7ff74a0dc8c161d": 114, "0xae2d2f58ca5b5cf7": 114, "0xb0461c0e07e3e1bf": 114, "0xb0461c0e4946cbd4": 114, "0xb0461c0e4946cbd5": 114, "0xb1c9115c6f40d755": 114, "0xb1c9115d17f84a45": 114, "0xb3973a86901e3364": 114, "0xb3c2bec95881b695": 114, "0xb3c2beca75d66de3": 114, "0xb4a07dfae71ddc62": 114, "0xb52c62c963037121": 114, "0xb52c62ca8703a060": 114, "0xb52c62ca8703a063": 114, "0xb6d4e25ea270ed03": 114, "0xb6d4e25f76cc9df7": 114, "0xb7e2b4fb2d769c4": 114, "0xb8921f2592b6b39f": 114, "0xb8921f25b6ce5264": 114, "0xb8921f25b6ce5267": 114, "0xba965ca9c8aa0a18": 114, "0xba965ca9c8aa0a1b": 114, "0xba965caae5741b6f": 114, "0xbc8c6e7ba032dda7": 114, "0xbc8c6e7ce26746d8": 114, "0xbc8c6e7ce26746d9": 114, "0xbfb7747454a17d12": 114, "0xbfb7747454a17d15": 114, "0xbfb7747547fd57d3": 114, "0xc3a4bf3a1dc10005": 114, "0xc4de44402da5b9a6": 114, "0xc50de883f0e7b167": [112, 113, 114], "0xc50de885003b80eb": [112, 113, 114], "0xc591b8c3eb07239f": 114, "0xc591b8c4df0afc16": 114, "0xc591b8c4df0afc19": 114, "0xc5c771a9827a3251": 114, "0xc76f0776feb59336": 114, "0xcb5aa8a6cf812191": 114, "0xcb5aa8a7a10aa068": 114, "0xcb5aa8a7a10aa06b": 114, "0xcbbfe501c4ef6d92": 114, "0xce920b656c80b373": 114, "0xce920b65eee38015": 114, "0xceaf446a53f14bc1": 114, "0xceaf446aae275419": 114, "0xcfef393139c3007": 114, "0xcfef393139c3007f": 114, "0xcfef39320179387b": 114, "0xd00a3ee0f5c86b02": 114, "0xd47ec1d03a62686d": 114, "0xd47ec1d107db7d6f": 114, "0xd5673b3fe176fc6b": 114, "0xd6097c1b407eb413": 114, "0xd6097c1ce207aae7": 114, "0xd7d1247f": [104, 105, 108], "0xd7d2a475": [104, 105, 108], "0xd856b3dcb95764a2": 114, "0xd8d7f39f545a5da7": 114, "0xd8d7f3a0c4115b4b": 114, "0xddf4383ffa8e6de7": 114, "0xddf438409fc35161": 114, "0xe18821a83ca2ca30": 114, "0xe74e5d3064a4f2e3": 114, "0xe7cd197966893365": 114, "0xe7cd1979ebed69": 114, "0xe7daa3e061c3111b": 114, "0xea0d9cea8cd2c857": 114, "0xea0d9cead19016ab": 114, "0xeaf9b352a3daac45": 114, "0xeb5779f0bbf1ef5b": 114, "0xeb5779f21320c2e9": 114, "0xedc14fda0cdbc199": 114, "0xedc14fda51686378": 114, "0xedc14fda51686379": 114, "0xeff607c2dc4f278a": 114, "0xeff607c2dc4f278b": 114, "0xeff607c30ab8c50d": 114, "0xf0d617c3c47b7c77": 114, "0xf0d617c5512cec85": 114, "0xfc6ee0713e07f37f": 114, "0xfc6ee07288f1b78": 114, "0xfc6ee07288f1b78f": 114, "1": [3, 4, 8, 9, 15, 16, 17, 19, 20, 29, 34, 36, 39, 43, 44, 46, 47, 50, 51, 52, 57, 60, 62, 63, 65, 68, 70, 73, 78, 85, 91, 99, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115], "10": [3, 11, 60, 68, 73, 78, 99, 103, 104, 105, 108, 112, 114, 119], "100": [68, 104, 105, 111, 112, 113, 114], "1000": [22, 104, 105], "10000": [106, 109], "1007": 119, "102258728610797412855984739741975475478412665729440354248608608794190482472287": 11, "1024": [3, 78], "103": 103, "104": 39, "106156966968002564385990772707119429362097710917623193504777452220576981858057": 11, "108": 112, "10958513_17": 119, "10fcabd48fffc71e6300d44acc236157d": 110, "11": [68, 78, 103, 111, 112], "1100": [104, 105], "110884201872336783252492544257507655322265785208411447156687491781308462893723": 11, "1110": [104, 105], "11100101": 108, "111810799217268384317536017529141796945": 3, "112": 78, "113": 78, "114": 78, "115": 78, "1153442389f9e1da8dd130bc93c6ef42b": 110, "1155": 103, "115792089210356248762697446949407573529996955224135760342422259061068512044369": 44, "115792089210356248762697446949407573530086143415290314195533631308867097853948": [11, 44], "115792089210356248762697446949407573530086143415290314195533631308867097853951": [11, 44], "116": 78, "117": 78, "118": 78, "118a34a1ea295e78b3a3c960b6f680ee1": 110, "119": 78, "12": [21, 68, 78, 112], "120": 78, "121": 78, "1214": [103, 111], "122": 78, "122835813094999453922649270086793500655": 3, "123": 78, "123456789123456789": [112, 113], "125": 78, "126": 78, "128": [3, 70, 78, 104, 105, 108], "1280": 107, "12_500_000": 117, "13": [3, 73, 78, 99], "145": 112, "1595": 119, "1599bba77ed1cb8dec41555098958492": 110, "15_500_000": 109, "16": [3, 78, 103, 112], "160": 110, "1600": 105, "162938999268550597445809790209592423458": 3, "16m": 109, "17": [46, 78, 99, 104, 105, 119], "170": 78, "1707": 101, "176": 78, "17851997459724035659875545393642578516937407971293368958749928013979790074156": 11, "18": [99, 103], "187": 78, "18a22d20b6de3ff6bdc49329c21163f77": 110, "192": [103, 104, 105], "1986": 103, "1987": 103, "1991": 119, "1998": [2, 10, 103, 105, 106, 108, 109], "1cba89c3f099c29401ecf3fe1806e822": 110, "1d": 70, "2": [3, 9, 10, 12, 15, 16, 17, 19, 20, 29, 34, 39, 42, 43, 57, 62, 65, 68, 78, 92, 98, 99, 103, 104, 105, 107, 109, 111, 112, 114], "20": [46, 68, 99, 112, 113, 114], "200": 112, "2000": 105, "2001": 103, "2002": 103, "2005": 46, "2005a": 46, "2007": [2, 10, 103, 110, 112, 113, 114, 115], "2008": 103, "2011": 103, "2013": 103, "2015": [103, 104], "2017": 119, "2018": 101, "2021": [103, 119], "2024": 101, "2048": 3, "21": 103, "22": [103, 111, 114], "224": [104, 105], "229": [104, 105, 108], "24832": 73, "250": 103, "255": [78, 108], "256": [3, 78, 112, 119], "26": 39, "26368": 73, "27010": 73, "27011": 73, "27012": 73, "27013": 73, "27014": 73, "27033": 73, "27264": 73, "27265": 73, "27266": 73, "27267": 73, "27268": 73, "27270": 73, "27392": 73, "27648": 73, "27904": 73, "28160": 73, "28416": 73, "29b3e793822fad03a3c2ebca3cf62c12": 110, "2_250_000": 117, "2c3486e725755b44a7c119473c5b9c64": 110, "2dxy": 103, "2f": 112, "3": [3, 9, 15, 16, 17, 19, 29, 34, 38, 39, 62, 68, 73, 78, 99, 103, 107, 109, 110, 111, 112, 113, 114, 119], "30": [110, 112, 114], "3000": [67, 68, 105, 108], "30250211009dc6d5b03cffe0cbd5e829838ecb59e40210171c895d2d4f27850ff5f2a375ea22b7": 3, "30250211009dc6d5b03cffe0cbd5e829838ecb59e4021023496ba97cf1d816619fe626de2d07b6": 3, "30567033074c9169e9355a7b348aa7511c3ae605": 3, "309320541414531923178173772704935971498": 3, "31468013646237722594854082025316614106172411895747863909393730389177298123724": 11, "32": [3, 78, 103, 108], "321": 111, "322": [103, 111], "32512": 68, "326514220558629293368386081113307347349": 3, "32764": 68, "329078ab070fc18edc6ce53047e00a39": 110, "33": 78, "338": 103, "34": 78, "345d7282a0114070be91f95fe3db1faa": 110, "34a9fbe62b272f930b2e5027780a32300feb0dd8f": 110, "35": [46, 111, 114], "36134250956749795798585127919587881956611106672985015071877198253568414405109": 44, "36288": 119, "36864": 73, "37": [3, 73, 78, 99], "38": 78, "384": 78, "4": [3, 9, 12, 62, 68, 73, 78, 99, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114], "40": 112, "4000": [67, 68], "4096": 3, "41": 38, "41058363725152142129326129780047268409114441015993725554835256314039467401291": [11, 44], "44": [38, 103], "4610526fdcfbd69aed453ac2ee6efeef": 110, "4716485170445178": 110, "48059": 119, "48439561293906451759052585252797914202762949526041747995844080717082404635286": 44, "4c092beb06cc00751eec39675f680cb8": 110, "5": [2, 9, 11, 12, 29, 62, 68, 78, 85, 103, 109, 112, 113, 114], "50": [29, 68, 104, 110, 112, 113], "500": [104, 113], "5000": [67, 68, 109], "500_000": 109, "50_000": 117, "511": 78, "512": [3, 78], "540": 119, "542d8e0bbafe40dae36f25cbc350add6": 110, "545": 78, "546": 78, "583926": 103, "5_25": 119, "5e8c439d939273fdcb5503acbda7d3f8": 110, "5fbe46b9f1086011e18f5d823c6110c": 110, "6": [3, 68, 73, 78, 99, 103, 104, 105, 107, 109], "60": 112, "600": [108, 109, 117], "6000": [67, 68], "62": [11, 119], "627": 119, "63": 11, "633325621696952": 110, "64": [3, 78, 103, 112, 113, 114], "663": 119, "67aa9464eb493fbb7b509d29381b9a9d": 110, "6863906685124263315402674958985193889511160759072519051123564041627571792194": 11, "688": 119, "68a65f5a5dc304bfd0d8fe963c250206": 110, "6_17": 119, "6_400_000": 109, "6x": 112, "7": [50, 68, 78, 103, 112], "70": 112, "7214369438844093": 110, "73696d706c656170706c6574": 116, "76": [103, 111], "77": 112, "7748": 103, "7b6c82140bb427ac6e2a64507f60775949b2c8c": 110, "7c307098a414d7c384d6189226e4375cf02d": 85, "8": [3, 62, 68, 78, 89, 103, 104, 105, 109, 112], "80": 112, "816": 103, "816c9f865c831223067a88046bf00d75": 110, "8192": 3, "82800378a47dd6f26ff6a50f69e4c4e6": 110, "8286039438617044": 110, "84324075564118526167843364924090959423913731519542450286139900919689799730227": 11, "8508806646440022": 110, "8750920244948492046": 112, "888": 62, "8888": 62, "88888": 62, "888888": 62, "8888888": 62, "88888888": 62, "88888888o": 62, "8888888b": 62, "8888b": 62, "888p": 62, "89283496902772247016522581906930535517715184283144143693965440110672128480043": 11, "8on": 103, "8p": 62, "9": [46, 68, 78, 103, 112, 114], "90": [78, 111, 112], "91": 78, "92": [78, 112], "93": 78, "94": [78, 103], "95": 78, "950": [108, 109, 117], "9547100843537808": 110, "972ce29ed18d5d73f15cef31187659b": 110, "980582605794486": 110, "9845701775215489": 110, "9f6209be91b66943d9e8e0b61c4aae4": 110, "9fe4f88cfbacba71f4b767ace8580c74": 110, "A": [3, 4, 8, 9, 10, 11, 12, 15, 16, 17, 19, 27, 28, 29, 33, 34, 36, 39, 44, 45, 46, 51, 52, 59, 60, 62, 65, 66, 67, 68, 70, 72, 75, 77, 78, 79, 83, 85, 94, 101, 107, 109, 110, 112, 113, 114, 119], "AND": 101, "AS": 101, "And": [106, 109, 112], "As": [104, 105, 114, 115], "BE": 101, "BUT": 101, "But": 116, "FOR": 101, "For": [3, 20, 39, 42, 51, 103, 104, 105, 108, 115, 116], "IN": 101, "INS": 78, "If": [3, 9, 19, 28, 45, 52, 65, 66, 67, 68, 73, 78, 85, 98, 99], "In": [9, 62, 98, 103, 108, 109, 115], "It": [41, 42, 44, 52, 101, 102, 103, 107], "NO": 101, "NOT": 101, "No": [19, 103], "Not": [65, 66, 67, 68, 103, 110], "OF": 101, "ONE": [72, 78], "OR": 101, "Of": 85, "On": [9, 62, 116], "One": [11, 51, 111, 112, 115], "THE": 101, "TO": 101, "That": [3, 107], "The": [2, 3, 4, 5, 8, 9, 10, 11, 12, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 59, 60, 62, 63, 65, 66, 67, 68, 70, 73, 74, 76, 77, 78, 79, 81, 82, 83, 87, 89, 94, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 118, 119], "Then": [109, 112, 117], "There": [9, 102, 110, 114, 115], "These": [9, 112, 115], "To": [2, 3, 9, 62, 73, 74, 78, 81, 99, 104, 105, 106, 107, 108, 110], "WITH": 101, "With": 110, "_": [62, 103, 104, 105, 107, 110, 112, 113, 114], "________": 62, "__class__": [107, 112, 113], "__doc__": [106, 107], "__init__": 36, "__name__": [107, 111, 112, 113, 114], "__subclasses__": 107, "__traceback__": [13, 20, 73, 78], "_add": 111, "_alt": 103, "_dbl": 111, "_dtypedict": 94, "_ecc_sign_hash": 103, "_ecc_verify_hash": 103, "_eddsa_public_kei": 103, "_eddsa_sign": 103, "_eddsa_verifi": 103, "_file": 98, "_gcry_ecc_ecdsa_sign": 103, "_gcry_ecc_ecdsa_verifi": 103, "_gcry_ecc_eddsa_genkei": 103, "_gcry_ecc_eddsa_sign": 103, "_gcry_ecc_eddsa_verifi": 103, "_gcry_mpi_ec_mul_point": 103, "_gcry_pk_encrypt": 103, "_gcry_pk_genkei": 103, "_order": 98, "_scalartype_co": 55, "_sign_raw": 103, "_supportsdtyp": 94, "_verify_raw": 103, "a1": 12, "a2": 12, "a3": 12, "a4": 12, "a4dfa4b6b065c40b45980474266c9fbb": 110, "a6": 12, "a7c4f56f286d9eae44424c85c8b2fcb9": 110, "a859c36ceeadb39c7a978f7b1b0563e": 110, "a_a": 9, "a_invari": [7, 12], "abc": [9, 15, 19, 21, 36, 37, 57, 59, 73, 75, 78, 79, 83], "abil": 114, "abl": [109, 112, 114, 115], "about": [15, 16, 17, 19, 101, 103, 108, 114], "abov": [65, 66, 67, 68, 91, 101, 104, 105, 108, 112, 114, 115], "absolut": [3, 22, 53, 73, 78, 84, 85, 91, 99, 112], "abstract": [3, 9, 15, 21, 36, 57, 59, 65, 73, 75, 78, 79, 82, 83], "ac": [65, 66, 67, 68, 109], "accord": 46, "accumul": [36, 37, 38, 39, 41, 42], "accumulation_ord": [35, 36, 37, 38, 39, 41, 42, 107], "accumulationord": [7, 35, 36, 37, 38, 39, 41, 42, 107, 110, 112, 113, 114], "accumulatormultipli": [7, 35, 36, 37, 38, 39, 41, 42], "accur": 85, "aceb": 85, "acquisit": 101, "action": [3, 7, 9, 15, 26, 27, 29, 36, 45, 47, 51, 60, 101, 108, 112, 113, 114, 115], "activ": [9, 102, 115], "actual": [46, 65, 66, 67, 68, 103, 106, 110, 114], "actual_frequ": 109, "ad": [65, 66, 67, 68], "add": [1, 2, 3, 7, 9, 10, 11, 13, 15, 16, 17, 19, 20, 37, 38, 39, 40, 41, 42, 43, 47, 53, 62, 69, 70, 73, 78, 84, 86, 91, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "add_ax": [111, 112], "add_colorbar": 112, "add_nod": [14, 21], "add_not": [7, 13, 14, 20, 72, 73, 78], "add_oper": [14, 15], "add_polynomi": 114, "add_result": [14, 15], "addaffin": 103, "addfliparoo": [7, 14, 20], "addit": [3, 11, 14, 15, 16, 17, 19, 29, 39, 40, 42, 102, 103, 106, 107, 108, 110, 112], "addition_chain": 114, "additionefdformula": [7, 10, 14, 17, 111], "additionformula": [7, 14, 15, 16, 17, 19, 37, 38, 39, 40, 41, 42, 47, 110, 114], "addsubfliparoo": [7, 14, 20], "adic": 119, "adjac": [41, 46], "adjust": [65, 66, 67, 68, 116], "aee572fdd4790bcd4729bb3b612b52a573df46e9": 110, "aff": 112, "affin": [3, 7, 10, 11, 19, 27, 44, 45, 60, 63, 103, 110, 112, 114], "affine_add": [7, 11], "affine_doubl": [7, 11], "affine_lift_x": [7, 11], "affine_multipli": [7, 11, 106, 108, 110, 112], "affine_neg": [7, 11], "affine_neutr": [7, 11], "affine_param": [110, 114], "affine_point": [110, 112], "affine_random": [7, 11, 108, 110, 112], "affinecoordinatemodel": [7, 10, 11, 110, 112, 113, 114], "after": [3, 5, 52, 60, 65, 66, 67, 68, 102, 108, 109, 114], "again": 105, "against": [37, 119], "agreement": [26, 78, 108], "aid": [73, 74, 78, 81], "aid_current_vers": [72, 78], "aid_prefix": [72, 78], "aid_suffix_221": [72, 78], "aid_suffix_222": [72, 78], "aid_suffix_304": [72, 78], "aim": 101, "alg_ec_f2m": [72, 78], "alg_ec_fp": [72, 78], "alg_ec_pace_gm": [72, 78], "alg_ec_svdp_dh": [72, 78], "alg_ec_svdp_dh_kdf": [72, 78], "alg_ec_svdp_dh_plain": [72, 78, 116], "alg_ec_svdp_dh_plain_xi": [72, 78], "alg_ec_svdp_dhc": [72, 78], "alg_ec_svdp_dhc_kdf": [72, 78], "alg_ec_svdp_dhc_plain": [72, 78], "alg_ecdsa_sha": [72, 78], "alg_ecdsa_sha_224": [72, 78], "alg_ecdsa_sha_256": [72, 78], "alg_ecdsa_sha_384": [72, 78], "alg_ecdsa_sha_512": [72, 78], "algo": 110, "algorithm": [8, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 46, 47, 103, 108, 119], "align": [0, 53, 84, 101], "align_correl": [53, 84, 85], "align_dtw": [53, 84, 85], "align_dtw_scal": [53, 84, 85], "align_offset": [53, 84, 85], "align_peak": [53, 84, 85], "align_sad": [53, 84, 85], "all": [3, 8, 9, 20, 29, 36, 37, 38, 39, 40, 41, 42, 52, 60, 62, 72, 76, 77, 78, 82, 83, 91, 98, 101, 103, 107, 109, 110, 112, 113, 114], "all_configur": [7, 8, 107], "all_point": [112, 114], "all_points_filt": 114, "all_points_list": 114, "all_submultiples_invertible_z": 110, "all_subscalars_trivial_gcd": 110, "alloc": [72, 78], "allocate_ka": [72, 78, 116], "allocate_sig": [72, 78], "allocatekarespons": [53, 72, 78], "allocaterespons": [53, 72, 78], "allocatesigrespons": [53, 72, 78], "allow": [3, 52, 111, 114], "allow_breakpoint": 3, "along": [63, 103, 109, 114], "alot": 101, "alpha": 113, "alreadi": [47, 110], "also": [3, 9, 10, 11, 44, 73, 78, 98, 99, 102, 103, 105, 106, 109, 110, 111, 112, 114, 116], "altern": [67, 103], "alwai": [9, 35, 37, 39, 103, 107, 115], "among": [112, 113], "amount": [19, 104, 105, 107, 109, 112, 113], "amount_r": [112, 114], "amount_rate_asymmetr": [112, 114], "amount_rate_b": [112, 114], "amount_rate_binomi": 114, "amount_rate_c": 114, "amount_rate_symmetr": [112, 114], "an": [2, 3, 8, 9, 10, 11, 12, 15, 19, 20, 26, 28, 29, 30, 31, 32, 34, 37, 44, 45, 46, 47, 51, 52, 57, 60, 62, 65, 66, 67, 68, 73, 74, 75, 78, 81, 82, 83, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117], "analog": [65, 66, 67, 68], "analysi": [53, 60, 77, 85, 93, 103, 119], "analyz": [108, 112, 114], "analyze_formula": 111, "ancestor": [7, 9, 58, 62], "anchestor": [7, 9, 58, 62], "andrej": 101, "andrew": 119, "ani": [3, 4, 9, 10, 11, 15, 16, 17, 18, 19, 21, 26, 27, 29, 36, 45, 47, 52, 55, 59, 60, 62, 65, 66, 67, 68, 71, 73, 78, 87, 91, 94, 99, 101, 110, 112, 114], "annot": 36, "anoth": [11, 45, 62, 112, 115], "ansi": 11, "answer": [73, 74, 78, 81, 110, 112], "antonkueltz": 103, "anyth": 51, "anytre": [9, 62, 110, 112, 114], "apart": 106, "apdu": [73, 74, 78, 81], "api": [68, 103, 116], "append": [95, 98, 104, 105, 107, 110, 111, 112, 113, 114], "applet": [73, 74, 78, 81, 116], "appletbaseenum": [53, 72, 78], "appli": [9, 78, 88, 91, 105, 108, 111, 113, 119], "applic": [113, 115], "apply_async": [104, 105], "approach": 119, "appropri": [111, 112], "ar": [3, 9, 19, 20, 29, 39, 44, 45, 51, 52, 60, 62, 73, 78, 91, 98, 99, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 118], "arang": 111, "architectur": [2, 3, 103], "arg": [7, 13, 14, 20, 36, 52, 59, 72, 73, 78, 104, 105, 111, 112], "argument": [3, 8, 44, 52, 73, 78, 99, 107, 114, 115], "ari": 42, "aris": 101, "arithmet": [102, 103, 119], "arithmeticerror": 13, "ariti": 42, "arm": [64, 65, 66, 67, 68, 102, 109], "arrai": [3, 70, 73, 78, 94, 99, 112, 113], "articl": [111, 114, 119], "as_complet": [49, 52, 111, 112, 114], "as_expr": 114, "as_fil": 111, "as_integer_ratio": [1, 3, 72, 73, 78, 95, 99], "asn": 47, "asn1crypto": 102, "assembli": 103, "associ": [18, 25, 52, 62, 63, 94, 101], "assum": [3, 102, 103, 110, 114, 116], "assumpt": [7, 10, 13, 14, 15, 16, 17, 19, 21, 51, 63, 111], "assumption_str": 111, "assumptions_str": [14, 15, 16, 17, 19, 111], "astunpars": 102, "astyp": [84, 94], "asymmetr": 87, "atpubl": 102, "atr": [72, 73, 74, 78, 81, 116], "attach": [9, 62], "attack": [0, 53, 60, 63, 112, 113, 114, 115, 119], "attr": 98, "attribut": [8, 9, 16, 62, 106, 107, 114], "author": 101, "auto": [112, 113], "autodoc": 102, "automat": [29, 65, 66, 67, 68, 102], "ava": 46, "avail": [2, 3, 10, 19, 28, 45, 65, 66, 67, 68, 70, 76, 77, 82, 83, 102, 103, 114, 117], "averag": [53, 69, 70, 84, 86, 92, 101, 112, 114], "average_and_vari": [53, 69, 70, 84, 86], "ax": [111, 112, 114], "az": 103, "b": [9, 11, 12, 29, 34, 43, 44, 62, 68, 72, 78, 99, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 119], "b2": 12, "b3755d654bad73114e4191e9f5f36af9": 110, "b3f55185bd6a63528e3d560c6a7b729a": 110, "b4": 12, "b41f44": 21, "b51": [46, 119], "b6": 12, "b8": 12, "b937d5389b6c5d0212d0f53e26843092": 110, "b97644": 119, "b_invari": [7, 12], "back": [62, 78, 114], "badfliparoo": [7, 14, 20], "bakker": 85, "band": 88, "bandpass": 88, "bandstop": 88, "bar": 114, "barrett": [2, 7, 8, 109], "base": [0, 3, 4, 7, 8, 9, 10, 11, 13, 14, 16, 17, 19, 20, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 55, 56, 57, 58, 60, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 94, 95, 97, 98, 99, 100, 101, 103, 106, 108, 109, 118, 119], "base_221": [72, 78], "base_222": [72, 78], "base_addit": [7, 34], "base_doubl": [7, 34], "base_neg": [7, 34], "base_neutr": [7, 34], "base_path": 111, "basetracemanag": [53, 69, 70], "basi": 108, "basic": [16, 62], "batora": 101, "bbg": [46, 119], "bbjlp": 103, "bbox_inch": [112, 114], "bc": [103, 111], "bcae41be8e808acdc04bb769dead91e2": 110, "bcgit": 103, "bearssl": 111, "becaus": 112, "been": 52, "befor": [52, 65, 66, 67, 68, 78, 79, 103, 108, 114], "begin": [3, 57, 73, 78, 87, 99], "behavior": [110, 114], "being": 85, "belong": 63, "below": [65, 66, 67, 68, 85, 103, 105, 107, 108, 112, 118], "benefit": 102, "bernoulli": 112, "bernstein": [102, 119], "best": [65, 66, 67, 68, 118], "best_distinguishing_index": 110, "better": [70, 108, 114], "between": [10, 42, 57, 63, 70, 85, 87, 111], "bewar": 112, "bfa8369": 103, "bgmw": 38, "bgmwmultipli": [7, 35, 38, 112, 113], "bias": 112, "biased_oracl": 112, "big": [3, 46, 73, 78, 99], "bin": [3, 73, 78, 99, 112, 113, 115], "binari": [0, 1, 3, 5, 7, 35, 39, 41, 42, 43, 46, 53, 72, 73, 78, 99, 103, 106, 107, 108, 119], "binaryio": [44, 99], "binarynafmultipli": [7, 35, 41, 112, 113], "binarytarget": [3, 53, 72, 76], "binascii": [108, 115], "bind": 67, "bit": [3, 29, 30, 31, 32, 33, 37, 39, 40, 46, 53, 54, 57, 73, 78, 99, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115, 119], "bit_count": [1, 3, 72, 73, 78, 95, 99], "bit_length": [1, 3, 28, 29, 30, 31, 32, 33, 72, 73, 78, 95, 99], "bitcoin": 103, "bitlength": [53, 54, 57], "bj": 103, "bl": [2, 10, 103, 110, 112, 113, 114, 115], "black": [101, 102, 104, 105, 112], "blen": 46, "blind": 103, "blinded_base_point_multipli": 103, "blinded_var_point_multipli": 103, "blob": [3, 77, 79], "block": [65, 66, 67, 68, 70], "bnc": 109, "bo": 103, "board": [78, 81, 109, 116], "bokeh": [102, 104, 105, 108, 109, 112, 113, 114, 117], "book": 119, "bool": [3, 4, 5, 9, 11, 12, 15, 16, 17, 19, 21, 26, 27, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 51, 52, 60, 62, 63, 65, 66, 67, 68, 70, 73, 74, 76, 77, 78, 79, 80, 81, 85, 86, 93, 99, 106, 112], "boolean": [78, 106], "booth": [7, 46, 103, 119], "booth_window": [7, 46], "booth_word": [7, 46], "boringssl": [46, 111], "botan": 111, "both": [46, 62, 72, 78, 103, 112], "bottom": [111, 112], "bound": [55, 60, 114], "boundari": [3, 4, 8, 36, 65, 73, 78, 99], "box": 101, "br_ec_compute_pub": 103, "br_ecdsa_": 103, "brainpool": 103, "bram": 85, "branch": 103, "brand": [67, 68], "break": [110, 116], "brickel": 38, "buffer": [3, 64, 68, 73, 78, 99], "build": [1, 2, 4, 5, 58, 59, 60, 62, 102, 108, 109, 110, 112], "build_keybuild": [72, 78], "build_keypair": [72, 78], "build_tre": [58, 59, 60, 112], "builder": [0, 1, 78, 106, 108], "built": [3, 73, 78, 99, 102, 106, 110, 114], "bunch": [73, 112, 113], "bundl": 102, "butterworth": 88, "byte": [3, 11, 26, 44, 47, 73, 74, 76, 77, 78, 80, 81, 82, 83, 99, 108, 116], "bytearrai": [3, 73, 78, 99], "byteord": [3, 73, 78, 99], "bytesio": [110, 114], "c": [9, 34, 62, 68, 85, 101, 102, 103, 106, 107, 108, 114], "c25519": 103, "c2fee2d65350e870eda0ac5e2b96b810": 110, "c_short": 68, "ca": 119, "cab298b495875d4ab2c8ee3eb03016a7": 110, "cabl": 109, "cach": [0, 49], "cacr": 119, "cafc69aa517b654a6a608644996cc8d1": 110, "calcul": [70, 104, 105], "calculate_difference_of_mean": [54, 56], "calculateagr": 103, "calculatepublickei": 103, "call": [9, 36, 37, 38, 39, 40, 41, 42, 52, 62, 103, 115], "callabl": [9, 18, 44, 52, 60, 85, 86], "callback": [9, 112, 113, 114], "can": [3, 9, 11, 16, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 51, 52, 62, 73, 87, 98, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "can_sign": [7, 47], "can_verifi": [7, 47], "cancel": 52, "cancel_futur": 52, "cannot": [9, 29, 62, 114], "capabl": [101, 109], "captur": [9, 64, 65, 66, 67, 68, 109], "capture_output": 106, "card": [73, 74, 78, 81, 116], "card_pres": [72, 78, 81], "cardconnectionexcept": [53, 72, 73], "cardprotocol": [53, 72, 73, 74, 78, 81], "case": [3, 9, 11, 29, 62, 98, 103, 108, 112, 114], "categori": [7, 44, 104, 110, 114], "category_cfg": [110, 114], "category_map": [110, 114], "caus": [9, 62, 114], "cax": [111, 112], "cbar": [111, 112], "cbar_ax": [111, 112], "cbar_ymax": 112, "cbar_ymin": 112, "cc": 103, "cca6f6718a06cad7094962b2a35f067d": 110, "cd": 114, "cell": 114, "center": [111, 112, 113], "cfg": [0, 28, 29, 49, 58, 62, 110, 112, 114], "cfg1": 62, "cfg2": 62, "cfg3": 62, "cfg_categori": [110, 114], "cfg_map": [58, 62], "chain": [19, 20, 110], "chain_map": 114, "chan": 85, "chang": [102, 110, 112], "channel": [53, 64, 65, 66, 67, 68, 77, 101, 103, 104, 105, 108, 109], "chapter": 119, "char": [3, 72, 77, 83], "charact": [3, 77, 83], "charg": 101, "check": [11, 102, 106, 108], "child": [9, 62, 110, 114, 115], "children": [7, 9, 58, 62, 110, 114, 115], "chip": 109, "chipwhisper": [0, 3, 53, 64, 72, 83, 95, 101, 102, 109], "chipwhispererscop": [53, 64, 66], "chipwhisperertarget": [3, 53, 72, 77], "chipwhisperertraceset": [53, 95, 97], "choic": [2, 3, 4, 103], "choos": [62, 113], "chop": 52, "chosen": 28, "chromium": 103, "chudnovski": 103, "chunk": [52, 70, 72, 78, 114], "chunk_item_count": 70, "chunk_memory_ratio": 70, "chunk_siz": [70, 114], "chunk_size_from_ratio": [69, 70], "chunkingexcept": [53, 72, 78], "chunksiz": 52, "circuit": [11, 36, 37, 38, 39, 40, 41, 42, 107], "cl": [72, 73, 107], "cla_ectest": [72, 78], "claim": 101, "class": [3, 4, 8, 9, 10, 11, 15, 16, 17, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 51, 52, 55, 56, 57, 59, 60, 62, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 94, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 115], "classic": 37, "classmethod": [4, 8, 29, 30, 31, 32, 33, 62, 71, 78, 96, 97, 98, 99, 100], "classvar": [15, 16, 17, 19, 36, 37, 38, 39, 40, 41, 42, 57], "clean": 52, "cleanup": [72, 78, 109], "cleanuprespons": [53, 72, 78], "clear": [72, 78, 95, 98], "clearli": 103, "clearrespons": [53, 72, 78], "client": [0, 1, 105, 106, 108, 109], "clock": [65, 66, 67, 68], "clone": 102, "close": [64, 65, 66, 67, 68, 95, 98, 109], "closer": 114, "cmap": 112, "cmd": [3, 77, 83], "cmd_debug": [1, 3], "cmd_ecdh": [1, 3], "cmd_ecdsa_sign": [1, 3], "cmd_ecdsa_verifi": [1, 3], "cmd_gener": [1, 3], "cmd_init_prng": [1, 3], "cmd_scalar_mult": [1, 3], "cmd_set_param": [1, 3], "cmd_set_privkei": [1, 3], "cmd_set_pubkei": [1, 3], "cmd_set_trigg": [1, 3], "cmo": [2, 10, 103, 105, 106, 108, 109], "co2002": [37, 119], "code": [0, 7, 14, 15, 17, 19, 43, 79, 101, 102, 103, 108, 111, 112, 113, 116, 118], "codeadditionformula": [7, 14, 16], "codedifferentialadditionformula": [7, 14, 16], "codedoublingformula": [7, 14, 16], "codeformula": [7, 14, 16, 17, 20, 21, 23, 24], "codegen": [0, 101, 105, 106, 108, 109], "codeladderformula": [7, 14, 16], "codenegationformula": [7, 14, 16], "codeop": [7, 15, 16, 17, 19, 43], "codeopnod": 20, "codescalingformula": [7, 14, 16], "codestyl": 102, "codetriplingformula": [7, 14, 16], "codetyp": 43, "codomain": [58, 62], "coeffici": 70, "cofactor": [7, 44, 114], "col": [112, 114], "colalign": [112, 113], "collect": [15, 16, 17, 19, 103, 109, 111, 112, 114, 115], "color": [14, 21, 104, 105, 111, 112], "colorbar": [111, 112], "column": 62, "com": [44, 57, 103, 108, 119], "comb": [0, 2, 7, 35, 39, 103], "comba": [7, 8], "combin": [0, 53, 69, 84, 94, 112], "combinedtrac": [53, 70, 84, 86, 93, 94], "combmultipli": [7, 35, 38, 112, 113], "command": [3, 4, 73, 77, 78, 83, 102], "commandapdu": [53, 72, 73, 74, 78, 81], "commit": [102, 103], "common": [0, 1, 29, 106, 108, 109], "commondatastorag": 103, "commun": [3, 72, 74, 76, 77, 78, 81, 82, 83, 101, 109, 116], "commut": [18, 111], "compar": [19, 22, 45, 108], "compat": [78, 98, 114, 116], "compil": [4, 7, 43, 102], "complement": [3, 73, 78, 99], "complet": [35, 37, 39, 40, 52, 103, 107], "completedprocess": 5, "complex": [3, 73, 78, 99], "composit": 110, "compress": [72, 78], "compress_hybrid": [72, 78], "comput": [10, 12, 15, 19, 22, 29, 30, 31, 32, 33, 39, 41, 42, 46, 51, 60, 63, 70, 74, 86, 91, 93, 102, 104, 110, 111, 112, 113, 115, 119], "compute_correlation_trac": [54, 55], "compute_factor_set": [53, 58, 63, 114], "compute_fset": 114, "compute_intermediate_valu": [54, 55], "compute_kei": 103, "compute_similar": 111, "compute_split_point": [54, 56], "concret": [16, 19, 36, 114], "concurr": [52, 111, 112], "cond": [70, 114], "condit": [65, 66, 67, 68, 70, 86, 101], "conditional_averag": [53, 69, 70, 84, 86], "config": [5, 28, 49, 51, 58, 59, 60, 62, 106, 107, 108, 109, 110], "configur": [0, 4, 5, 7, 28, 29, 36, 51, 59, 60, 62, 101, 106, 108, 109, 114, 118], "conjug": [1, 3, 72, 73, 78, 95, 99], "connect": [1, 3, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 101, 106, 108, 109, 116], "consecut": 92, "consid": [60, 107, 110, 112], "consist": [83, 101, 102, 107, 108, 115], "constant": [3, 7, 43, 73, 78, 103, 107], "constantinputwarn": 104, "constantnod": [7, 14, 21], "constitut": [15, 16, 17, 19], "construct": [29, 60, 63, 78, 94, 110, 114], "constructor": [8, 16, 107, 109], "contain": [10, 13, 44, 62, 70, 78, 87, 94, 101, 102, 103, 104, 105, 106, 108, 117, 118], "context": [0, 7, 51, 52, 60, 80, 110, 111, 112, 113, 114, 115], "contextlib": [111, 114], "contextmanag": [9, 111, 114], "continu": [110, 114], "contract": 101, "contributor": 101, "conveni": [104, 105], "convert": [3, 11, 19, 44, 45, 46, 48, 73, 78, 99], "convert_bas": [7, 46], "convert_xor": 50, "coord": [1, 3, 4, 7, 8, 14, 19, 44, 45, 63, 72, 80, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "coord_add": 114, "coord_dbl": 114, "coord_map": [1, 3], "coord_nam": [110, 111, 114], "coordin": [0, 2, 3, 7, 11, 15, 16, 17, 19, 26, 34, 44, 45, 51, 60, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114], "coordinate_model": [7, 10, 11, 14, 15, 16, 17, 19, 21, 44, 45, 106, 108, 110, 111, 112, 114, 115], "coordinate_nam": [7, 34], "coordinatemappingact": [7, 45], "coordinatemodel": [3, 4, 7, 8, 10, 11, 19, 34, 44, 45, 80], "coords_count": 107, "coords_nam": 107, "coordsaff": [112, 113, 114], "copi": [5, 9, 94, 101, 108, 111, 114, 115], "copyright": 101, "core": [101, 103], "coron": [37, 119], "coronmultipli": [7, 35, 37], "corrcoef": 70, "correct": [104, 105, 108, 110, 112, 116], "correct_r": [112, 114], "correct_rate_b": [112, 114], "correct_rate_c": 114, "correctli": [107, 108, 110], "correl": [54, 55, 70, 85, 89], "correspond": [55, 56, 98, 104, 105], "coster": 103, "could": [52, 73], "count": [3, 60, 65, 66, 67, 68, 73, 78, 99, 107, 113, 114], "count_back": 78, "count_formula_act": 113, "count_map": 114, "count_max": 113, "count_min": 113, "count_no_opt": 107, "count_no_scl": 107, "count_op": 50, "counter": [112, 114], "counts_row": 114, "coupl": [64, 65, 66, 67, 68, 109], "covari": 55, "cover": [11, 109], "coverag": 102, "coz": 103, "cpa": [0, 53, 54, 104, 105], "cpa_nois": 104, "cpa_trac": 104, "cpu": [70, 101, 112], "cputracemanag": [53, 69, 70], "cr": 119, "creat": [9, 52, 67, 104, 105, 106, 108, 109], "createbasepointmultipli": 103, "createdefaultmultipli": 103, "creation": 51, "croc": 102, "cross": [85, 102], "crt": 110, "crypto": [103, 106, 107], "cryptograph": 111, "cryptographi": [101, 119], "cryptosystem": 119, "ct": 55, "ctx": [9, 110, 112, 113, 114], "current": [7, 9, 11, 44, 51, 62, 101, 102, 108], "current_depth": [7, 9], "current_nod": 110, "curv": [0, 2, 3, 7, 10, 12, 19, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 51, 63, 78, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 119], "curve25519": [103, 111], "curve25519_donna": 103, "curve448": 103, "curve_i": 110, "curve_model": [7, 10], "curveenum": [53, 72, 78], "curvemodel": [3, 4, 7, 8, 11, 34, 80], "custom": [3, 103], "cut": 101, "cutoff": 88, "cw308_stm32f0": 4, "cw308_stm32f3": 4, "cw308_xmega": 4, "cwd": [106, 108], "cwnano": 4, "cypari2": [102, 114], "cysign": 114, "cython": 102, "d": [9, 34, 62, 68, 98, 103, 119], "d4a3aaf43bdb25be7c308b69ae54f639e6e32e8c": 110, "d8": 62, "d88": 62, "d888888888": 62, "d888p": 62, "d8_88": 62, "d9c4372806e8131b18d0036e8f832749": 110, "dab9e68366a593ca1df9cb2f20890a578729d6ef": 110, "dadd": [1, 3, 15, 16, 17, 19, 40], "dahab": 103, "damag": 101, "daniel": 102, "darmstadt": 103, "data": [3, 47, 65, 66, 67, 68, 72, 73, 76, 77, 78, 80, 82, 83, 98, 102, 105, 108, 111, 115], "data_spac": [95, 99], "dataarrai": 112, "databas": [44, 102, 119], "dataclass": [106, 107], "datafram": 62, "datashad": [101, 102, 117], "db": 62, "db49063db56b7783fa01dd62077c5a88dfa28009": 110, "dbl": [1, 2, 3, 10, 15, 16, 17, 19, 37, 38, 39, 40, 41, 42, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115], "dbl_polynomi": 114, "dc": [65, 66, 67, 68, 109], "dc_50": 68, "dcp": 114, "de": 103, "de1406450d5d7e91d81907956019c0c1": 110, "deal": [101, 117], "debug": [1, 3, 5, 72, 80], "debug_output": [1, 3, 72, 76], "decim": 92, "decod": [11, 106], "decode_point": [7, 11], "decomposit": 103, "dedupl": [58, 62, 110, 114], "deepcopi": [14, 20, 21, 111, 114], "deeper": 2, "deepest": 62, "def": [104, 105, 107, 110, 111, 112, 113, 114], "default": [3, 52, 72, 73, 78, 98, 99, 103, 115], "defaultcontext": [7, 9, 112, 113, 114, 115], "defin": [1, 4, 11, 104, 105, 106, 108, 110, 111, 114], "degre": 93, "del": 114, "delai": [65, 66, 67, 68, 109], "delet": 109, "demonstr": [104, 105, 108], "denomin": [1, 3, 12, 29, 72, 73, 78, 95, 99], "densiti": 113, "depend": 114, "depth": [7, 9, 20, 58, 62, 114], "der": 47, "deriv": 103, "desc": [110, 111, 114], "descend": [7, 9, 58, 62], "describ": [58, 62, 103, 110, 112, 114], "descript": [7, 44, 95, 99], "design": 102, "destin": 21, "detach": [9, 62], "detail": 108, "detect": [107, 112], "determin": [3, 73, 78, 99, 112], "dev": 102, "develop": [101, 102, 103], "deviat": [70, 86, 91, 104, 105, 112], "devic": [3, 4, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 101], "deviceconfigur": [1, 4, 5, 106, 108, 109], "devicetarget": [1, 3, 106, 109], "dfb2da5e1b7bd7bb098cb975966293": 110, "di": 109, "dict": [21, 22, 55, 56, 112, 113, 114], "dictionari": [8, 108], "did": 112, "diff_noth": 112, "diff_real": 112, "diff_trac": 112, "diffadd": 40, "differ": [2, 9, 11, 15, 35, 36, 44, 46, 48, 62, 70, 85, 103, 104, 105], "differenti": [15, 40, 85, 112, 119], "differentialadditionefdformula": [7, 14, 17], "differentialadditionformula": [7, 14, 15, 16, 17, 19, 40, 110], "differentialladdermultipli": [7, 35, 40], "diffi": 26, "digest": 47, "digit": [46, 47, 88], "digraph": 21, "dim": 112, "dimens": 112, "dir": 5, "direct": [35, 36, 37, 38, 39, 41, 42, 65, 66, 67, 68, 78, 107, 109], "directli": 16, "directori": [5, 106, 108, 109, 111, 114], "disabl": [52, 65, 66, 67, 68], "disast": 119, "disconnect": [1, 3, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 106, 109, 116], "discret": 63, "dispatch": [28, 29], "displai": [107, 109, 110, 111, 112, 113, 114], "dist_func": 85, "distanc": [57, 62, 85], "distinguish": [60, 62, 110, 112, 113], "distribut": [93, 101, 113], "div": [7, 43], "divid": 91, "divis": [12, 15, 16, 17, 19, 102], "divpoli": [0, 7], "djb02": 119, "dk": 114, "dlog": [63, 114], "dmap": [62, 110], "dmap_categori": [110, 114], "dmap_count": 114, "dmap_dedup": 114, "dmap_fset": 114, "dmap_fset_nonhomo": 114, "dmap_index": [58, 62], "dmap_input": [58, 62, 110, 114], "dmap_posit": 114, "dmap_remap": 114, "do": [3, 8, 39, 65, 66, 67, 68, 85, 98, 101, 104, 105, 110, 112, 114], "doc": [102, 103, 106, 107], "docs1": 103, "document": [101, 102, 103, 118], "doe": [3, 9, 62, 98, 103, 110, 112], "doesn": [51, 70], "dof": 93, "doi": [103, 119], "doit": 50, "dom": [54, 56, 105], "domain": [3, 27, 36, 37, 38, 39, 40, 41, 42, 44, 48, 55, 56, 58, 60, 62, 114], "domain_f2m": [72, 78], "domain_fp": [72, 78], "domain_param": [104, 105], "domainparamet": [3, 7, 26, 27, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 55, 56, 60, 80, 104, 105, 108, 110, 112, 113, 114], "domainparametercategori": [7, 44], "done": [9, 104, 105, 108, 109], "donjon": 108, "doubl": [2, 11, 15, 37, 39, 40, 42, 103, 107, 108, 114], "doubleandaddmultipli": [7, 35, 37], "doublingefdformula": [7, 10, 14, 17, 111], "doublingformula": [7, 14, 15, 16, 17, 19, 37, 38, 39, 40, 41, 42, 110, 114], "down": [9, 62, 110], "downsampl": 92, "downsample_averag": [53, 84, 92, 112], "downsample_decim": [53, 84, 92], "downsample_max": [53, 84, 92, 112], "downsample_min": [53, 84, 92], "downsample_pick": [53, 84, 92], "dpa": [0, 53, 54, 104, 119], "dpa_emul": 105, "dpa_nois": 105, "dpa_trac": 105, "draw": [14, 21], "dtype": [55, 65, 66, 67, 68, 94, 95, 99, 114], "due": [103, 105, 107, 114], "duif": 103, "duke": 119, "dump": [111, 114], "dup": 103, "duplic": [9, 62], "dure": [3, 9, 15, 27, 51, 60, 78, 102, 104, 105, 108, 112, 113, 115], "dynam": [28, 85, 109], "e": [2, 9, 15, 16, 17, 19, 43, 60, 63, 79, 89, 98, 101, 103, 107, 110, 114], "e0": 112, "e1": 112, "e_0": 112, "e_1": 112, "eabi": 102, "each": [3, 12, 42, 55, 56, 62, 92, 103, 104, 105, 107, 108, 114, 115], "easier": 102, "easili": 115, "ec": [0, 49, 51, 78, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "ec_curve25519_mul": 103, "ec_curve25519_pt_mul": 103, "ec_gen": 103, "ec_get_method_from_nam": 103, "ec_gfp_mont_method": 103, "ec_gfp_mont_mul": 103, "ec_gfp_mont_mul_bas": 103, "ec_gfp_mont_mul_public_batch": 103, "ec_gfp_nist_method": 103, "ec_gfp_nistp224_method": 103, "ec_gfp_nistp224_point_mul": 103, "ec_gfp_nistp224_point_mul_bas": 103, "ec_gfp_nistp256_method": 103, "ec_gfp_nistp256_point_mul": 103, "ec_gfp_nistp256_point_mul_bas": 103, "ec_gfp_nistp521_method": 103, "ec_gfp_nistz256_method": 103, "ec_gfp_simple_method": 103, "ec_gfp_simple_mul_ct": 103, "ec_gfp_simple_mul_double_nonct": 103, "ec_gfp_simple_mul_generator_ct": 103, "ec_gfp_simple_mul_single_ct": 103, "ec_key_gen": 103, "ec_key_generate_kei": 103, "ec_keymgmt": 103, "ec_method": 103, "ec_newkei": 103, "ec_newkeyfromse": 103, "ec_point_add": 103, "ec_point_base_point_precomput": 103, "ec_point_dbl": 103, "ec_point_ladder_post": 103, "ec_point_ladder_pr": 103, "ec_point_ladder_step": 103, "ec_point_mul": 103, "ec_point_mul_scalar": 103, "ec_point_mul_scalar_bas": 103, "ec_point_mul_scalar_publ": 103, "ec_point_multi_point_precomput": 103, "ec_point_var_point_precomput": 103, "ec_points_mul": 103, "ec_secp256r1_pt_mul": 103, "ec_signdigestwithse": 103, "ec_validatepublickei": 103, "ec_wnaf_mul": 103, "ecalgorithm": 103, "ecc": [2, 8, 101, 106, 107, 109, 115, 118, 119], "ecc_curv": 103, "ecc_ecdsa_sign": 103, "ecc_ecdsa_verifi": 103, "ecc_encrypt_raw": 103, "ecc_gener": 103, "ecc_make_kei": 103, "ecc_make_key_ex": 103, "ecc_mul2add": 103, "ecc_mul_a": 103, "ecc_mul_g": 103, "ecc_mul_g_eh": 103, "ecc_ptmul": 103, "ecc_shared_secret": 103, "ecc_sign_hash": 103, "ecc_verify_hash": 103, "ecckiila": 103, "ecconfig": [49, 51], "eccpoint_compute_public_kei": 103, "eccpoint_mult": 103, "eccurv": 103, "ecdh": [1, 3, 4, 8, 26, 72, 78, 80, 101, 106, 115], "ecdh_a": [108, 115], "ecdh_a_result": [108, 115], "ecdh_b": [108, 115], "ecdh_b_result": [108, 115], "ecdh_compute_kei": 103, "ecdh_compute_shared_restart": 103, "ecdh_ctx": 115, "ecdh_der": 103, "ecdh_direct": [72, 78], "ecdh_gen_public_restart": 103, "ecdh_non": [7, 26], "ecdh_sha1": [7, 26, 108, 115], "ecdh_sha224": [7, 26], "ecdh_sha256": [7, 26], "ecdh_sha384": [7, 26], "ecdh_sha512": [7, 26], "ecdhact": [7, 26], "ecdhbasicagr": 103, "ecdhrespons": [53, 72, 78], "ecdsa": [1, 3, 4, 8, 47, 72, 78, 101, 106, 115], "ecdsa_do_sign": 103, "ecdsa_do_verifi": 103, "ecdsa_do_verify_no_self_test": 103, "ecdsa_generate_keypair": 103, "ecdsa_non": [7, 47], "ecdsa_sha1": [7, 47, 115], "ecdsa_sha224": [7, 47], "ecdsa_sha256": [7, 47], "ecdsa_sha384": [7, 47], "ecdsa_sha512": [7, 47], "ecdsa_sign": [1, 3, 72, 78, 80, 103, 108], "ecdsa_sign_impl": 103, "ecdsa_sign_setup": 103, "ecdsa_sign_sig": 103, "ecdsa_signdigest": 103, "ecdsa_signdigestwithse": 103, "ecdsa_verifi": [1, 3, 72, 78, 80, 103, 108], "ecdsa_verify_sig": 103, "ecdsaact": [7, 47], "ecdsarespons": [53, 72, 78], "ecdsasign": 103, "ecdsasignact": [7, 47], "ecdsaverifyact": [7, 47], "ecgen": 44, "ecgroup": 103, "ecgroup_consgfp": 103, "ecgroup_consgfp_mont": 103, "eckeypairgener": 103, "ecmethod": 103, "ecmqv": 103, "ecnr": 103, "ecoper": 103, "ecp_mul_comb": 103, "ecp_mul_mxz": 103, "ecp_mul_restartable_intern": 103, "ecp_nistz256_points_mul": 103, "ecpoint": 103, "ecpoints_mul": 103, "ecprivatekeyimpl": 103, "ectest": [0, 44, 53, 72], "ectestertarget": [53, 72, 78], "ectestertargetleia": [53, 72, 78], "ectestertargetpcsc": [53, 72, 78, 116], "ed25519": 111, "ed25519_keypair": 103, "ed25519_keypair_from_se": 103, "ed25519_sha512_public_kei": 103, "ed25519_sha512_sign": 103, "ed25519_sha512_verifi": 103, "ed25519_sign": 103, "ed25519_verifi": 103, "ed448": 103, "edg": [9, 62, 113], "edit": [0, 53, 84, 105], "edu": 85, "edward": [34, 48, 103], "edwardsmodel": [7, 34, 107], "efd": [0, 7, 14, 102, 103, 114, 119], "efdcoordinatemodel": 10, "efdcurvemodel": 34, "efdformula": [7, 14, 17], "effici": [70, 103], "either": [3, 8, 40, 73, 78, 87, 98, 99, 102, 103, 108, 114, 116], "elast": 85, "element": [13, 28, 29, 30, 31, 32, 33, 51, 103], "element_s": 70, "elf": [3, 5, 106], "elf_fil": [5, 109], "elf_nam": [106, 108], "elif": [113, 114, 115], "elimin": [39, 63, 114], "eliminate_i": 114, "ellipt": [7, 10, 11, 12, 26, 27, 34, 44, 47, 101, 103, 104, 105, 107, 108, 119], "ellipticcurv": [7, 11, 12, 44, 63, 104, 105, 108, 110, 112, 113, 114], "els": [98, 103, 107, 110, 111, 112, 113, 114], "em": 64, "embed": 101, "empti": 98, "emul": [1, 3, 101, 118], "emulatorresult": 108, "emulatortarget": [1, 3, 108], "en": 103, "enabl": [49, 51, 65, 66, 67, 68, 102, 106, 109], "enable_spawn": [111, 114], "encod": [11, 78, 108, 110, 114], "encode_paramet": [72, 78], "encount": 60, "end": [3, 57, 73, 78, 87, 99, 109, 110, 114], "endian": 46, "endswith": 114, "engin": [58, 59, 60, 61, 101, 118], "enginn": 114, "enhanc": 103, "ensur": [30, 31, 110], "enter": [9, 51, 60], "enter_act": [7, 9, 58, 60], "entir": 52, "entri": [3, 114], "enum": [8, 36, 43, 65, 78, 106], "enum_nam": [106, 107], "enumdefin": [4, 7, 8], "enumer": [8, 36, 101, 110, 111, 112, 113, 114], "epa": [118, 119], "epa_distinguish_precomp": 110, "epa_precomp": 110, "eprint": [103, 119], "equal": [3, 7, 14, 19, 45, 73, 78, 93, 99, 105, 108], "equals_affin": [7, 14, 19, 45], "equals_sc": [7, 14, 19, 45], "equat": [7, 34, 63, 114], "equival": [52, 70], "erron": 114, "error": [0, 7, 51, 72, 78, 110, 111, 112, 114], "etc": 87, "euclid": 29, "euler": [7, 8, 109], "eval": [52, 112, 114], "eval_tree_asymmetr": 112, "eval_tree_asymmetric1": 114, "eval_tree_binomial1": 114, "eval_tree_symmetr": 112, "eval_tree_symmetric1": 114, "evalu": [9, 50, 52, 112], "even": [110, 112], "event": [51, 101], "everest": 103, "everi": 20, "evp_ec_gen": 103, "evp_keymgmt_gen": 103, "evp_keymgmt_util_gen": 103, "evp_pkey_gener": 103, "evp_pkey_keygen": 103, "evp_pkey_q_keygen": 103, "exactli": [3, 73, 78, 99, 103], "examin": [2, 111, 112, 113, 114, 115], "exampl": [1, 19, 39, 51, 73, 78, 99, 101, 102, 109, 115, 117], "example_trac": 117, "except": [9, 13, 20, 52, 62, 73, 78, 101, 102, 103, 107, 110, 111, 114, 119], "exchang": [26, 103], "exclus": [3, 87], "exec": 52, "execut": [9, 15, 43, 51, 52, 60, 101, 107, 108, 114, 115], "executor": 52, "exist": [9, 62, 114], "exit": [3, 7, 9, 14, 15, 26, 27, 28, 29, 35, 36, 45, 52, 60], "exit_act": [7, 9, 58, 60], "exot": 103, "expand": [0, 7, 14, 58, 62, 114], "expand_all_mul": [7, 14, 23], "expand_all_nopower2_mul": [7, 14, 23], "expand_formula_set": [7, 14, 18, 111], "expand_func": 111, "expand_out": 111, "expanded_path": 114, "expans": [18, 46], "expect": [39, 78], "explicit": [102, 119], "exploit": 115, "explor": [107, 118], "exponenti": [103, 119], "export": [3, 72, 78], "export_fals": [72, 78], "export_tru": [72, 78], "exportenum": [53, 72, 78], "exportrespons": [53, 72, 78], "expos": 103, "expr": [25, 33, 50], "express": [10, 15, 16, 17, 19, 21, 25, 34, 101, 107], "ext": 102, "ext_add": 111, "ext_dbl": 111, "extend": [29, 103, 111, 113], "extens": [104, 105, 108, 109, 112, 113, 114, 117], "extern": [9, 62, 72, 78], "external_clock": [95, 99], "external_clock_frequencti": [95, 99], "external_clock_multipli": [95, 99], "external_clock_phase_shift": [95, 99], "external_clock_resampler_en": [95, 99], "external_clock_resampler_mask": [95, 99], "external_clock_threshold": [95, 99], "external_clock_time_bas": [95, 99], "extgcd": [7, 28, 29], "extra": [102, 114], "extract": [101, 103], "f": [62, 85, 98, 99, 104, 105, 110, 111, 112, 114], "f1a8a441b6d0e9600e33ccf16f9b8291": 110, "f2m": [72, 78], "fact": 115, "factor": [63, 92, 110], "factor_i": 110, "factor_list": 114, "factor_set": 114, "factor_sets_extend": 114, "factor_sets_nonhomo": 114, "factor_sets_nonhomo_extend": 114, "factorint": 110, "fake": [0, 7, 14, 110], "fake_add": 110, "fake_dbl": 110, "fake_mult": 110, "fakeadditionformula": [7, 14, 19, 110], "fakedifferentialadditionformula": [7, 14, 19], "fakedoublingformula": [7, 14, 19, 110], "fakeformula": [7, 14, 19], "fakeladderformula": [7, 14, 19], "fakenegationformula": [7, 14, 19], "fakepoint": [7, 14, 19, 110], "fakescalingformula": [7, 14, 19], "faketriplingformula": [7, 14, 19], "fall": [65, 66, 67, 68], "fals": [3, 5, 9, 11, 12, 16, 19, 27, 29, 37, 39, 40, 41, 42, 45, 50, 52, 62, 63, 70, 73, 76, 78, 93, 99, 107, 110, 112, 113, 114, 115], "false_neg": 112, "false_po": 112, "far": 112, "fast": [85, 103, 119], "fastdtw": [85, 102], "faster": 102, "fastexp": 103, "fatal": 51, "fe52_add": 103, "fe52_mul": 103, "fe52_sqr": 103, "fe52_sub": 103, "few": [106, 107, 110], "ff": 114, "ffd": [63, 119], "fgcd": 110, "fh": 114, "fiat": 103, "field": [7, 11, 14, 19, 45, 103, 106, 107, 114, 119], "fig": [111, 112, 114], "figsiz": [21, 112, 114], "figur": 90, "file": [5, 44, 99, 101, 102, 106, 111], "filenam": 21, "fill": [101, 117], "filter": [0, 53, 63, 84, 101, 110, 113, 114, 117], "filter_bandpass": [53, 84, 88], "filter_bandstop": [53, 84, 88], "filter_frequ": [95, 99], "filter_highpass": [53, 84, 88, 117], "filter_lowpass": [53, 84, 88, 117], "filter_malloc": 3, "filter_nonhomo": [63, 114], "filter_rang": [95, 99], "filter_typ": [95, 99], "filterwarn": 104, "final": [3, 110, 114], "find": [63, 112, 116], "find_all_path": [14, 21], "find_peak": [89, 112], "finish": 52, "fire": [65, 66, 67, 68], "firmwar": [3, 77, 79, 109], "first": [3, 14, 15, 20, 104, 105, 106, 108, 109, 112, 113, 114, 115, 116, 117], "first_ecdh": 115, "first_set": 93, "firstrow": [107, 110, 112, 113], "fit": [85, 87, 98, 101, 110], "fix": [0, 7, 35, 42, 72, 78, 103, 107, 110, 112, 114], "fixed_point": 110, "fixed_smul_cmb": 103, "fixedwindowltrmultipli": [7, 35, 42, 112, 113], "flag": 3, "flake8": 102, "flash": [0, 1, 3, 53, 72, 77, 106, 109], "flashabl": [53, 72, 77, 79], "flavor": 103, "flint": [0, 7, 28, 51, 102], "flintmod": [7, 28, 29, 30], "flip": 112, "flip_0": 112, "flip_1": 112, "flip_proba": 112, "fliparoo": [0, 7, 14, 18], "float": [21, 22, 55, 65, 66, 67, 68, 70, 85, 89, 99], "float16": [66, 95, 99], "float32": [67, 68, 95, 99], "float8": [95, 99], "flush": [111, 114], "fly": [41, 42], "fmpz": 30, "fmpz_mod": 30, "fn": 52, "fname": 90, "focus": [101, 110], "follow": [2, 3, 51, 98, 101, 103, 104, 105, 107, 108, 111, 114, 116], "forest": 9, "fork": 52, "form": [10, 11, 27, 34, 41, 46, 51, 62, 63], "format": [44, 78, 97, 98, 99, 100, 102], "formatenum": [53, 72, 78], "formula": [0, 1, 2, 4, 7, 8, 9, 10, 11, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 51, 58, 60, 63, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 118, 119], "formula_cal": 115, "formula_class": [110, 114], "formula_combin": [110, 114], "formula_count": 113, "formula_def": 111, "formula_group": [110, 114], "formula_iv": [7, 14, 22], "formula_nod": 115, "formula_pair": 110, "formula_similar": [7, 14, 22, 111], "formula_similarity_ab": [7, 14, 22], "formula_similarity_fuzz": [7, 14, 22, 111], "formulaact": [7, 14, 15, 112, 113, 114], "formulagraph": [7, 14, 20, 21], "found": [29, 46, 98], "fourth": [104, 105], "fp": [72, 78], "fp_default_coord": 103, "fr": 119, "framework": 77, "free": 101, "free_symbol": 114, "freedom": 93, "freq": 113, "frequenc": [64, 65, 66, 67, 68, 88, 99, 109], "fresh": 52, "from": [3, 9, 10, 11, 17, 29, 37, 38, 44, 45, 46, 47, 51, 60, 62, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 88, 91, 94, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "from_bool": [72, 78], "from_byt": [1, 3, 72, 73, 78, 95, 99], "from_der": [7, 47], "from_io_map": [58, 62, 110, 114], "from_raw": [72, 83], "from_set": [58, 62, 110, 114], "from_weierstrass": [7, 34], "fromarrai": [69, 71], "fromhex": 116, "fromtraceset": [69, 71], "frozenset": [4, 8, 43], "fset": 114, "fset_map": 114, "fset_nonhomo": 114, "fset_nonhomo_map": 114, "full": [10, 37, 39, 40, 103, 114], "full_nam": [7, 10], "full_weierstrass": [7, 34], "fulli": [98, 112], "fullprecompmultipli": [7, 35, 39, 112, 113], "fullprecomput": 103, "fullrandom": [72, 78], "func": [52, 70, 111, 114], "function": [9, 12, 14, 18, 25, 44, 46, 48, 50, 51, 52, 60, 61, 63, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 119], "functool": [110, 112, 113, 114], "furnish": 101, "further": 114, "furthermor": [2, 112], "futur": [49, 52, 111, 112, 114], "fw": [3, 109], "fw_path": [3, 77, 79], "g": [2, 15, 16, 17, 19, 43, 60, 63, 72, 78, 79, 85, 89, 101, 103, 107, 110, 112, 113, 114], "ga": 103, "gain": [102, 108, 114], "gap": [62, 101], "gather": 105, "gaussian": [104, 105], "gcd": [7, 8, 28, 29, 106, 107, 108, 110, 114], "gcry_ecc_ecdsa_sign": 103, "gcry_ecc_ecdsa_verifi": 103, "gcry_ecc_eddsa_sign": 103, "gcry_ecc_eddsa_verifi": 103, "gcry_pk_encrypt": 103, "gcry_pk_genkei": 103, "gcrypt": 103, "ge_double_scalarmult_vartim": 103, "ge_p1p1": 103, "ge_p2": 103, "ge_p3": 103, "ge_precomp": 103, "ge_scalarmult_bas": 103, "gecc": [38, 39, 46, 103, 111, 119], "gemalto": 116, "gen": [3, 103, 114], "gener": [1, 3, 4, 7, 8, 9, 11, 27, 29, 30, 31, 32, 33, 44, 52, 55, 72, 78, 80, 100, 101, 102, 103, 104, 105, 107, 109, 110, 114, 118], "generate_fliparood_formula": [7, 14, 20], "generate_partitioned_formula": [7, 14, 23], "generate_switched_formula": [7, 14, 24], "generated_point": [104, 105], "generated_trac": [104, 105], "generatekei": 103, "generatekeypair": 103, "generatekeypairimpl": 103, "generatenistec": 103, "generatepublickei": 103, "generaterespons": [53, 72, 78], "generatesignatur": 103, "generator_i": 110, "get": [3, 8, 9, 11, 19, 51, 60, 62, 65, 66, 67, 68, 79, 95, 98, 102, 104, 105, 114, 115], "get_arg": [106, 107], "get_by_index": [7, 9, 115], "get_by_kei": [7, 9], "get_categori": [7, 44], "get_context": [111, 114], "get_index": [72, 78], "get_param": [7, 10, 11, 44, 72, 78, 106, 109, 111, 112, 115], "get_posit": 112, "get_public_kei": 103, "get_trac": [72, 80], "get_vari": [64, 68, 109], "getattr": [111, 114], "getconfig": [49, 51, 114], "getcontext": 9, "getmultipli": 103, "getsourc": [111, 114], "gfec_base_point_mul": 103, "gfec_basepointproduct": 103, "gfec_mulbasepoint": 103, "gfec_mulpoint": 103, "gfec_point_add": 103, "gfec_point_mul": 103, "gfec_point_prod": 103, "git": [102, 103], "github": [44, 102, 103, 108], "gitweb": 103, "give": [8, 114, 115], "given": [2, 3, 8, 15, 19, 25, 45, 52, 60, 63, 65, 66, 67, 68, 70, 73, 78, 87, 88, 98, 99, 101, 108, 110, 112, 114, 115], "global_titl": [95, 99], "glv": 103, "gmp": [0, 7, 28, 51, 102, 114], "gmpmod": [7, 28, 29, 31], "gmpy2": [28, 51, 102], "gnupg": 103, "go": [2, 3, 5, 104, 105, 108, 111, 112, 114], "go1": 103, "golang": 103, "good": 3, "googl": 103, "googleapi": 103, "gordon": 38, "gost": 103, "got": 114, "goubin": [60, 119], "gpu": 70, "gputracemanag": [53, 69, 70], "gracefulli": 11, "gram": 113, "grant": 101, "graph": [0, 7, 14, 20], "greater": 52, "greatest": 29, "grei": 112, "group": [46, 93, 103, 112, 114], "grow": 62, "guarante": 110, "guard": [36, 37, 40, 41, 42], "gueron": 119, "guess": [104, 105], "guess_on": [104, 105], "guess_zero": [104, 105], "guessed_scalar": [55, 56], "guid": 119, "gx": [104, 105, 108, 112, 113, 114], "gy": [104, 105, 108, 112, 113, 114], "gz": [104, 105, 108], "h": [103, 104, 105, 108, 112, 113, 114], "h2": 103, "h3": 103, "h5py": 102, "h_pad": 112, "ha": [3, 9, 11, 16, 29, 39, 47, 52, 62, 65, 66, 67, 68, 89, 94, 98, 103, 107, 110, 111, 112], "hac": 119, "hacl": 111, "hacl_p256_dh_initi": 103, "half": [15, 16, 17, 19, 103], "ham": [57, 108, 112], "hamburg": 103, "hammingdist": [53, 54, 57], "hammingweight": [53, 54, 57, 104, 105, 108, 112, 113], "handbook": [103, 119], "handl": [7, 11, 51, 64, 68, 117], "hannel": 101, "happen": [9, 51, 60, 78, 112, 115], "hard": [103, 114], "hasattr": [106, 107], "hash": [8, 47], "hash_algo": [7, 26, 47, 80], "hash_non": 8, "hash_sha1": 8, "hash_sha224": 8, "hash_sha256": 8, "hash_sha384": 8, "hash_sha512": 8, "hash_typ": [1, 4, 7, 8, 106, 107, 108, 109], "hashtyp": [4, 7, 8, 106, 107, 108, 109], "have": [19, 36, 46, 52, 62, 102, 103, 104, 105, 106, 110, 112, 114], "hdf5": [0, 53, 95], "hdf5meta": [53, 95, 98], "hdf5traceset": [53, 95, 98], "header": [103, 107, 110, 112, 113], "heatmap": 112, "hehcc": [46, 119], "height": [7, 9, 58, 62, 108, 109, 112, 113, 117], "hellman": 26, "here": [62, 111], "herebi": 101, "hex": [5, 106, 116], "hex_fil": [5, 109], "hex_nam": [106, 108], "hexadecim": 83, "hexlifi": [108, 115], "hg": 103, "hierarch": 98, "high": [3, 88, 117, 119], "highpass": [88, 117], "histogram": 113, "hit": [13, 114], "hit_map": 114, "hit_set": 114, "hnm": 103, "hold": [3, 10, 65, 66, 67, 68, 73, 78, 99], "holder": 101, "holoview": [101, 102, 104, 105, 108, 109, 112, 113, 114, 117], "homogen": [10, 63, 103, 114], "homogweight": [7, 10], "host": [1, 2, 3, 4, 73, 76, 78, 99], "hosttarget": [1, 3, 106], "how": [3, 51, 77, 78, 83, 87, 103, 104, 105, 109, 112, 114, 116, 118], "howev": [3, 102, 114], "html": [103, 107, 110, 111, 112, 113, 114], "http": [44, 57, 85, 103, 108, 111, 114, 119], "huge": [98, 107], "hv": [104, 105, 108, 109, 112, 113, 114, 117], "hwcd": 103, "hybrid": [72, 78], "hyper": 119, "hyperellipt": 119, "hz": [65, 66, 67, 68], "i": [3, 4, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 51, 52, 60, 62, 63, 68, 70, 73, 76, 77, 78, 85, 86, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "iacr": [103, 119], "id": [7, 43, 78, 101, 113], "ideal": 60, "ident": [53, 54, 57], "identifi": [52, 108, 109], "ifma_ed25519_mul_basepoint": 103, "ifma_ed25519_mul_point": 103, "ifma_ed25519_prod_point": 103, "ignor": [51, 104], "im": 111, "im_data": 111, "im_iv": 111, "im_out": 111, "imag": [1, 3, 72, 73, 78, 95, 99], "imaginari": [3, 73, 78, 99], "impl": [46, 103], "implement": [2, 3, 4, 5, 8, 11, 26, 28, 29, 30, 31, 32, 33, 35, 47, 51, 63, 70, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 115], "impli": 101, "implicitli": 103, "implsign": 103, "impltarget": [1, 3], "implverifi": 103, "import": [9, 10, 11, 62, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "import_modul": [111, 114], "importlib": [111, 114], "importlib_resourc": 111, "improv": [85, 114], "imshow": 111, "in_notebook": [49, 52], "includ": [4, 9, 42, 51, 85, 101, 102], "inclus": 87, "incomplet": 114, "incorrect": [104, 105], "increas": [104, 105], "increment": [72, 78], "independ": 107, "independent_opt": 107, "index": [15, 16, 17, 19, 62, 87, 98, 103, 110, 111, 112], "indic": [3, 9, 73, 78, 87, 89, 99, 110, 115], "indistinguish": 112, "individu": 9, "inf": 85, "infin": [11, 36, 37, 38, 39, 40, 41, 42, 44, 45, 72, 78, 110], "infinitypoint": [7, 11, 44, 45, 104, 105, 108, 110], "influenc": 112, "info": [72, 78, 116], "inforespons": 78, "inform": [15, 16, 17, 19, 101, 103, 108, 114], "informatik": 103, "infti": [44, 112, 113, 114], "init": [3, 35, 36, 37, 38, 39, 40, 41, 42, 102, 104, 105, 108, 109, 110, 112, 113, 114], "init_par": 112, "init_point": 112, "init_prng": [1, 3, 108, 109], "init_zero": 112, "initarg": 52, "initi": [16, 36, 37, 38, 39, 40, 41, 42, 52, 60, 104, 105, 108, 112], "inplac": [95, 96, 97, 98, 99, 100], "input": [3, 14, 15, 16, 17, 19, 21, 36, 37, 38, 39, 40, 41, 42, 47, 60, 62, 65, 66, 67, 68, 70, 76, 77, 82, 83, 96, 97, 98, 99, 100, 107, 109, 110, 111, 112, 114], "input_index": [14, 15, 16, 17, 19], "input_nod": [14, 20, 21], "input_point": [14, 15], "inputnod": [7, 14, 21], "ins": [72, 73], "ins_alloc": [72, 78], "ins_allocate_ka": [72, 78], "ins_allocate_sig": [72, 78], "ins_buff": [72, 78], "ins_cleanup": [72, 78], "ins_clear": [72, 78], "ins_ecdh": [72, 78], "ins_ecdh_direct": [72, 78], "ins_ecdsa": [72, 78], "ins_ecdsa_sign": [72, 78], "ins_ecdsa_verifi": [72, 78], "ins_export": [72, 78], "ins_gener": [72, 78], "ins_get_info": [72, 78], "ins_perform": [72, 78], "ins_set": [72, 78], "ins_set_dry_run_mod": [72, 78], "ins_transform": [72, 78], "insert": [110, 116], "insid": [7, 9, 14, 15, 26, 27, 28, 29, 35, 36, 45, 47, 58, 60, 102, 106, 116], "inspect": [111, 114], "inspector": [0, 53, 95, 102], "inspectortraceset": [53, 95, 99], "inspir": [60, 63], "instal": [28, 29, 68, 114, 116], "instanc": [8, 36, 47, 52, 67, 104, 105, 108], "instead": 112, "instruct": 78, "instructionenum": [53, 72, 78], "int": [3, 9, 10, 11, 12, 15, 16, 17, 19, 21, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 55, 56, 57, 60, 62, 63, 65, 66, 67, 68, 70, 73, 76, 77, 78, 82, 83, 85, 87, 88, 89, 91, 92, 94, 99, 110, 112, 113, 114, 115], "int16": [95, 99, 114], "int32": [95, 99], "int8": [95, 99], "integ": [3, 8, 28, 29, 30, 31, 32, 33, 46, 62, 73, 78, 87, 99, 112], "intenum": [73, 78, 99], "interact": [3, 117], "interleav": 103, "intermedi": [14, 15, 22, 25, 63, 70, 112, 113, 114, 115], "intermediate_valu": 70, "intern": 107, "interrog": 102, "intersect": [92, 114], "intflag": 3, "introduc": [15, 16, 17, 19, 114], "inv": [1, 4, 7, 8, 43, 106, 107, 108, 109, 110], "inv_eul": 8, "inv_gcd": 8, "invalidate_cach": [111, 114], "invari": 12, "invers": [4, 7, 8, 15, 16, 17, 19, 28, 29, 30, 31, 32, 33, 50, 106, 107, 108, 109, 112], "invert": [13, 29, 30, 31, 32, 33, 51, 53, 84, 91, 110, 112], "investig": 114, "io": [44, 103, 110, 114], "ipp": 111, "ippsgfpecpublickei": 103, "ippsgfpecsharedsecretdh": 103, "ippsgfpecsigndsa": 103, "ippsgfpecverifydsa": 103, "ipympl": [112, 114], "ipynb": 108, "ipython": [107, 110, 111, 112, 113, 114], "irrelev": 112, "irrespect": [19, 45], "is_add": [14, 21], "is_div": [14, 21], "is_id": [14, 21], "is_inv": [14, 21], "is_leaf": [7, 9, 58, 62], "is_mul": [14, 21], "is_neg": [14, 21], "is_neutr": [7, 11], "is_on_curv": [7, 11, 106, 108], "is_pow": [14, 21], "is_residu": [28, 29, 30, 31, 32, 33], "is_root": [7, 9, 58, 62], "is_sqr": [14, 21], "is_sub": [14, 21], "ish": [77, 83], "isinst": [110, 112, 113, 114], "iso7816": [0, 53, 72], "iso7816target": [53, 72, 73, 74, 78, 81], "isomorph": 103, "issu": 114, "item": [10, 52, 62, 95, 98, 110, 111, 112, 113, 114], "item_s": 70, "iter": [3, 9, 20, 24, 52, 62, 73, 78, 98, 99, 103], "iter_path_revers": [7, 9, 58, 62], "itertool": [110, 111, 114], "its": [2, 9, 15, 16, 17, 19, 25, 29, 30, 31, 32, 33, 38, 62, 63, 91, 102, 103, 105, 109, 114], "itself": 57, "iv": 111, "ivs_norm": [7, 14, 18, 22], "iz2": 103, "j": [20, 85, 102, 111, 112, 114, 119], "j08ny": 44, "jac": [103, 111], "jac3_add": 111, "jac3_adds_fix": 111, "jac3_dbl": 111, "jac3_dbls_fix": 111, "jac_add": 111, "jac_dbl": 111, "jacobi": [7, 28, 29], "jacobian": [103, 110, 111, 114], "jan": 101, "jancar": 101, "jaobian": 103, "jasper": 85, "java": 103, "javacard": [78, 116], "jdk": 103, "jean": 119, "job": 111, "join": [106, 108, 109, 113, 114], "joinpath": 111, "journal": 119, "json": 44, "jupyt": [52, 111, 114], "jusko": 101, "just": [3, 9, 19, 52, 60, 62, 102, 103, 114], "k": [20, 46, 60, 63, 72, 78, 98, 103, 112, 114], "ka_typ": 78, "karatsuba": [7, 8, 107], "keep": 52, "kei": [3, 4, 8, 9, 11, 26, 27, 47, 49, 52, 72, 78, 95, 98, 101, 103, 106, 107, 110, 112, 114], "key_agr": [0, 7, 108, 115], "key_class": 78, "key_gener": [0, 7, 108, 115], "key_length": 78, "keyagr": [7, 26, 78], "keyagreementenum": [53, 72, 78, 116], "keybuildenum": [53, 72, 78], "keyclassenum": [53, 72, 78], "keyenum": [53, 72, 78], "keyerror": 98, "keygen": [1, 3, 4, 103, 106, 109, 115], "keygen_ctx": 115, "keygenact": [7, 27], "keygener": [7, 27, 108, 115], "keypair": [3, 27, 72, 78, 106, 109], "keypair_both": [72, 78], "keypair_loc": [72, 78], "keypair_remot": [72, 78], "keypairenum": [53, 72, 78], "keyword": 107, "kind": 101, "kinv": 112, "klass": 110, "kmackai": 103, "kmethod": 103, "know": [104, 105, 108, 109, 110], "knowledg": 108, "known": [3, 15, 73, 78, 99], "kolmogorov": 93, "krasnov": 119, "ks_mod": 114, "ks_test": [53, 84, 93], "kvar": 114, "kwarg": [3, 8, 36, 50, 52, 59, 76, 77, 90, 96, 97, 98, 99, 100, 112], "l": 119, "l2r": 103, "label": [14, 21, 111, 112, 113], "lack": 98, "ladd": [1, 3, 15, 16, 17, 19, 40, 103, 111], "ladder": [0, 7, 15, 35, 103], "ladder_": 103, "ladder_post": 103, "ladder_pr": 103, "ladder_step": 103, "ladderefdformula": [7, 14, 17, 111], "ladderformula": [7, 14, 15, 16, 17, 19, 40, 110], "laddermultipli": [7, 35, 40], "lambda": [11, 103, 107, 110, 111, 112, 113, 114], "lang": 102, "larg": [8, 78, 107, 117], "larger": 89, "largest": [65, 66, 67, 68, 85], "last": [9, 14, 20, 62], "later": 112, "latest": [78, 103], "latest_vers": 78, "launch": 52, "lazi": [9, 62], "lc": 114, "lead": [60, 109, 114], "leaf": [9, 62, 114], "leaf_subclass": 107, "leak": [57, 112, 113, 115, 119], "leakag": [0, 53, 57, 72, 93, 101, 104, 112, 118], "leakage_model": [0, 53, 54, 55, 72, 80, 104, 105, 108, 112, 113], "leakagemodel": [53, 54, 55, 57, 80], "leakagetarget": [53, 72, 80, 104, 105], "least": 114, "leav": [7, 9, 58, 62, 110, 113, 114], "ledger": 108, "lee": 38, "left": [2, 36, 37, 39, 41, 46, 103, 107, 112, 113, 119], "leia": [0, 53, 72, 78, 101, 102], "leiatarget": [53, 72, 78, 81, 116], "len": [91, 105, 107, 110, 111, 112, 113, 114, 117], "length": [3, 29, 30, 31, 32, 33, 37, 39, 40, 46, 57, 73, 78, 85, 87, 89, 99, 103, 105, 107], "let": [107, 110, 111, 112, 114], "level": [14, 21, 101], "levelordergroupit": 112, "levelorderit": 114, "lf": 114, "lh": 111, "liabil": 101, "liabl": 101, "lian": [9, 62], "lib_add": 111, "lib_dbl": 111, "lib_formula": 111, "lib_formula_def": 111, "libgcrypt": 111, "libps3000": 68, "libps3000a": 68, "librari": [13, 28, 51, 68, 102, 114, 118], "libressl": 111, "libtom": 103, "libtommath": 102, "lift": 11, "like": [9, 15, 16, 17, 19, 38, 42, 46, 52, 65, 66, 67, 68, 98, 99, 102, 103, 108, 111, 112, 116], "lim": 38, "limit": [8, 52, 101, 114], "line": 116, "linear": 85, "linearli": 87, "link": [83, 103, 119], "linux": [102, 116], "list": [2, 3, 9, 10, 15, 16, 17, 19, 20, 21, 25, 34, 44, 46, 52, 55, 56, 60, 62, 63, 65, 66, 67, 68, 70, 76, 78, 80, 85, 89, 94, 107, 110, 111, 112, 113, 114], "listen": [65, 66, 67, 68], "lite": [66, 77, 109], "littl": [3, 46, 73, 78, 99], "liu": 103, "live": 52, "lliptic": 101, "lm": [112, 113], "load": [44, 47, 98, 105, 108, 111, 112, 117], "load_categori": [7, 44], "load_expand": 114, "load_param": [7, 44], "load_params_ecgen": [7, 44, 114], "load_params_ectest": [7, 44, 110], "loc": 112, "local": [7, 9, 50, 110, 112, 113, 114, 115], "locat": 105, "log": [49, 51, 52, 63, 110], "log_2": 42, "log_scal": [95, 99], "loggingconfig": [49, 51], "long": [3, 52, 77, 83, 105, 109], "longest": [9, 62], "look": [103, 107, 108, 112, 113, 114], "lopez": 103, "lot": [39, 103], "loui": [9, 62], "low": [3, 88, 114, 117], "lowest": [3, 73, 78, 99], "lowpass": [88, 117], "lp": 114, "lru_cach": 112, "lsb": 37, "lstrip": 112, "ltc_ecc_mulmod_tim": 103, "ltc_ecc_projective_add_point": 103, "ltc_ecc_projective_dbl_point": 103, "ltr": [2, 35, 36, 37, 38, 39, 41, 42, 46, 107, 110, 112, 113, 114], "ltrmultipli": [7, 35, 37, 42, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115], "lysat": 103, "m": [35, 39, 42, 103, 107, 112, 113], "m2e": [7, 48], "m2sw": [7, 48], "m2te": [7, 48], "m61": [46, 119], "machin": [3, 52], "macsorlei": 119, "madd": [103, 111], "mai": [46, 52, 62, 102, 103, 112], "main": [103, 113], "major": [60, 112], "make": [5, 9, 36, 62, 63, 102, 106, 108, 114], "makefil": 102, "manag": [9, 51, 70], "mani": [52, 65, 66, 67, 68, 78, 103], "manipul": [84, 95], "manual": 103, "map": [3, 10, 12, 19, 36, 37, 38, 39, 40, 41, 42, 45, 49, 52, 53, 58, 60, 62, 63, 68, 71, 77, 78, 83, 91, 94, 98, 103, 108, 110, 111, 112, 113], "map_to_affin": [53, 58, 63], "mapd": 114, "mapped_input": 110, "marc": [9, 62, 85], "masaryk": 101, "mask_04": [72, 78], "match": [0, 8, 53, 84, 85, 103, 107, 114], "match_part": [53, 84, 89], "match_pattern": [53, 84, 89], "math": [103, 112], "mathemat": 119, "matplotlib": [102, 104, 105, 111, 112, 114, 117], "matrix": 70, "matter": 19, "max": [72, 78, 104, 105, 113], "max_adc_valu": [64, 68], "max_dist": 85, "max_length": 105, "max_offset": 85, "max_tasks_per_child": 52, "max_val": [104, 105], "max_valu": 91, "max_work": [52, 111, 112, 114], "maxim": [85, 114], "maximum": [52, 85, 91, 92, 111], "mazur": 119, "mb": 103, "mbed": 103, "mbedtls_ecdh_compute_shar": 103, "mbedtls_ecdh_gen_publ": 103, "mbedtls_ecdsa_genkei": 103, "mbedtls_ecdsa_sign": 103, "mbedtls_ecdsa_sign_restart": 103, "mbedtls_ecdsa_verifi": 103, "mbedtls_ecdsa_verify_restart": 103, "mbedtls_ecp_gen_keypair": 103, "mbedtls_ecp_gen_keypair_bas": 103, "mbedtls_ecp_mul": 103, "mbedtls_ecp_mul_restart": 103, "mbedtls_ecp_mul_shortcut": 103, "mbedtls_ecp_muladd_restart": 103, "mbx_ed25519_public_kei": 103, "mbx_ed25519_sign": 103, "mbx_ed25519_verifi": 103, "mbx_x25519": 103, "mbx_x25519_public_kei": 103, "mccurlei": 38, "mean": [52, 57, 91, 98, 104, 105, 108, 114, 115], "measur": [50, 64, 65, 66, 67, 68, 72, 101, 102, 118], "measure_init": 112, "measure_multipli": 112, "memori": [8, 70, 98, 114], "mention": 103, "merchant": 101, "merg": [58, 62, 101], "messag": [3, 47, 52, 77, 83, 108], "meta": [14, 15, 16, 17, 19, 69, 71, 84, 94, 105], "meta_path": [17, 111], "metadata": [71, 94, 96, 98], "meth": 103, "method": [3, 8, 29, 36, 37, 38, 39, 40, 41, 42, 52, 59, 65, 66, 67, 68, 98, 101, 103, 108, 111, 114], "metric": [0, 7, 14, 111, 112], "mhz": 109, "mi": 85, "microprocessor": 106, "microsoft": 103, "might": [8, 10, 65, 66, 67, 68, 110, 112, 114], "mike": 103, "miller": 29, "miller_rabin": [7, 28, 29, 110], "million": [101, 117], "millisecond": [3, 65, 66, 67, 68, 76, 77, 82, 83], "min": [104, 105, 113], "min_adc_valu": [64, 68], "min_correl": 85, "min_val": [104, 105], "min_valu": 91, "minim": 85, "minimum": [91, 92, 104, 105], "misalign": 105, "misc": [0, 28, 29, 110, 112, 114], "miscellan": 49, "mistak": 103, "mit": 101, "mitarbeit": 103, "mix": [36, 79, 103], "mladd": [103, 111], "mm": 103, "mod": [0, 7, 11, 12, 15, 19, 26, 27, 45, 47, 51, 55, 80, 102, 103, 104, 105, 108, 110, 111, 112, 113, 114], "mod_add": 111, "mod_dbl": 111, "mod_implement": [49, 51, 114], "mod_rand": [1, 4, 7, 8, 106, 107, 108, 109], "mod_rand_reduc": 8, "mod_rand_sampl": 8, "mode": [78, 81, 111, 114], "mode_dry_run": [72, 78], "mode_norm": [72, 78], "model": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 15, 16, 17, 19, 44, 45, 48, 57, 72, 80, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115], "model_count": 107, "model_from": [7, 45], "model_nam": 107, "model_to": [7, 45], "modifi": [9, 46, 62, 101, 103, 110, 111, 114], "modul": [0, 1, 7, 14, 28, 35, 49, 53, 54, 58, 64, 69, 72, 84, 95, 111, 114], "modular": [2, 8, 29, 30, 31, 32, 33, 103, 110], "modulo": 8, "modulu": [29, 30, 31, 32, 33], "moeller": 103, "mont": 111, "montgomeri": [7, 8, 34, 40, 48, 103, 107], "montgomerymodel": [7, 34, 107, 111], "more": [103, 108, 114], "most": [3, 9, 62, 73, 78, 85, 99], "mostli": 36, "mozilla": 103, "mp": [104, 105], "mp_context": [52, 111, 114], "mpz": 31, "msb": 37, "msg": [7, 47], "mt1991": 119, "much": 87, "mul": [103, 113], "mul_bas": [8, 103], "mul_comba": 8, "mul_double_nonct": 103, "mul_g": 103, "mul_generator_ct": 103, "mul_karatsuba": 8, "mul_publ": 103, "mul_public_batch": 103, "mul_single_ct": 103, "mul_toom_cook": 8, "muladd": 103, "mulfliparoo": [7, 14, 20], "mulgen": 103, "mult": [0, 1, 3, 4, 7, 8, 26, 27, 43, 47, 54, 55, 56, 72, 80, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115], "mult_by_n": [7, 12], "mult_cl": 107, "mult_class": 110, "mult_count": 107, "mult_ecdh": 108, "mult_factori": 110, "mult_sm": 108, "multi": [103, 116], "multi_exp": 103, "multiexp": 103, "multipl": [3, 4, 7, 8, 9, 11, 12, 15, 16, 17, 19, 26, 35, 36, 37, 38, 39, 40, 41, 42, 55, 56, 60, 62, 71, 91, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 119], "multiplecontext": [19, 53, 58, 60, 110, 112, 113, 114], "multipli": [2, 11, 19, 27, 35, 36, 37, 38, 39, 40, 41, 42, 55, 56, 60, 103, 104, 105, 108, 110, 112, 114, 115], "multiply_add": 113, "multiply_dbl": 113, "multiply_par": 112, "multiply_trac": 113, "multiply_zero": 112, "multiprocess": [52, 104, 105, 111, 114], "multupl": 115, "muni": [101, 102], "must": [3, 46, 73, 78, 99], "mutablemap": [4, 10, 11, 15, 16, 17, 19, 21, 34, 60, 68, 98], "mx": 12, "my": 12, "mybind": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "mypi": 102, "n": [9, 12, 28, 29, 30, 31, 32, 33, 62, 63, 70, 104, 105, 108, 110, 112, 113, 114], "n1": 20, "n2": 20, "naf": [0, 7, 35, 46, 103], "nafw": 46, "nalysi": 101, "name": [1, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 19, 21, 25, 34, 36, 44, 63, 65, 73, 78, 99, 103, 106, 107, 109, 110, 111, 112, 113, 114, 116], "namedtemporaryfil": [111, 114], "nano": [1, 4], "nativ": [3, 73, 78, 97, 99], "navig": 115, "nbsphinx": 102, "nc": [112, 114], "ncol": 112, "ndarrai": [55, 70, 71, 85, 94], "ne": [72, 73], "necessari": [3, 73, 78, 99, 117], "need": [10, 36, 37, 38, 39, 40, 41, 42, 46, 104, 105, 106, 108, 114, 116], "neg": [1, 3, 7, 15, 16, 17, 19, 41, 42, 43, 73, 78, 99, 112, 113, 114], "negat": [11, 15, 41, 42, 91], "negationefdformula": [7, 14, 17], "negationformula": [7, 14, 15, 16, 17, 19, 41, 42, 110], "negoti": 73, "neither": 20, "net": 103, "networkx_graph": [14, 21], "neuromanc": [111, 114, 119], "neutral": [7, 10, 11, 104, 105, 108, 110], "neutral_is_affin": [7, 11], "never": 114, "new": [9, 15, 16, 17, 19, 52, 62, 67, 94, 114], "new_fset": 114, "newa": 101, "newkeyfromse": 103, "next": [65, 66, 67, 68, 109], "nfactor": 114, "ni": 20, "niel": 103, "niss": 103, "nist": [46, 103], "nist_generate_kei": 103, "nistp": 103, "nistz256": 103, "nk": 20, "no_ff": 107, "no_indep": 107, "no_inverse_act": [49, 51], "node": [7, 9, 14, 20, 21, 53, 58, 62, 110, 114, 115], "node_index": [14, 21], "nodemixin": [9, 62], "nois": [53, 54, 57, 108], "noise_sd": [104, 105], "noisi": 112, "noisy_oracl": 112, "nok": 114, "non": [13, 41, 42, 46, 51, 52, 60, 63, 92, 114], "non_residue_act": [49, 51], "nonc": 47, "none": [3, 4, 7, 8, 9, 11, 21, 26, 36, 37, 38, 39, 40, 41, 42, 44, 47, 50, 51, 52, 59, 60, 62, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 87, 94, 98, 99, 102, 104, 105, 107, 110, 111, 112, 113, 114, 115], "noninfring": 101, "noninvertibleerror": [7, 13, 29, 30, 31, 32, 33, 51, 110, 114], "noninvertiblewarn": [7, 13, 51], "nonresidueerror": [7, 13, 51], "nonresiduewarn": [7, 13, 51], "norm": 18, "normal": [53, 84, 91, 104, 105, 112], "normalize_trac": [104, 105], "normalize_wl": [53, 84, 91], "normalnoic": [53, 54, 57, 112], "note": [3, 13, 20, 73, 78, 102, 107, 110, 111, 112, 114], "notebook": [52, 101, 104, 105, 107, 108, 109, 110, 111, 112, 114, 116, 117], "noth": 51, "notic": 101, "now": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "np": [70, 104, 105, 108, 111, 112, 113, 114], "npt": 70, "nrow": 112, "ntheori": 110, "null": 103, "num": [3, 76, 77, 82, 83, 103, 104, 105], "num_addsub": [14, 15, 16, 17, 19], "num_arg": [54, 57], "num_cor": [112, 114], "num_divis": [14, 15, 16, 17, 19], "num_input": [14, 15, 16, 17, 19, 43], "num_invers": [14, 15, 16, 17, 19], "num_multipl": [14, 15, 16, 17, 19], "num_of_trac": [80, 104, 105], "num_oper": [14, 15, 16, 17, 19], "num_output": [14, 15, 16, 17, 19], "num_pow": [14, 15, 16, 17, 19], "num_random": 112, "num_sampl": [95, 99], "num_squar": [14, 15, 16, 17, 19], "num_target": 112, "num_trac": [95, 99, 112], "num_tre": 112, "num_tri": [112, 114], "numba": 102, "number": [3, 8, 9, 15, 16, 17, 19, 38, 52, 60, 62, 65, 66, 67, 68, 70, 73, 76, 77, 78, 82, 83, 99, 107, 111, 112, 113, 114], "number_of_sampl": [104, 105], "number_of_subset": [104, 105], "numer": [1, 3, 12, 62, 72, 73, 78, 95, 99], "numpi": [65, 66, 67, 68, 94, 102, 104, 105, 108, 111, 112, 113, 114], "numsp256t1": 103, "numsp384t1": 103, "numsp512t1": 103, "nzero": 114, "o": [15, 62, 106, 108, 109, 119], "o88": 62, "obj": 78, "object": [3, 8, 9, 10, 11, 15, 20, 21, 26, 27, 29, 34, 43, 44, 45, 47, 51, 52, 55, 56, 57, 62, 65, 68, 70, 71, 73, 78, 83, 94, 96, 98, 99, 107, 114], "obtain": [25, 44, 59, 63, 101, 107, 112, 114], "od": 107, "off": 3, "offer": 103, "offici": 68, "offset": [53, 65, 66, 67, 68, 84, 85, 89, 91, 92, 109], "ok": [111, 114], "older": 78, "onc": [3, 9, 62], "one": [2, 3, 5, 9, 10, 11, 15, 22, 29, 38, 40, 45, 46, 51, 52, 60, 67, 77, 79, 86, 102, 103, 105, 108, 110, 111, 112, 114, 115, 116, 117], "one_a": 9, "one_act": 9, "one_trac": 56, "onebyterandom": [72, 78], "ones": [3, 73, 78, 99], "onli": [9, 10, 11, 12, 20, 29, 30, 31, 32, 33, 42, 44, 62, 63, 98, 102, 103, 107, 108, 110, 111, 112, 114], "only_1": 114, "only_2": 114, "onn": 3, "onto": 110, "op": [0, 7, 14, 15, 16, 17, 19, 113, 114], "op3": 111, "op3_path": [17, 111], "op_result": [14, 15, 112, 113, 114], "op_str": [43, 113], "open": [64, 65, 66, 67, 68, 103, 105, 109, 114, 118], "openjdk": 103, "openssl": 111, "oper": [3, 7, 9, 11, 14, 15, 16, 17, 19, 20, 26, 43, 62, 70, 98, 104, 105, 108, 109, 111, 113, 115], "opert": 113, "opresult": [7, 14, 15], "opt": [108, 109, 113, 117], "optim": 46, "option": [3, 4, 9, 12, 20, 26, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 51, 59, 60, 62, 65, 66, 67, 68, 70, 73, 74, 76, 78, 80, 81, 87, 94, 99, 102, 107, 114], "optyp": [7, 15, 20, 43, 113], "oracl": [60, 62, 110, 114], "order": [3, 7, 8, 9, 15, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 52, 62, 63, 73, 78, 99, 107, 108, 110, 111, 112, 113, 114, 115], "org": [85, 103, 119], "origin": [3, 5, 46, 73, 78, 99, 112, 114], "oscilloscop": [64, 65, 66, 67, 68, 101, 102], "ossl_ec_gfp_nistp224_points_mul": 103, "ossl_ec_gfp_nistp256_points_mul": 103, "ossl_ec_gfp_nistp521_points_mul": 103, "ossl_ec_gfp_simple_ladder_": 103, "ossl_ec_gfp_simple_ladder_post": 103, "ossl_ec_gfp_simple_ladder_pr": 103, "ossl_ec_gfp_simple_ladder_step": 103, "ossl_ec_key_simple_generate_kei": 103, "ossl_ec_scalar_mul_ladd": 103, "ossl_ec_wnaf_mul": 103, "ossl_ecdsa_simple_verify_sig": 103, "ossl_ed25519_public_from_priv": 103, "ossl_ed25519_sign": 103, "ossl_ed25519_verifi": 103, "ossl_x25519": 103, "ossl_x25519_public_from_priv": 103, "other": [9, 11, 16, 19, 22, 42, 45, 52, 62, 86, 94, 101, 103, 106, 108, 111, 112, 114], "other_a": 9, "other_act": 9, "other_priv": [108, 115], "other_pub": 108, "other_pubkei": [3, 80], "other_publ": 115, "otherwis": [11, 41, 42, 52, 98, 101, 103, 114], "our": [108, 114], "ourselv": 103, "out": [52, 63, 65, 66, 67, 68, 92, 101, 102, 108, 112, 113, 114], "outdat": 102, "outdir": 5, "outgo": 20, "output": [3, 5, 14, 15, 16, 17, 19, 20, 40, 44, 47, 52, 62, 76, 77, 82, 83, 87, 96, 97, 98, 99, 100, 111, 115], "output_count": 70, "output_index": [14, 15, 16, 17, 19], "output_nam": [14, 21], "output_nod": [14, 21], "output_point": [14, 15], "over": [27, 63, 83, 103, 108, 110, 112, 114], "overflowerror": [3, 73, 78, 99], "overlap": 46, "overrid": 103, "overview": 103, "own": [9, 62, 103], "p": [11, 15, 36, 39, 60, 62, 67, 93, 104, 105, 108, 110, 112, 113, 114, 119], "p0": [58, 60, 112], "p0_aff": 112, "p0_target": 112, "p1": [62, 72, 73], "p192": 103, "p2": [62, 72, 73], "p224": [103, 111], "p256": [103, 112, 115], "p256_jac": 111, "p256_jac3": 111, "p256_mod": 111, "p256_proj3": 111, "p3": 62, "p384": 103, "p4": 62, "p5": 62, "p521": 103, "p_i": 110, "p_valu": 93, "packag": [0, 29, 51, 101, 102], "pad": [53, 84, 87, 114], "page": [39, 103], "pair": [3, 52, 73, 78, 98, 99, 108, 110, 114], "pair_tabl": 110, "panda": [102, 114], "paper": [85, 119], "parallel": [111, 114], "param": [0, 1, 3, 7, 10, 11, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 54, 55, 56, 58, 60, 72, 78, 80, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115], "param_categori": [110, 114], "param_map": 114, "paramet": [3, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 25, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 55, 56, 60, 63, 65, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 99, 104, 105, 107, 108, 109, 110, 112, 114], "parameter_nam": [7, 34], "parameterenum": [53, 72, 78], "parameters_i": 110, "parametr": [38, 107, 112], "paramlink": 102, "params_cat": 114, "params_categori": 114, "params_i": 110, "params_name_match": 114, "parent": [7, 9, 14, 15, 43, 58, 60, 62, 94, 111, 112, 114], "pari": [12, 102, 114], "pars": 52, "parser": [53, 95, 99], "part": [3, 70, 73, 78, 85, 89, 98, 99, 103, 107], "partial": [102, 110, 112, 114], "partial_scalar": 110, "particular": [9, 10, 65, 66, 67, 68, 101, 106, 115], "partit": [0, 7, 14], "pass": [4, 9, 52, 65, 66, 67, 68, 88, 89, 107, 110, 113], "passband": 88, "path": [3, 7, 9, 44, 58, 62, 77, 79, 99, 106, 108, 109, 111, 114, 115], "pathcontext": [7, 9], "pathlib": [111, 114], "pattern": [89, 108], "pc": 74, "pcsc": [0, 53, 72, 78, 101], "pcsclite": 116, "pcsctarget": [53, 72, 74, 78, 116], "pd": 114, "pdf": [85, 103, 112, 114, 119], "peak": [85, 89, 105, 112], "pearson": 70, "pearson_corr": [69, 70], "peek": 105, "pend": 52, "peqpr": [35, 36, 37, 38, 39, 41, 42, 107, 110, 112, 113], "peqrp": [35, 36, 114], "per": [10, 70, 85, 112, 114], "perform": [7, 26, 39, 42, 54, 55, 56, 93, 102, 108, 110, 112, 114, 115], "perform_raw": [7, 26], "permiss": 101, "permit": 101, "person": [74, 101], "perspect": 112, "peval": [49, 52], "pexec": [49, 52], "phi": 110, "philip": 85, "pick": [85, 92, 103, 110, 112, 114, 116], "pickl": [0, 53, 95, 105, 111, 114, 117], "picklabl": 98, "pickletraceset": [53, 95, 100, 117], "pico": 67, "picoscop": [67, 68, 101, 102, 109], "picoscope_alt": [0, 53, 64, 102], "picoscope_sdk": [0, 53, 64, 102, 109], "picoscopealt": [53, 64, 67], "picoscopesdk": [53, 64, 68], "picosdk": [68, 102], "pip": 102, "pippeng": 119, "pkc": 85, "pl": [110, 114], "plai": 114, "planar_posit": [14, 21], "plasma": 112, "platform": [1, 2, 3, 4, 78, 106, 108, 109], "pleas": [9, 62], "plot": [0, 53, 84, 104, 105, 108, 109, 112, 113, 117], "plot_correl": [54, 55, 104], "plot_difference_of_mean": [54, 56, 105], "plot_similar": 111, "plot_trac": [53, 84, 90, 108, 109, 112, 113, 117], "plt": [104, 105, 111, 112, 114], "plu": 29, "plug": 109, "point": [0, 3, 7, 10, 11, 15, 16, 17, 19, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 54, 55, 56, 58, 60, 63, 65, 66, 67, 68, 78, 80, 103, 104, 105, 107, 108, 109, 110, 112, 113, 119], "point_add_proj": 103, "point_mul_g": 103, "point_mul_g_secp384r1": 103, "point_mul_g_secp384r1_wrap": 103, "point_mul_secp384r1": 103, "point_mul_secp384r1_wrap": 103, "point_mul_two_secp384r1": 103, "point_mul_two_secp384r1_wrap": 103, "pointmultipli": 103, "points_emul": 105, "points_map": 114, "points_mul": 103, "points_p": 11, "pointzz_pmul": 103, "pointzz_pshamirstrick": 103, "poli": [12, 25, 63, 114], "poly_set": 114, "polynomi": [12, 25, 63, 102], "polys_map": 114, "pool": [52, 104, 105, 111, 112, 114], "pop": [95, 98], "popen": [3, 76], "popitem": [95, 98], "popul": [3, 73, 78, 99], "portabl": 103, "portion": 101, "posit": [3, 29, 30, 31, 32, 33, 73, 78, 99, 114], "position_map": 114, "positions_row": 114, "possibl": [11, 19, 44, 45, 59, 60, 101, 103, 107, 114, 118], "post": 9, "posttrig": [64, 65, 66, 67, 68, 109], "pow": [7, 43, 113], "power": [15, 16, 17, 19, 42, 55, 56, 60, 64, 85, 109, 115, 119], "pp": [103, 114], "pp_tupl": 114, "pre": [39, 78, 102], "precis": [58, 62, 112], "precise_r": [112, 114], "precise_rate_asymmetr": [112, 114], "precise_rate_b": [112, 114], "precise_rate_binomi": 114, "precise_rate_c": 114, "precise_rate_symmetr": [112, 114], "precomp": [110, 113], "precomp_add": 113, "precomp_dbl": 113, "precomp_trac": 113, "precomput": [36, 39, 41, 42, 103, 110, 112, 113], "precomputationact": [7, 35, 36], "precompute_neg": [35, 41, 42, 107], "prefer": 102, "prefix": [64, 68], "preorderit": 114, "presenc": 112, "present": [4, 63, 98, 101, 112, 114], "pretrig": [64, 65, 66, 67, 68, 109], "previou": [9, 14, 20, 51, 62], "previous": 114, "primal": 29, "prime": [7, 11, 29, 30, 31, 32, 33, 44, 103, 110, 112, 113, 114, 119], "primit": [26, 47], "print": [3, 9, 14, 21, 62, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_config": 3, "priv": [106, 108, 109], "privat": [3, 27, 47, 72, 78, 115], "privatekeytopublickei": 103, "privkei": [1, 3, 7, 26, 47, 72, 78, 80, 108], "prng": [3, 109], "pro": 77, "probabilist": 29, "probabl": 112, "probe": 109, "procedur": 119, "process": [0, 1, 3, 36, 37, 39, 40, 52, 53, 72, 76, 78, 84, 101, 105, 107, 108, 112, 114, 117], "process_trac": 108, "processingdirect": [7, 35, 36, 37, 38, 39, 41, 42, 107, 112, 113], "processor": 52, "processpoolexecutor": [52, 111, 112], "produc": [3, 44, 46, 73, 77, 78, 83, 99], "product": [110, 111, 114], "programm": 77, "proj3_add": 111, "proj3_dbl": 111, "project": [2, 3, 10, 11, 15, 19, 36, 44, 45, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "project_down": 110, "promin": 89, "promis": 52, "prop": 112, "properti": [9, 11, 15, 16, 17, 19, 20, 21, 26, 27, 29, 30, 36, 43, 45, 47, 51, 52, 62, 65, 66, 67, 68, 70, 73, 74, 78, 81, 94, 99, 114], "proprietari": 102, "protocol": [3, 73, 74, 77, 78, 81, 83, 99], "provid": [3, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 57, 60, 61, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101], "ps3000": 67, "ps3000ascop": [53, 64, 68], "ps3000scope": [53, 64, 68], "ps4000": [67, 68], "ps4000lib": 68, "ps4000scope": [53, 64, 68], "ps5000": [67, 68], "ps5000lib": 68, "ps5000scope": [53, 64, 68], "ps6000": [67, 68], "ps6000lib": 68, "ps6000scope": [53, 64, 68, 109], "pub": [106, 108, 109], "pub_kei": [104, 105], "pubkei": [1, 3, 7, 26, 47, 72, 78, 80, 108], "public": [3, 27, 47, 72, 78, 103, 115], "publish": 101, "purpos": [3, 101], "py": [101, 111, 114], "pyecsca": [0, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "pyecscapub": 108, "pyecscaresult": 108, "pyinstrument": 102, "pypi": 102, "pyplot": [104, 105, 111, 112, 114], "pyscard": 102, "pytest": 102, "python": [28, 32, 51, 67, 68, 100, 102], "q": [11, 103], "quadrat": [29, 30, 31, 32, 33], "qualnam": [3, 4, 8, 36, 65, 73, 78, 99], "queri": [60, 110, 112], "query_r": [112, 114], "query_rate_asymmetr": [112, 114], "query_rate_b": [112, 114], "query_rate_binomi": 114, "query_rate_c": 114, "query_rate_symmetr": [112, 114], "queue": 52, "quit": [1, 3, 8, 72, 80, 107], "r": [7, 9, 36, 43, 47, 72, 78, 102, 103, 110, 116], "r1rv76": [103, 111], "rabin": 29, "radiu": 85, "rainbow": [3, 105, 108], "rainbow_stm32f215": 3, "rais": [3, 19, 29, 30, 31, 32, 33, 45, 51, 52, 73, 78, 98, 99, 110, 114], "ran": 5, "randbelow": 110, "randbyt": 108, "randint": [104, 105, 108], "random": [3, 11, 19, 22, 28, 29, 30, 31, 32, 33, 45, 103, 104, 105, 108, 110, 112, 113, 114], "random_avg": 112, "random_mod": [1, 3], "random_point": 110, "random_scalar": 110, "random_scalar_fully_trivi": 110, "random_scalar_trivi": 110, "random_trac": 112, "randombit": 103, "randomli": 106, "randommod": [4, 7, 8, 106, 107, 108, 109], "randommodact": [7, 28, 29], "randompoint": 103, "rang": [64, 65, 66, 67, 68, 104, 105, 109, 112, 113], "rate": 112, "rather": 38, "ratio": [3, 50, 73, 78, 99], "ration": [3, 50, 73, 78, 99], "raw": [0, 7, 26, 28, 47, 64, 65, 78, 83, 114, 116], "rawmod": [7, 28, 29, 32], "rb": [105, 114], "rcb": [103, 104], "re": [0, 53, 101, 105, 106, 108, 109, 110, 111, 112, 113, 114], "read": [1, 3, 15, 16, 17, 19, 72, 76, 77, 82, 83, 95, 96, 97, 98, 99, 100, 117], "read_bool": [95, 99], "read_float": [95, 99], "read_int": [95, 99], "read_str": [95, 99], "reader": [74, 78, 116], "readthedoc": 103, "real": [1, 3, 72, 73, 78, 95, 99, 110, 112], "real_add": 110, "real_add_nam": 110, "real_coord": 110, "real_coord_nam": 110, "real_dbl": 110, "real_dbl_nam": 110, "real_mult": [110, 112], "real_pub_kei": [55, 56, 104, 105], "real_result": 112, "realiti": 103, "realli": [10, 103, 111], "reason": [107, 115], "receiv": [3, 73, 77, 83], "recent": [9, 53, 62, 84, 91], "reclaim": 52, "recod": [41, 42, 46], "recoding_direct": [35, 42, 107], "reconnect_outgoing_nod": [14, 21], "recov": [104, 105, 108], "recover_bit": [54, 55, 56, 105], "recovered_priv": 115, "recovered_scalar": [55, 56, 104, 105], "recoveri": 103, "rect": 112, "recursive_fliparoo": [7, 14, 20], "recv_msg": [1, 3, 72, 77, 83], "red": [1, 2, 4, 7, 8, 106, 107, 108, 109], "red_barrett": 8, "red_bas": 8, "red_montgomeri": 8, "reduc": [7, 8, 105, 106, 108, 109, 113], "reduce_all_add": [7, 14, 23], "reduct": [2, 4, 7, 8, 103, 106, 107, 108, 109], "ref10": 103, "refer": [9, 62, 85, 103], "reference_length": 85, "reference_offset": 85, "refin": [60, 119], "regist": 108, "regular": [103, 115], "reindex": [14, 21], "relat": 112, "relationship": [10, 63, 115], "releas": [9, 62], "reli": 115, "remain": [112, 114], "remap_spawn": 114, "remapped_count_point_map": 114, "remapped_hit_point_map": 114, "remapped_position_point_map": 114, "remmap": 114, "remov": [5, 9, 62, 95, 98, 110, 111, 114], "remove_nod": [14, 21], "renam": [20, 21, 23, 24], "render": [0, 1, 2, 7, 9, 58, 62, 106, 108, 109, 110, 117], "render_and_build": [1, 5, 109], "render_bas": [58, 62, 112, 114], "rendertre": [9, 62, 112, 114], "reorder": [14, 21], "repeadetli": 108, "repeat": 108, "replac": [52, 94, 112, 114], "repositori": [44, 101, 102, 103], "repr": 115, "repres": [3, 15, 19, 36, 37, 38, 39, 40, 41, 42, 45, 52, 60, 73, 76, 78, 99, 107, 114, 115], "represent": [3, 11, 29, 30, 31, 32, 33, 46, 73, 78, 99, 114], "request": [3, 65, 66, 67, 68, 73, 78, 99], "requir": [3, 35, 36, 37, 38, 39, 40, 41, 42, 51, 52, 109, 110, 114], "res0": 112, "res1": 112, "res_aff": 110, "res_i": 110, "res_x": 110, "resctrict": 107, "reset": [1, 3, 51, 72, 73, 74, 77, 78, 81], "resetconfig": [49, 51], "resetcontext": 9, "residu": [13, 29, 30, 31, 32, 33, 51], "resist": [37, 119], "resourc": 52, "resp": [72, 78], "respect": [112, 114], "respons": [3, 58, 62, 73, 74, 77, 78, 81, 83, 110, 113, 114], "response_map": 110, "responseapdu": [53, 72, 73, 74, 78, 81], "restrict": [101, 103, 107, 110], "result": [1, 3, 5, 7, 8, 9, 14, 15, 21, 26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 59, 60, 62, 63, 70, 104, 105, 107, 108, 110, 111, 112, 114, 117], "result_correct": 110, "result_invertible_z": 110, "result_object": [104, 105], "resultact": [7, 9, 15, 26, 27, 29, 36, 45], "retriev": [44, 64, 65, 66, 67, 68, 109], "return": [3, 5, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 55, 56, 60, 62, 63, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 104, 105, 106, 107, 110, 111, 112, 113, 114], "retyp": 94, "rev_point_map": 114, "revers": [53, 58, 59, 60, 61, 84, 87, 101, 118], "rfc": 103, "rfc7748": [103, 111], "rh": 111, "right": [2, 19, 36, 37, 39, 41, 46, 101, 103, 107, 113, 119], "riscur": [99, 102], "rise": [65, 66, 67, 68, 109], "roll": [91, 105, 108], "rolling_mean": [53, 84, 91, 105, 108, 112], "rolling_mean_trac": 105, "root": [7, 9, 13, 14, 21, 29, 30, 31, 32, 33, 51, 58, 62, 91, 110, 114], "rotat": [111, 112], "rough": 112, "round": 29, "row": [62, 112, 114], "rowvar": 70, "rpa": [0, 53, 58, 101, 110, 113, 114, 118, 119], "rpa_distinguish": [53, 58, 60, 112], "rpa_input_point": [53, 58, 60], "rpa_point": 60, "rpa_point_0i": [53, 58, 60], "rpa_point_x0": [53, 58, 60], "rpa_re_amount_rate_asymmetr": 112, "rpa_re_amount_rate_symmetr": 112, "rpa_re_asymmetr": 112, "rpa_re_error": 112, "rpa_re_errors_al": 112, "rpa_re_plot_asymmetr": 112, "rpa_re_plot_symmetr": 112, "rpa_re_precise_rate_asymmetr": 112, "rpa_re_precise_rate_symmetr": 112, "rpa_re_query_rate_asymmetr": 112, "rpa_re_query_rate_symmetr": 112, "rpa_re_scatter_symmetr": 112, "rpa_re_success_rate_asymmetr": 112, "rpa_re_success_rate_symmetr": 112, "rpa_re_symmetr": 112, "rtl": [35, 36, 37, 38, 39, 41, 46, 112, 113], "rtlmultipli": [7, 35, 37, 112, 113], "rtype": 3, "rule": 103, "run": [3, 39, 52, 58, 59, 60, 65, 66, 67, 68, 69, 70, 78, 79, 102, 108, 110, 116], "run_mod": [72, 78], "runmodeenum": [53, 72, 78], "runmoderespons": [53, 72, 78], "runnabl": 76, "runtim": [28, 51], "rv": 112, "s1": 103, "s13389": 119, "s2": 103, "safe": 52, "safq55aiqpc": 57, "sagemath": 12, "said": 112, "salvador": 85, "same": [9, 11, 12, 46, 62, 94, 103, 105, 112, 114], "sampl": [0, 7, 8, 22, 29, 53, 64, 65, 66, 67, 68, 69, 70, 71, 84, 86, 87, 91, 93, 94, 99, 104, 105, 107, 108, 109, 112, 117], "sample_cod": [95, 99], "sample_cpa": 104, "sample_dpa": 105, "sample_point": [104, 105], "sample_s": [104, 105], "sample_trac": [104, 105], "samplecod": [53, 95, 99], "sampletyp": [53, 64, 65, 66, 67, 68, 109], "samplewis": 93, "sampling_frequ": [88, 95, 99], "sapplet": 78, "satisfi": [7, 10, 103], "satur": 112, "save": [95, 98, 99, 112], "save_figur": [53, 84, 90], "save_figure_png": [53, 84, 90], "save_figure_svg": [53, 84, 90], "save_instruct": 3, "savefig": [112, 114], "sc": 74, "sca": [0, 3, 101, 104, 105, 108, 109, 110, 112, 113, 114, 116, 117], "scalar": [0, 2, 3, 7, 9, 11, 12, 19, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 55, 56, 58, 60, 80, 103, 104, 105, 109, 110, 112, 114, 115], "scalar_bit_length": [55, 56, 104, 105], "scalar_length": [104, 105], "scalar_map": 114, "scalar_mult": [1, 3, 72, 80, 108], "scalar_trivial_gcd": 110, "scalarbasemult": 103, "scalarmult": [1, 4, 7, 8, 60, 103, 106, 107, 108, 109, 110, 115], "scalarmultbas": 103, "scalarmultbaseencod": 103, "scalarmultbaseyz": 103, "scalarmultipli": [4, 7, 8, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 47, 55, 56, 60, 80, 107], "scalarmultiplicationact": [7, 35, 36], "scalarmultstraus128var": 103, "scalars_map": 114, "scale": [15, 19, 45, 85, 91, 107], "scaled_sampl": [104, 105], "scalingefdformula": [7, 14, 17], "scalingformula": [7, 14, 15, 16, 17, 19, 37, 38, 39, 40, 41, 42], "scan": 37, "scarar": 112, "scatter": 112, "schedul": 52, "schnorr": 103, "schoolbook": 103, "scipi": [89, 102, 104, 112], "scl": [1, 3, 15, 16, 17, 19, 37, 38, 39, 40, 41, 42, 104, 105, 106, 107, 108], "scope": [0, 53, 77, 109], "scope_coupl": [95, 99], "scope_id": [95, 99], "scope_imped": [95, 99], "scope_offset": [95, 99], "scope_rang": [95, 99], "script": [2, 3], "sd": [104, 105], "sdev": [57, 112], "sdev_ramg": 112, "sdev_rang": 112, "se": 103, "sec": 103, "secg": [3, 10, 11, 44, 103, 106, 109, 111, 112, 115], "second": [3, 15, 52, 77, 83, 104, 105, 109, 115], "second_ecdh": 115, "second_set": 93, "secp": 103, "secp112r1": [72, 78, 103], "secp128r1": [3, 72, 78, 103, 106, 109, 111], "secp160r1": [72, 78, 103], "secp192r1": [72, 78, 103], "secp224r1": [72, 78, 103, 111], "secp256k1": [103, 111], "secp256k1_ec_pubkey_cr": 103, "secp256k1_ec_pubkey_create_help": 103, "secp256k1_ecdh": 103, "secp256k1_ecdsa_sig_sign": 103, "secp256k1_ecdsa_sig_verifi": 103, "secp256k1_ecdsa_sign": 103, "secp256k1_ecdsa_sign_inn": 103, "secp256k1_ecdsa_verifi": 103, "secp256k1_ecmult": 103, "secp256k1_ecmult_const": 103, "secp256k1_ecmult_gen": 103, "secp256k1_ecmult_strauss_wnaf": 103, "secp256k1_gej_add_g": 103, "secp256k1_gej_doubl": 103, "secp256r1": [10, 11, 44, 72, 78, 103, 111, 112, 115], "secp256r1generatormultipli": 103, "secp384r1": [72, 78], "secp521r1": [72, 78], "secret": [26, 55, 56, 72, 78, 108, 110], "secret_scalar": [104, 105], "sect": 103, "sect163r1": [72, 78], "sect233r1": [72, 78], "sect283r1": [72, 78], "sect409r1": [72, 78], "sect571r1": [72, 78], "secur": 103, "see": [3, 9, 28, 29, 39, 62, 101, 102, 103, 107, 108, 112, 114, 115], "seed": [1, 3], "seed_byt": 108, "sel": 112, "select": [29, 51, 57, 72, 73, 74, 78, 81, 103, 107, 110, 112, 113, 116], "select_applet": [72, 78, 116], "select_random_sampl": [104, 105], "selected_numb": [104, 105], "self": [3, 13, 20, 70, 73, 78, 99, 108], "sell": 101, "semanticscholar": 85, "send": [3, 72, 73, 74, 77, 78, 81, 83], "send_apdu": [72, 73, 74, 78, 81], "send_cmd": [1, 3, 72, 77, 83], "sens": [19, 45, 107], "sent": [52, 73], "separ": [7, 9, 58, 62, 103, 112], "sequenc": [9, 11, 65, 66, 67, 93, 94], "seri": [67, 68], "serial": [0, 3, 53, 72, 76, 77, 83], "serialtarget": [53, 72, 76, 82, 83], "serv": 114, "servic": 116, "session": 117, "set": [3, 9, 11, 13, 18, 20, 21, 22, 36, 37, 38, 39, 40, 41, 42, 44, 46, 51, 52, 59, 60, 62, 63, 65, 66, 67, 68, 72, 73, 78, 85, 93, 94, 95, 96, 97, 98, 99, 102, 107, 109, 110, 111, 112, 117], "set_buff": [64, 68], "set_channel": [64, 68], "set_frequ": [64, 68], "set_label_coord": 112, "set_leakage_model": [72, 80], "set_param": [1, 3, 72, 80, 104, 105, 106, 108, 109], "set_privkei": [1, 3, 72, 80, 108], "set_pubkei": [1, 3, 72, 80, 108], "set_titl": 112, "set_trigg": [1, 3, 64, 68, 72, 80, 109], "set_xlabel": 112, "set_xtick": 111, "set_ylabel": [111, 112], "set_ylim": 112, "set_ytick": 111, "setconfig": [49, 51], "setcontext": 9, "setdefault": [95, 98, 112, 114], "setrespons": [53, 72, 78], "setup": [3, 65, 66, 67, 68, 111, 115, 116, 117], "setup_captur": [64, 65, 66, 67, 68, 109], "setup_channel": [64, 65, 66, 67, 68, 109], "setup_frequ": [64, 65, 66, 67, 68, 109], "setup_trigg": [64, 65, 66, 67, 68, 109], "sever": [28, 35, 44, 52, 102, 103, 106, 110, 112, 115], "sg14": [103, 119], "sha1": [7, 8, 26, 47, 106, 108, 109], "sha224": [7, 8, 26, 47], "sha256": [7, 8, 26, 47, 107], "sha384": [7, 8, 26, 47], "sha512": [7, 8, 26, 47], "shai": 119, "shall": 101, "shamir": 103, "shank": [29, 30, 31, 32, 33], "shape": [70, 104, 105], "share": [26, 78, 108, 114], "shared_secret": 108, "sharei": 112, "sharex": 112, "shiftableflag": 78, "short": [2, 3, 11, 34, 36, 37, 38, 39, 40, 41, 42, 103, 107], "short_circuit": [35, 36, 37, 38, 39, 40, 41, 42, 107], "shorten": 91, "shortnam": [7, 14, 15, 16, 17, 19, 21, 34, 114, 115], "shortw": [2, 3, 10, 11, 44], "shortweierstrass": [10, 12, 48], "shortweierstrassmodel": [7, 10, 34, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "should": [8, 37, 52, 65, 66, 67, 68, 87, 102, 105, 106, 109, 111, 112], "show": [104, 105, 111], "showcas": [101, 102, 109, 110, 112, 114, 116, 118], "shown": 105, "shuffl": 103, "shutdown": [49, 52], "sibl": [7, 9, 58, 62], "side": [53, 77, 101, 103, 104, 105, 108], "sig": [3, 78], "sig_typ": 78, "sigma": [112, 119], "sign": [3, 18, 47, 73, 78, 99, 103, 108, 119], "sign_ctx": 115, "sign_data": [7, 47, 115], "sign_hash": [7, 47], "sign_setup": 103, "sign_sig": 103, "signal": [3, 89, 101, 109, 112], "signasn1": 103, "signatur": [0, 3, 7, 72, 78, 80, 103, 108, 115], "signatureenum": [53, 72, 78], "signatureresult": [7, 47, 80], "signed_messag": 108, "signific": [3, 8, 73, 78, 99, 105, 114], "signnistec": 103, "silent": [49, 52, 112], "sim": 111, "similar": [22, 103, 107, 111, 113], "simpl": [52, 103, 114], "simpleladdermultipli": [7, 35, 40, 112, 113], "simplequeu": 52, "simpleseri": [0, 3, 53, 72, 77], "simpleserialmessag": [3, 53, 72, 77, 83], "simpleserialtarget": [3, 53, 72, 77, 83], "simpli": 62, "simplifi": [49, 50], "simul": [57, 101, 104, 110, 118], "simulate_ecdh_trac": [72, 80], "simulate_epa_oracl": 110, "simulate_mult_id": 112, "simulate_scalar_mult_trac": [72, 80, 104, 105], "simulate_t": 110, "simulate_trac": [112, 113], "simulated_oracl": 112, "simulated_rpa_oracl": 112, "simulated_rpa_trac": 112, "simultan": [15, 103], "sinc": 108, "singl": [19, 45, 62, 91], "sixth": [104, 105], "size": [7, 9, 46, 52, 58, 60, 62, 78, 103, 104, 105, 107, 114], "sk": [111, 114, 119], "skew": 103, "skip": [12, 110], "sl": 116, "sleep": 109, "slice": [14, 20, 53, 54, 57], "slide": [42, 46, 103, 119], "sliding_window_ltr": [7, 46], "sliding_window_rtl": [7, 46], "slidingwindowmultipli": [7, 35, 42, 112, 113], "slower": 112, "sm": 113, "sm2": 103, "sma": 109, "smaller": [103, 107], "smart": 74, "smartcard": [74, 78, 81, 101, 102, 118], "smartleia": [102, 116], "smirnov": 93, "smooth": [108, 111, 112, 114], "so": [36, 85, 91, 101, 103, 105, 107, 109, 110, 112, 114], "soe": [9, 62], "softwar": [101, 103], "solo": 81, "solut": 114, "solv": 114, "some": [8, 9, 15, 16, 29, 50, 52, 62, 63, 94, 96, 98, 102, 103, 107, 109, 110, 111, 112, 114, 115], "some_properti": 51, "some_valu": 51, "somehow": [3, 15], "someth": [3, 112, 115], "something_els": 3, "sometim": 102, "somewhat": 107, "sort": [10, 11, 107, 110, 114], "sourc": [3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 59, 60, 62, 63, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 106, 114, 118], "spa": [37, 115], "spa_trac": 108, "space": [8, 85, 101, 118], "spawn": [52, 111, 112, 114], "spawn_context": 114, "spec": 114, "special": [29, 44, 45, 103, 114, 119], "specif": [4, 52, 103, 107], "specifi": [2, 11, 15, 16, 17, 19, 36, 44, 78, 98, 102, 106, 114], "speed": 119, "sphinx": 102, "split": [103, 107, 110, 111, 114], "split_param": 110, "split_scalarmult": 110, "split_trac": [54, 56], "springer": 119, "sqr": [1, 4, 7, 8, 43, 106, 107, 108, 109, 113], "sqr_base": 8, "sqr_comba": 8, "sqr_karatsuba": 8, "sqr_toom_cook": 8, "sqrt": [28, 29, 30, 31, 32, 33, 112], "squar": [4, 7, 8, 13, 15, 16, 17, 19, 29, 30, 31, 32, 33, 51, 91, 106, 107, 108, 109], "squarefre": 110, "squeez": 87, "src": 103, "stack": 70, "stacked_trac": [0, 53], "stackedtrac": [53, 69, 70, 71], "stage": 112, "stan": 85, "standard": [70, 86, 91, 103, 104, 105, 112, 119], "standard_devi": [53, 69, 70, 84, 86, 104, 105], "start": [3, 4, 8, 9, 15, 16, 17, 19, 36, 37, 39, 40, 52, 60, 62, 65, 73, 77, 78, 83, 85, 87, 89, 92, 99, 107, 109], "startswith": [110, 111, 113, 114], "stat": [104, 112], "state": 3, "static": [47, 70, 78, 83, 99, 117], "statist": 93, "statu": 73, "std": [44, 119], "stdin": [3, 76], "stdout": [3, 76, 106], "stem": [111, 114], "step": 114, "stm32f0": [1, 4], "stm32f3": [1, 4, 106, 108, 109], "stongest": 104, "stop": [9, 60, 64, 65, 66, 67, 68], "stopband": 88, "store": [8, 15, 16, 17, 19, 44, 106, 108, 111, 112, 114], "str": [3, 4, 5, 9, 10, 11, 15, 16, 17, 19, 21, 22, 25, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 55, 56, 60, 62, 63, 65, 66, 67, 68, 71, 76, 77, 79, 83, 94, 99, 111, 112, 113, 114], "strau": 103, "stream": [70, 76, 82], "stream_count": 70, "stretch": [53, 84, 87, 105], "stretched_trac": 105, "strict": 50, "string": 83, "strip": [5, 111], "structur": [0, 53, 58, 112], "student": 93, "student_ttest": [53, 84, 93], "stuff": 103, "sub": [7, 43, 107, 113, 114], "subaffin": 103, "subclass": [8, 36, 107], "subcommand": 2, "subcurv": 110, "subgroup": [44, 114], "subject": 101, "sublicens": 101, "submit": [49, 52, 111, 114], "submit_task": [49, 52, 112, 114], "submodul": [53, 102], "subpackag": 102, "subplot": [111, 112, 114], "subprocess": [5, 106, 108], "subscalar": 110, "subsequ": [104, 105], "subset": [104, 105, 110], "substanti": 101, "substitut": 114, "subtract": [15, 16, 17, 19, 53, 84, 86, 91, 103, 112], "success": [3, 65, 66, 67, 68, 72, 73, 74, 77, 78, 79, 81, 112], "success_rate_asymmetr": [112, 114], "success_rate_binomi": 114, "success_rate_symmetr": [112, 114], "success_rate_vs_majority_asymmetr": [112, 114], "success_rate_vs_majority_symmetr": [112, 114], "success_rate_vs_query_rate_symmetr": [112, 114], "successes_rates_nois": [104, 105], "successes_rates_trac": [104, 105], "successfulli": 78, "suchanek": 101, "suffix": [111, 114], "sum": [85, 104, 105, 107, 110, 112, 114], "summari": 103, "sumoftwomultipl": 103, "sunec": 111, "suppli": 52, "support": [3, 34, 65, 66, 67, 68, 73, 78, 99, 101, 102, 103, 107], "supportsindex": 94, "sure": [102, 114], "sval": 112, "sw": [72, 73, 78, 111], "sw2e": [7, 48], "sw2m": [7, 48], "sw2te": [7, 48], "sw_": [111, 114], "sw_applet_select_fail": [72, 73], "sw_bytes_remaining_00": [72, 73], "sw_cla_not_support": [72, 73], "sw_command_not_allow": [72, 73], "sw_conditions_not_satisfi": [72, 73], "sw_correct_length_00": [72, 73], "sw_data_invalid": [72, 73], "sw_file_ful": [72, 73], "sw_file_invalid": [72, 73], "sw_file_not_found": [72, 73], "sw_func_not_support": [72, 73], "sw_incorrect_p1p2": [72, 73], "sw_ins_not_support": [72, 73], "sw_no_error": [72, 73], "sw_record_not_found": [72, 73], "sw_security_status_not_satisfi": [72, 73], "sw_unknown": [72, 73], "sw_wrong_data": [72, 73], "sw_wrong_length": [72, 73], "sw_wrong_p1p2": [72, 73], "swap": 111, "switch": [18, 114], "switch_sign": [0, 7, 14], "sy": [3, 73, 78, 99, 111, 114], "symbol": [0, 5, 7, 22, 25, 28, 29, 51, 114], "symbolicmod": [7, 28, 33, 114], "symcryptecdhsecretagr": 103, "symcryptecdsasignex": 103, "symcryptecdsaverifi": 103, "symcryptecpointadd": 103, "symcryptecpointadddiffnonzero": 103, "symcryptecpointdoubl": 103, "symcryptecpointgenericsetrandom": 103, "symcryptecpointmultiscalarmul": 103, "symcryptecpointmultiscalarmulwnafwithinterleav": 103, "symcryptecpointscalarmul": 103, "symcryptecpointscalarmulfixedwindow": 103, "symcryptmontgomerydoubleandadd": 103, "symcryptmontgomerypointscalarmul": 103, "symcryptshortweierstrassaddsidechannelunsaf": 103, "symcryptshortweierstrassdoublespecializedam3": 103, "symcrypttwistededwardsadd": 103, "symcrypttwistededwardsadddiffnonzero": 103, "symcrypttwistededwardsdoubl": 103, "symmetr": 87, "sympi": [28, 33, 51, 102, 110, 114], "sympifi": [49, 50, 114], "symvol": 25, "synthesi": 101, "system": [2, 3, 10, 11, 19, 44, 45, 73, 78, 99, 103, 110, 116], "s\u00e9bastien": 119, "t": [39, 51, 62, 70, 93, 103, 110, 114], "t0": [72, 73, 103], "t1": [72, 73, 103], "t2d": 103, "t3": 103, "tabl": [110, 111, 112, 113], "tablefmt": [107, 110, 112, 113], "tabul": [107, 110, 111, 112, 113, 114], "tag": 103, "take": [8, 40, 44, 51, 52, 60, 92, 104, 105, 115], "taken": 103, "tanja": 102, "tape": 87, "target": [0, 3, 9, 11, 44, 53, 101, 102, 104, 105, 106, 108, 109, 114, 116], "target_avg": 112, "target_bit": [55, 56], "target_trac": 112, "task": [49, 52, 112, 114], "taskexecutor": [49, 52, 112, 114], "tate": 119, "tau": 103, "tb": [13, 20, 73, 78], "tdm04": 85, "te": 111, "te2e": [7, 48], "te2m": [7, 48], "te2sw": [7, 48], "techniqu": [110, 112, 113, 114, 119], "teeth": 38, "tempfil": [109, 111, 114], "templat": [0, 1], "temporari": [5, 51, 106], "temporarili": 52, "temporaryconfig": [49, 51], "temporarydirectori": 109, "term": [3, 73, 78, 99], "test": [0, 11, 19, 29, 45, 52, 53, 84, 102, 104, 105, 111, 112, 113, 114], "text": [108, 111, 112], "text1": 108, "text2": 108, "th": [12, 92, 114], "than": [52, 89, 103, 114], "thank": 101, "thar": 3, "thei": [3, 9, 15, 44, 46, 60, 87, 91, 103, 112, 114], "them": [3, 8, 15, 36, 65, 66, 67, 68, 102, 103, 104, 105, 107, 112, 114], "thi": [3, 8, 9, 10, 11, 15, 16, 17, 19, 29, 30, 31, 32, 33, 36, 37, 42, 45, 46, 47, 51, 52, 62, 65, 66, 67, 68, 94, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117], "thing": [29, 49, 50, 51, 57, 103, 112, 113, 114], "third": 15, "thon": 101, "those": [51, 89, 103, 106, 114], "though": 112, "thread": 70, "three": [40, 101, 102], "threshold": [53, 65, 66, 67, 68, 84, 89, 91, 109, 112], "threshold_rang": 112, "through": [101, 115], "thu": [100, 102, 114], "ti": 103, "tick": [65, 66, 67, 68], "tight": [112, 114], "tight_layout": 112, "time": [9, 39, 52, 60, 62, 65, 66, 67, 68, 70, 85, 103, 104, 105, 109], "time_unit": [64, 68], "timebas": [64, 68], "timeout": [1, 3, 52, 65, 66, 67, 68, 76, 77, 82, 83, 106, 109], "timeouterror": 52, "titl": 99, "title_spac": [95, 99], "tl": 103, "tmpdir": 109, "to_affin": [7, 11, 14, 19, 44, 45, 106, 108, 110, 112], "to_byt": [1, 3, 72, 73, 78, 95, 99], "to_cod": [14, 17, 111], "to_coord": [7, 11, 44, 110, 114], "to_der": [7, 47], "to_formula": [14, 21], "to_model": [7, 14, 19, 45, 108, 110, 112, 114], "to_weierstrass": [7, 34], "toaffin": [7, 10], "todo": 114, "toggl": 3, "token": [49, 51], "toma": 101, "tonelli": [29, 30, 31, 32, 33], "tool": [21, 62, 77, 101], "toolkit": [51, 101, 102, 111], "toom_cook": [7, 8], "top": [98, 109, 110], "tort": 101, "tosystem": [7, 10], "total": [107, 110, 111, 112, 113, 114], "toward": 85, "tp": [106, 107], "tp2": 109, "tpb": 70, "tpl": [1, 3, 15, 16, 17, 19], "tqdm": [110, 111, 112, 113, 114], "tr": 99, "trace": [0, 1, 3, 9, 53, 54, 55, 56, 60, 64, 65, 66, 67, 68, 69, 70, 71, 80, 95, 96, 97, 98, 99, 100, 101, 102, 109, 112, 113, 114, 117], "trace_config": [3, 108], "trace_count": 70, "trace_offset": [95, 99], "trace_set": [0, 53, 84, 94, 117], "traceback": [9, 62], "traceconfig": [3, 105, 108], "traces_8bit": 105, "traces_emul": 105, "traces_rang": 112, "traces_shap": [69, 70], "traceset": [53, 71, 95, 96, 97, 98, 99, 100], "track": [52, 112, 113], "trang": [110, 112, 113, 114], "transform": [0, 7, 11, 18, 27, 44, 53, 63, 72, 78, 84, 91, 108, 111], "transform_trac": [1, 3, 108], "transformationenum": [53, 72, 78], "transformrespons": [53, 72, 78], "tree": [0, 9, 53, 58, 59, 60, 103, 110, 112, 115], "tree_categori": 114, "tree_count": 114, "tree_fset": 114, "tree_fset_nonhomo": 114, "tree_posit": 114, "tree_remap": 114, "treeerror": [9, 62], "tri": [60, 103, 112], "trick": 103, "tricki": 103, "trig": 109, "trigger": [1, 3, 64, 65, 66, 67, 68, 109], "trim": [53, 84, 87], "tripl": 15, "triplingefdformula": [7, 14, 17], "triplingformula": [7, 14, 15, 16, 17, 19], "trivial": [60, 110], "true": [3, 5, 9, 11, 12, 20, 21, 23, 24, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 44, 50, 51, 52, 55, 60, 62, 63, 70, 78, 85, 86, 106, 107, 108, 109, 110, 112, 113, 114], "true_formula": 114, "true_neg": 112, "true_po": 112, "try": [44, 78, 85, 104, 105, 108, 110, 112, 113, 114], "tt2d": 103, "tu": 103, "tupl": [3, 5, 9, 12, 15, 21, 25, 27, 29, 43, 52, 56, 62, 63, 65, 66, 67, 68, 70, 80, 85, 86, 87, 93, 94, 98, 110, 114], "turn": [3, 112], "tvla": 93, "tweak": 103, "twist": [34, 103], "twistededward": 48, "twistededwardsmodel": [7, 34, 107, 111], "two": [3, 11, 15, 40, 57, 63, 73, 78, 89, 93, 99, 103, 112, 114, 115, 117], "two_torsion_multipl": 12, "txt": 102, "type": [3, 4, 5, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 56, 60, 62, 63, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 106, 107, 108], "typehint": 102, "typevar": 55, "typo": [9, 62], "u": [103, 114], "u1": 103, "u2": 103, "udo": [9, 62], "uecc_make_kei": 103, "uecc_shared_secret": 103, "uecc_sign": 103, "uecc_sign_with_k_intern": 103, "uecc_verifi": 103, "ufo": 109, "unari": 43, "unclear": 103, "uncompress": [11, 72, 78], "undefin": [7, 28, 29, 51, 110], "under": 28, "unfilit": 114, "unfilt": 114, "unifi": [14, 15, 16, 17, 19, 119], "uniform": 8, "union": [44, 67, 70, 87, 94, 99], "uniqu": [46, 62, 114], "unit": 65, "unit_scal": 114, "univers": 101, "unknown": 103, "unneccessari": 114, "unord": 62, "unrol": [0, 7, 14, 63, 103, 110, 111, 114], "unroll_formula": [7, 14, 25, 63, 111, 114], "unroll_formula_expr": [7, 14, 25, 110, 111], "unsaf": 103, "unsafehtml": 112, "unsatisfi": [13, 51], "unsatisfied_coordinate_assumption_act": [49, 51], "unsatisfied_formula_assumption_act": [49, 51], "unsatisfiedassumptionerror": [7, 13, 51, 110, 114], "unsatisfiedassumptionwarn": [7, 13, 51], "unsupport": 8, "until": [3, 52, 65, 66, 67, 68, 76, 77, 82, 83], "unus": 114, "up": [3, 8, 9, 52, 60, 62, 65, 66, 67, 68], "upcast": 29, "updat": [9, 14, 21, 62, 95, 98, 102, 107, 110, 114], "upon": [36, 37, 38, 39, 40, 41, 42, 114], "upto": [3, 76, 77, 82, 83], "urv": 101, "us": [2, 3, 8, 9, 10, 11, 12, 13, 18, 19, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 55, 56, 60, 62, 63, 65, 66, 67, 68, 70, 73, 74, 76, 77, 78, 81, 83, 85, 88, 89, 91, 93, 94, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "usabl": [93, 111], "usag": 114, "use_init": 60, "use_multipli": 60, "use_pari": 12, "userwarn": 13, "usual": [29, 45, 103], "util": [0, 4, 49, 110, 112, 114], "uwaterloo": 119, "v": [2, 57, 98, 103, 114], "v0": 103, "v040": [103, 111], "v06": [103, 111], "v1": 103, "v103": 103, "v1102": [103, 111], "v2": 103, "v21": [103, 111], "v3": 103, "v382": [103, 111], "va": [111, 112], "val": [78, 112], "valid": [11, 103, 106, 108], "valu": [1, 3, 4, 7, 8, 9, 10, 11, 14, 15, 22, 25, 29, 36, 42, 51, 52, 63, 65, 66, 67, 68, 70, 73, 77, 78, 83, 85, 87, 89, 91, 93, 95, 98, 99, 107, 108, 110, 111, 112, 113, 114, 115, 119], "valueerror": [13, 19, 29, 45, 110, 114], "van": 85, "vanish": [9, 62], "var": 112, "var_rang": 112, "var_smul_rwnaf": 103, "var_smul_wnaf_two": 103, "variabl": [7, 10, 15, 16, 17, 19, 25, 43, 63, 108], "varianc": [53, 69, 70, 84, 86, 112], "variant": [11, 46, 68, 103], "variou": [46, 111, 112], "vartimedoublescalarbasemult": 103, "vector": 93, "veri": [98, 100, 107, 114], "verif": 47, "verifi": [3, 36, 37, 38, 39, 40, 41, 42, 47, 78, 103, 108, 112, 115], "verify_chain": [14, 20], "verify_ctx": 115, "verify_data": [7, 47, 115], "verify_hash": [7, 47], "verify_sig": 103, "verifyasn1": 103, "verifynistec": 103, "verifysignatur": 103, "version": [12, 78, 102, 103], "via": [3, 19, 74, 78, 81, 101, 102, 103, 109, 115, 116], "view": 98, "visibl": [105, 115], "visual": [101, 104, 105, 108, 118], "vlad": 119, "vmax": 112, "vmin": [111, 112], "vojtech": 101, "volt": [64, 65, 109], "voltag": [65, 66, 67, 68], "vote": [60, 112], "w": [46, 72, 78, 103, 110, 111, 114], "w12": [110, 114], "wa": [3, 9, 13, 15, 36, 37, 38, 39, 40, 41, 42, 55, 56, 65, 66, 67, 68, 73, 74, 77, 78, 79, 81, 94, 101, 102, 103, 107, 112, 115], "wai": [8, 20, 63, 101, 104, 105, 107, 110, 112, 114], "wait": [3, 52, 65, 66, 67, 68, 77, 83], "walk": [7, 9, 112, 113, 114], "warn": [13, 49, 51, 52, 104, 110, 111], "warp": 85, "warranti": 101, "watch": [57, 114], "wb": [111, 114], "we": [52, 62, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "weierstrass": [2, 3, 34, 103], "weight": [10, 46, 57, 108, 112], "weirdli": 103, "welch": 93, "welch_ttest": [53, 84, 93, 112], "well": [3, 41, 42, 103, 106, 107, 108, 115], "were": [15, 52, 60, 87, 104, 111, 114], "what": [19, 29, 78, 87, 103, 108, 118], "when": [51, 52, 60, 62, 103, 104, 105, 106, 107, 108, 112], "where": [12, 15, 16, 17, 19, 79, 89, 103, 104, 108, 110, 114, 115], "whether": [3, 4, 5, 11, 12, 15, 16, 17, 19, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 51, 52, 60, 62, 63, 65, 66, 67, 68, 70, 73, 74, 77, 78, 79, 81, 93, 99, 101, 103, 106, 107, 112, 114], "which": [3, 8, 9, 27, 44, 51, 55, 56, 57, 62, 70, 76, 78, 86, 94, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 117], "while": [3, 77, 83, 108, 109, 110, 115], "white": [111, 112], "whole": [44, 46, 70, 107, 108], "whom": 101, "whose": [3, 73, 78, 99], "wide": 42, "width": [2, 35, 38, 41, 42, 46, 103, 107, 108, 109, 114, 117], "wilson": 38, "window": [0, 7, 35, 38, 41, 46, 85, 91, 92, 103, 107, 119], "windowboothmultipli": [7, 35, 42, 112], "windownafmultipli": [7, 35, 41, 112, 113], "wise": [70, 86, 91, 93], "with_sampl": [84, 94], "with_traceback": [7, 13, 14, 20, 72, 73, 78], "within": [3, 77, 83, 85, 89], "without": [19, 51, 101, 107, 114], "witteman": 85, "wnaf": [7, 46, 103], "word": 73, "work": [8, 9, 14, 21, 29, 36, 42, 51, 62, 73, 98, 102, 103, 108, 116, 117], "worker": [52, 111], "woudenberg": 85, "would": 117, "wrap": [17, 114], "wrapper": [68, 103], "write": [1, 3, 72, 76, 77, 82, 83, 95, 96, 97, 98, 99, 100, 111, 114], "write_bool": [95, 99], "write_float": [95, 99], "write_int": [95, 99], "write_str": [95, 99], "www": [57, 103, 119], "x": [3, 10, 11, 26, 28, 29, 30, 31, 32, 33, 34, 44, 60, 63, 70, 78, 103, 104, 105, 108, 110, 112, 113, 114, 119], "x1": [43, 63, 103], "x12": 109, "x2": [63, 103], "x23": 109, "x25519": 111, "x25519_ge_scalarmult_bas": 103, "x25519_keypair": 103, "x25519_neon": 103, "x25519_public_from_priv": 103, "x25519_scalar_mul_du": 103, "x25519_scalar_mult": 103, "x25519_scalar_mult_adx": 103, "x25519_scalar_mult_gener": 103, "x25519scalarmult": 103, "x3": 103, "x448": 103, "x86_64": 102, "x9": 11, "x94": 78, "x_label": [95, 99], "x_offset": [95, 99], "x_onli": 12, "x_poli": 114, "x_scale": [95, 99], "xarrai": [102, 112, 114], "xbatora": 105, "xlabel": [104, 105, 113], "xmega": [1, 4], "xo": 114, "xonli": [63, 114], "xonly_fset": 114, "xr": [112, 114], "xy": 103, "xy2d2": 103, "xyzz": [110, 114], "xz": [103, 110, 111, 114], "xz_dbl": 111, "xz_ladder": 111, "y": [3, 10, 11, 34, 44, 60, 63, 103, 104, 105, 108, 110, 112, 113, 114], "y1": [63, 103], "y2": 103, "y3": 103, "y_label": [95, 99], "y_poli": 114, "y_scale": [95, 99], "yaddx": 103, "yaxi": 112, "yet_anoth": 9, "yield": [52, 111, 114], "ylabel": [104, 105], "ylim": [104, 105], "ymax": 112, "ymin": 112, "yminisx2": 103, "yminusx": 103, "ymmv": 102, "you": [3, 11, 37, 87, 102, 111, 112, 114, 116], "your": 3, "youtub": 57, "yp": 119, "yplusx": 103, "yplusx2": 103, "ysquar": [7, 34], "ysubx": 103, "z": [10, 19, 44, 45, 63, 103, 104, 105, 106, 108, 110, 112, 113, 114], "z1": [15, 16, 17, 19, 51, 103], "z12": 103, "z2": [43, 103], "z256": [103, 111], "z256a": [103, 111], "z3": 103, "z_1": 103, "z_n": 29, "z_poli": 114, "zero": [60, 63, 72, 78, 111, 112, 114, 119], "zero_trac": 56, "zeronois": [53, 54, 57], "zip": [110, 114], "zt": 103, "zvp": [0, 53, 58, 101, 118, 119], "zvp_point": [53, 58, 63, 114], "zvp_re_amount_rate_asymmetr": 114, "zvp_re_amount_rate_binomi": 114, "zvp_re_amount_rate_symmetr": 114, "zvp_re_asymmetr": 114, "zvp_re_binomi": 114, "zvp_re_plot_asymmetr": 114, "zvp_re_plot_symmetr": 114, "zvp_re_precise_rate_asymmetr": 114, "zvp_re_precise_rate_binomi": 114, "zvp_re_precise_rate_symmetr": 114, "zvp_re_query_rate_asymmetr": 114, "zvp_re_query_rate_binomi": 114, "zvp_re_query_rate_symmetr": 114, "zvp_re_scatter_symmetr": 114, "zvp_re_success_rate_asymmetr": 114, "zvp_re_success_rate_binomi": 114, "zvp_re_success_rate_symmetr": 114, "zvp_re_symmetr": 114, "zz": 114, "\u2124\u2099": [28, 29, 30, 31, 32, 33]}, "titles": ["<span class=\"fas fa-code fa-fw\"></span> API reference", "pyecsca.codegen package", "pyecsca.codegen.builder module", "pyecsca.codegen.client module", "pyecsca.codegen.common module", "pyecsca.codegen.render module", "pyecsca.codegen.templates package", "pyecsca.ec package", "pyecsca.ec.configuration module", "pyecsca.ec.context module", "pyecsca.ec.coordinates module", "pyecsca.ec.curve module", "pyecsca.ec.divpoly module", "pyecsca.ec.error module", "pyecsca.ec.formula package", "pyecsca.ec.formula.base module", "pyecsca.ec.formula.code module", "pyecsca.ec.formula.efd module", "pyecsca.ec.formula.expand module", "pyecsca.ec.formula.fake module", "pyecsca.ec.formula.fliparoo module", "pyecsca.ec.formula.graph module", "pyecsca.ec.formula.metrics module", "pyecsca.ec.formula.partitions module", "pyecsca.ec.formula.switch_sign module", "pyecsca.ec.formula.unroll module", "pyecsca.ec.key_agreement module", "pyecsca.ec.key_generation module", "pyecsca.ec.mod package", "pyecsca.ec.mod.base module", "pyecsca.ec.mod.flint module", "pyecsca.ec.mod.gmp module", "pyecsca.ec.mod.raw module", "pyecsca.ec.mod.symbolic module", "pyecsca.ec.model module", "pyecsca.ec.mult package", "pyecsca.ec.mult.base module", "pyecsca.ec.mult.binary module", "pyecsca.ec.mult.comb module", "pyecsca.ec.mult.fixed module", "pyecsca.ec.mult.ladder module", "pyecsca.ec.mult.naf module", "pyecsca.ec.mult.window module", "pyecsca.ec.op module", "pyecsca.ec.params module", "pyecsca.ec.point module", "pyecsca.ec.scalar module", "pyecsca.ec.signature module", "pyecsca.ec.transformations module", "pyecsca.misc package", "pyecsca.misc.cache module", "pyecsca.misc.cfg module", "pyecsca.misc.utils module", "pyecsca.sca package", "pyecsca.sca.attack package", "pyecsca.sca.attack.CPA module", "pyecsca.sca.attack.DPA module", "pyecsca.sca.attack.leakage_model module", "pyecsca.sca.re package", "pyecsca.sca.re.base module", "pyecsca.sca.re.rpa module", "pyecsca.sca.re.structural module", "pyecsca.sca.re.tree module", "pyecsca.sca.re.zvp module", "pyecsca.sca.scope package", "pyecsca.sca.scope.base module", "pyecsca.sca.scope.chipwhisperer module", "pyecsca.sca.scope.picoscope_alt module", "pyecsca.sca.scope.picoscope_sdk module", "pyecsca.sca.stacked_traces package", "pyecsca.sca.stacked_traces.combine module", "pyecsca.sca.stacked_traces.stacked_traces module", "pyecsca.sca.target package", "pyecsca.sca.target.ISO7816 module", "pyecsca.sca.target.PCSC module", "pyecsca.sca.target.base module", "pyecsca.sca.target.binary module", "pyecsca.sca.target.chipwhisperer module", "pyecsca.sca.target.ectester module", "pyecsca.sca.target.flash module", "pyecsca.sca.target.leakage module", "pyecsca.sca.target.leia module", "pyecsca.sca.target.serial module", "pyecsca.sca.target.simpleserial module", "pyecsca.sca.trace package", "pyecsca.sca.trace.align module", "pyecsca.sca.trace.combine module", "pyecsca.sca.trace.edit module", "pyecsca.sca.trace.filter module", "pyecsca.sca.trace.match module", "pyecsca.sca.trace.plot module", "pyecsca.sca.trace.process module", "pyecsca.sca.trace.sampling module", "pyecsca.sca.trace.test module", "pyecsca.sca.trace.trace module", "pyecsca.sca.trace_set package", "pyecsca.sca.trace_set.base module", "pyecsca.sca.trace_set.chipwhisperer module", "pyecsca.sca.trace_set.hdf5 module", "pyecsca.sca.trace_set.inspector module", "pyecsca.sca.trace_set.pickle module", "pyecsca [p\u026a\u025btska]", "<span class=\"fas fa-screwdriver-wrench fa-fw\"></span> Installation", "<span class=\"fas fa-server fa-fw\"></span> ECC in Libraries", "Correlation Power Analysis", "Differential Power Analysis", "Code generation", "Configuration space", "Emulation and leakage simulation", "Measurement", "EPA-based reverse engineering", "Exploration of formulas in open-source ECC libraries", "RPA-based reverse-engineering", "Structural reverse-engineering", "ZVP-based reverse-engineering", "Simulation", "Smartcards", "Visualization", "<span class=\"fas fa-hand-pointer fa-fw\"></span> Notebooks", "<span class=\"fas fa-asterisk fa-fw\"></span> References"], "titleterms": {"224": 103, "256": 103, "384": 103, "521": 103, "The": 111, "about": 112, "accumul": 114, "addit": 114, "agreement": 115, "align": 85, "analysi": [104, 105, 111, 114], "api": 0, "asymmetr": 112, "attack": [54, 55, 56, 57, 104, 105], "base": [15, 29, 36, 59, 65, 75, 96, 110, 112, 114], "bearssl": 103, "binari": [37, 76], "boringssl": 103, "botan": 103, "bouncycastl": 103, "build": [106, 114], "builder": 2, "cach": 50, "cfg": 51, "chain": 114, "chang": [104, 105], "chipwhisper": [66, 77, 97], "client": 3, "code": [16, 106], "codegen": [1, 2, 3, 4, 5, 6, 102], "comb": 38, "combin": [70, 86], "common": 4, "comput": 114, "configur": [8, 107], "content": 103, "context": 9, "coordin": [10, 107], "core": 102, "correl": 104, "cpa": 55, "cryptographi": 103, "curv": 11, "devic": 109, "differenti": 105, "distinguish": 114, "divpoli": 12, "dpa": [56, 105], "ec": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "ecc": [103, 111], "ecdh": [103, 108], "ecdsa": [103, 108], "ectest": [78, 116], "ed25519": 103, "eddsa": 103, "edit": 87, "efd": 17, "effect": [104, 105], "emul": 108, "emulatortarget": 105, "engin": [110, 112, 113, 114], "enumer": 107, "epa": 110, "error": 13, "evalu": [104, 105, 114], "exampl": [2, 3], "expand": [18, 111], "explor": [110, 111, 112, 114], "factor": 114, "fake": 19, "fastecdsa": 103, "filter": 88, "fix": [39, 104, 105], "flash": 79, "flint": 30, "fliparoo": 20, "formula": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 111, 113, 114], "from": 103, "function": 108, "gener": [106, 108, 115], "gmp": 31, "go": 103, "graph": 21, "hacl": 103, "hdf5": 98, "host": 106, "initialis": [104, 105, 108, 115], "inspector": 99, "instal": 102, "intel": 103, "ipp": 103, "iso7816": 73, "kei": [108, 115], "key_agr": 26, "key_gener": 27, "ladder": 40, "leakag": [80, 105, 108], "leakage_model": 57, "leia": [81, 116], "libgcrypt": 103, "librari": [103, 111], "libressl": 103, "libsecp256k1": 103, "libtomcrypt": 103, "licens": 101, "load": 114, "map": 114, "match": 89, "mbedtl": 103, "measur": 109, "method": 112, "metric": 22, "micro": 103, "misc": [49, 50, 51, 52], "miscellan": [110, 114], "mod": [28, 29, 30, 31, 32, 33], "model": [34, 107], "modul": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100], "mult": [35, 36, 37, 38, 39, 40, 41, 42], "multipl": 108, "multipli": [107, 113], "naf": 41, "nettl": 103, "nois": [104, 105, 112], "notebook": [102, 118], "nss": 103, "number": [104, 105], "op": 43, "open": 111, "openssl": 103, "oracl": 112, "oscilloscop": 109, "p": 103, "packag": [1, 6, 7, 14, 28, 35, 49, 53, 54, 58, 64, 69, 72, 84, 95], "param": 44, "paramet": 103, "partit": 23, "pcsc": [74, 116], "perform": [104, 105], "pickl": 100, "picoscope_alt": 67, "picoscope_sdk": 68, "pippeng": 103, "plot": 90, "point": [45, 114], "polynomi": 114, "power": [104, 105], "primit": 103, "privat": 108, "process": 91, "public": 108, "pyecsca": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "p\u026a\u025btska": 101, "rate": [104, 105], "raw": 32, "re": [58, 59, 60, 61, 62, 63], "refer": [0, 119], "remap": 114, "render": 5, "requir": 102, "revers": [110, 112, 113, 114], "rpa": [60, 112], "run": 106, "sampl": 92, "sca": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "scalar": [46, 107, 108, 113], "scope": [64, 65, 66, 67, 68], "serial": 82, "set": [108, 114], "setup": 109, "sign": 115, "signatur": 47, "simpleseri": 83, "simul": [105, 108, 112, 115], "smartcard": 116, "sourc": 111, "spa": 108, "space": 107, "stacked_trac": [69, 70, 71], "structur": [61, 113], "submodul": [1, 7, 14, 28, 35, 49, 54, 58, 64, 69, 72, 84, 95], "subpackag": [1, 7, 53], "success": [104, 105], "sunec": 103, "switch_sign": 24, "symbol": 33, "symcrypt": 103, "symmetr": 112, "system": 107, "tabl": 103, "target": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "templat": 6, "test": 93, "trace": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 104, 105, 108, 115], "trace_set": [95, 96, 97, 98, 99, 100], "transform": 48, "tree": [62, 114], "unrol": 25, "util": 52, "visual": [109, 117], "walk": 115, "what": 112, "window": 42, "wolfssl": 103, "x25519": 103, "zvp": [63, 114]}})